!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=4)}([function(e,t,i){(function(t){e.exports=function e(t,i,n){function o(s,a){if(!i[s]){if(!t[s]){if(r)return r(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var c=i[s]={exports:{}};t[s][0].call(c.exports,(function(e){return o(t[s][1][e]||e)}),c,c.exports,e,t,i,n)}return i[s].exports}for(var r=!1,s=0;s<n.length;s++)o(n[s]);return o}({1:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vertices"),r=e("../geometry/Vector"),s=e("../core/Sleeping"),a=(e("../render/Render"),e("../core/Common")),l=e("../geometry/Bounds"),c=e("../geometry/Axes");!function(){n._inertiaScale=4,n._nextCollidingGroupId=1,n._nextNonCollidingGroupId=-1,n._nextCategory=1,n.create=function(t){var i={id:a.nextId(),type:"body",label:"Body",parts:[],plugin:{},angle:0,vertices:o.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),position:{x:0,y:0},force:{x:0,y:0},torque:0,positionImpulse:{x:0,y:0},constraintImpulse:{x:0,y:0,angle:0},totalContacts:0,speed:0,angularSpeed:0,velocity:{x:0,y:0},angularVelocity:0,isSensor:!1,isStatic:!1,isSleeping:!1,motion:0,sleepThreshold:60,density:.001,restitution:0,friction:.1,frictionStatic:.5,frictionAir:.01,collisionFilter:{category:1,mask:4294967295,group:0},slop:.05,timeScale:1,render:{visible:!0,opacity:1,sprite:{xScale:1,yScale:1,xOffset:0,yOffset:0},lineWidth:0}},n=a.extend(i,t);return e(n,t),n},n.nextGroup=function(e){return e?n._nextNonCollidingGroupId--:n._nextCollidingGroupId++},n.nextCategory=function(){return n._nextCategory=n._nextCategory<<1,n._nextCategory};var e=function(e,t){t=t||{},n.set(e,{bounds:e.bounds||l.create(e.vertices),positionPrev:e.positionPrev||r.clone(e.position),anglePrev:e.anglePrev||e.angle,vertices:e.vertices,parts:e.parts||[e],isStatic:e.isStatic,isSleeping:e.isSleeping,parent:e.parent||e}),o.rotate(e.vertices,e.angle,e.position),c.rotate(e.axes,e.angle),l.update(e.bounds,e.vertices,e.velocity),n.set(e,{axes:t.axes||e.axes,area:t.area||e.area,mass:t.mass||e.mass,inertia:t.inertia||e.inertia});var i=e.isStatic?"#2e2b44":a.choose(["#006BA6","#0496FF","#FFBC42","#D81159","#8F2D56"]);e.render.fillStyle=e.render.fillStyle||i,e.render.strokeStyle=e.render.strokeStyle||"#000",e.render.sprite.xOffset+=-(e.bounds.min.x-e.position.x)/(e.bounds.max.x-e.bounds.min.x),e.render.sprite.yOffset+=-(e.bounds.min.y-e.position.y)/(e.bounds.max.y-e.bounds.min.y)};n.set=function(e,t,i){var o;for(o in"string"==typeof t&&(o=t,(t={})[o]=i),t)if(i=t[o],t.hasOwnProperty(o))switch(o){case"isStatic":n.setStatic(e,i);break;case"isSleeping":s.set(e,i);break;case"mass":n.setMass(e,i);break;case"density":n.setDensity(e,i);break;case"inertia":n.setInertia(e,i);break;case"vertices":n.setVertices(e,i);break;case"position":n.setPosition(e,i);break;case"angle":n.setAngle(e,i);break;case"velocity":n.setVelocity(e,i);break;case"angularVelocity":n.setAngularVelocity(e,i);break;case"parts":n.setParts(e,i);break;default:e[o]=i}},n.setStatic=function(e,t){for(var i=0;i<e.parts.length;i++){var n=e.parts[i];n.isStatic=t,t?(n._original={restitution:n.restitution,friction:n.friction,mass:n.mass,inertia:n.inertia,density:n.density,inverseMass:n.inverseMass,inverseInertia:n.inverseInertia},n.restitution=0,n.friction=1,n.mass=n.inertia=n.density=1/0,n.inverseMass=n.inverseInertia=0,n.positionPrev.x=n.position.x,n.positionPrev.y=n.position.y,n.anglePrev=n.angle,n.angularVelocity=0,n.speed=0,n.angularSpeed=0,n.motion=0):n._original&&(n.restitution=n._original.restitution,n.friction=n._original.friction,n.mass=n._original.mass,n.inertia=n._original.inertia,n.density=n._original.density,n.inverseMass=n._original.inverseMass,n.inverseInertia=n._original.inverseInertia,delete n._original)}},n.setMass=function(e,t){var i=e.inertia/(e.mass/6);e.inertia=i*(t/6),e.inverseInertia=1/e.inertia,e.mass=t,e.inverseMass=1/e.mass,e.density=e.mass/e.area},n.setDensity=function(e,t){n.setMass(e,t*e.area),e.density=t},n.setInertia=function(e,t){e.inertia=t,e.inverseInertia=1/e.inertia},n.setVertices=function(e,t){t[0].body===e?e.vertices=t:e.vertices=o.create(t,e),e.axes=c.fromVertices(e.vertices),e.area=o.area(e.vertices),n.setMass(e,e.density*e.area);var i=o.centre(e.vertices);o.translate(e.vertices,i,-1),n.setInertia(e,n._inertiaScale*o.inertia(e.vertices,e.mass)),o.translate(e.vertices,e.position),l.update(e.bounds,e.vertices,e.velocity)},n.setParts=function(e,t,i){var r;for(t=t.slice(0),e.parts.length=0,e.parts.push(e),e.parent=e,r=0;r<t.length;r++){var s=t[r];s!==e&&(s.parent=e,e.parts.push(s))}if(1!==e.parts.length){if(i=void 0===i||i){var a=[];for(r=0;r<t.length;r++)a=a.concat(t[r].vertices);o.clockwiseSort(a);var l=o.hull(a),c=o.centre(l);n.setVertices(e,l),o.translate(e.vertices,c)}var d=n._totalProperties(e);e.area=d.area,e.parent=e,e.position.x=d.centre.x,e.position.y=d.centre.y,e.positionPrev.x=d.centre.x,e.positionPrev.y=d.centre.y,n.setMass(e,d.mass),n.setInertia(e,d.inertia),n.setPosition(e,d.centre)}},n.setPosition=function(e,t){var i=r.sub(t,e.position);e.positionPrev.x+=i.x,e.positionPrev.y+=i.y;for(var n=0;n<e.parts.length;n++){var s=e.parts[n];s.position.x+=i.x,s.position.y+=i.y,o.translate(s.vertices,i),l.update(s.bounds,s.vertices,e.velocity)}},n.setAngle=function(e,t){var i=t-e.angle;e.anglePrev+=i;for(var n=0;n<e.parts.length;n++){var s=e.parts[n];s.angle+=i,o.rotate(s.vertices,i,e.position),c.rotate(s.axes,i),l.update(s.bounds,s.vertices,e.velocity),n>0&&r.rotateAbout(s.position,i,e.position,s.position)}},n.setVelocity=function(e,t){e.positionPrev.x=e.position.x-t.x,e.positionPrev.y=e.position.y-t.y,e.velocity.x=t.x,e.velocity.y=t.y,e.speed=r.magnitude(e.velocity)},n.setAngularVelocity=function(e,t){e.anglePrev=e.angle-t,e.angularVelocity=t,e.angularSpeed=Math.abs(e.angularVelocity)},n.translate=function(e,t){n.setPosition(e,r.add(e.position,t))},n.rotate=function(e,t,i){if(i){var o=Math.cos(t),r=Math.sin(t),s=e.position.x-i.x,a=e.position.y-i.y;n.setPosition(e,{x:i.x+(s*o-a*r),y:i.y+(s*r+a*o)}),n.setAngle(e,e.angle+t)}else n.setAngle(e,e.angle+t)},n.scale=function(e,t,i,r){var s=0,a=0;r=r||e.position;for(var d=0;d<e.parts.length;d++){var u=e.parts[d];o.scale(u.vertices,t,i,r),u.axes=c.fromVertices(u.vertices),u.area=o.area(u.vertices),n.setMass(u,e.density*u.area),o.translate(u.vertices,{x:-u.position.x,y:-u.position.y}),n.setInertia(u,n._inertiaScale*o.inertia(u.vertices,u.mass)),o.translate(u.vertices,{x:u.position.x,y:u.position.y}),d>0&&(s+=u.area,a+=u.inertia),u.position.x=r.x+(u.position.x-r.x)*t,u.position.y=r.y+(u.position.y-r.y)*i,l.update(u.bounds,u.vertices,e.velocity)}e.parts.length>1&&(e.area=s,e.isStatic||(n.setMass(e,e.density*s),n.setInertia(e,a))),e.circleRadius&&(t===i?e.circleRadius*=t:e.circleRadius=null)},n.update=function(e,t,i,n){var s=Math.pow(t*i*e.timeScale,2),a=1-e.frictionAir*i*e.timeScale,d=e.position.x-e.positionPrev.x,u=e.position.y-e.positionPrev.y;e.velocity.x=d*a*n+e.force.x/e.mass*s,e.velocity.y=u*a*n+e.force.y/e.mass*s,e.positionPrev.x=e.position.x,e.positionPrev.y=e.position.y,e.position.x+=e.velocity.x,e.position.y+=e.velocity.y,e.angularVelocity=(e.angle-e.anglePrev)*a*n+e.torque/e.inertia*s,e.anglePrev=e.angle,e.angle+=e.angularVelocity,e.speed=r.magnitude(e.velocity),e.angularSpeed=Math.abs(e.angularVelocity);for(var p=0;p<e.parts.length;p++){var h=e.parts[p];o.translate(h.vertices,e.velocity),p>0&&(h.position.x+=e.velocity.x,h.position.y+=e.velocity.y),0!==e.angularVelocity&&(o.rotate(h.vertices,e.angularVelocity,e.position),c.rotate(h.axes,e.angularVelocity),p>0&&r.rotateAbout(h.position,e.angularVelocity,e.position,h.position)),l.update(h.bounds,h.vertices,e.velocity)}},n.applyForce=function(e,t,i){e.force.x+=i.x,e.force.y+=i.y;var n=t.x-e.position.x,o=t.y-e.position.y;e.torque+=n*i.y-o*i.x},n._totalProperties=function(e){for(var t={mass:0,area:0,inertia:0,centre:{x:0,y:0}},i=1===e.parts.length?0:1;i<e.parts.length;i++){var n=e.parts[i],o=n.mass!==1/0?n.mass:1;t.mass+=o,t.area+=n.area,t.inertia+=n.inertia,t.centre=r.add(t.centre,r.mult(n.position,o))}return t.centre=r.div(t.centre,t.mass),t}}()},{"../core/Common":14,"../core/Sleeping":22,"../geometry/Axes":25,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29,"../render/Render":31}],2:[function(e,t,i){var n={};t.exports=n;var o=e("../core/Events"),r=e("../core/Common"),s=e("../geometry/Bounds"),a=e("./Body");n.create=function(e){return r.extend({id:r.nextId(),type:"composite",parent:null,isModified:!1,bodies:[],constraints:[],composites:[],label:"Composite",plugin:{}},e)},n.setModified=function(e,t,i,o){if(e.isModified=t,i&&e.parent&&n.setModified(e.parent,t,i,o),o)for(var r=0;r<e.composites.length;r++){var s=e.composites[r];n.setModified(s,t,i,o)}},n.add=function(e,t){var i=[].concat(t);o.trigger(e,"beforeAdd",{object:t});for(var s=0;s<i.length;s++){var a=i[s];switch(a.type){case"body":if(a.parent!==a){r.warn("Composite.add: skipped adding a compound body part (you must add its parent instead)");break}n.addBody(e,a);break;case"constraint":n.addConstraint(e,a);break;case"composite":n.addComposite(e,a);break;case"mouseConstraint":n.addConstraint(e,a.constraint)}}return o.trigger(e,"afterAdd",{object:t}),e},n.remove=function(e,t,i){var r=[].concat(t);o.trigger(e,"beforeRemove",{object:t});for(var s=0;s<r.length;s++){var a=r[s];switch(a.type){case"body":n.removeBody(e,a,i);break;case"constraint":n.removeConstraint(e,a,i);break;case"composite":n.removeComposite(e,a,i);break;case"mouseConstraint":n.removeConstraint(e,a.constraint)}}return o.trigger(e,"afterRemove",{object:t}),e},n.addComposite=function(e,t){return e.composites.push(t),t.parent=e,n.setModified(e,!0,!0,!1),e},n.removeComposite=function(e,t,i){var o=r.indexOf(e.composites,t);if(-1!==o&&(n.removeCompositeAt(e,o),n.setModified(e,!0,!0,!1)),i)for(var s=0;s<e.composites.length;s++)n.removeComposite(e.composites[s],t,!0);return e},n.removeCompositeAt=function(e,t){return e.composites.splice(t,1),n.setModified(e,!0,!0,!1),e},n.addBody=function(e,t){return e.bodies.push(t),n.setModified(e,!0,!0,!1),e},n.removeBody=function(e,t,i){var o=r.indexOf(e.bodies,t);if(-1!==o&&(n.removeBodyAt(e,o),n.setModified(e,!0,!0,!1)),i)for(var s=0;s<e.composites.length;s++)n.removeBody(e.composites[s],t,!0);return e},n.removeBodyAt=function(e,t){return e.bodies.splice(t,1),n.setModified(e,!0,!0,!1),e},n.addConstraint=function(e,t){return e.constraints.push(t),n.setModified(e,!0,!0,!1),e},n.removeConstraint=function(e,t,i){var o=r.indexOf(e.constraints,t);if(-1!==o&&n.removeConstraintAt(e,o),i)for(var s=0;s<e.composites.length;s++)n.removeConstraint(e.composites[s],t,!0);return e},n.removeConstraintAt=function(e,t){return e.constraints.splice(t,1),n.setModified(e,!0,!0,!1),e},n.clear=function(e,t,i){if(i)for(var o=0;o<e.composites.length;o++)n.clear(e.composites[o],t,!0);return t?e.bodies=e.bodies.filter((function(e){return e.isStatic})):e.bodies.length=0,e.constraints.length=0,e.composites.length=0,n.setModified(e,!0,!0,!1),e},n.allBodies=function(e){for(var t=[].concat(e.bodies),i=0;i<e.composites.length;i++)t=t.concat(n.allBodies(e.composites[i]));return t},n.allConstraints=function(e){for(var t=[].concat(e.constraints),i=0;i<e.composites.length;i++)t=t.concat(n.allConstraints(e.composites[i]));return t},n.allComposites=function(e){for(var t=[].concat(e.composites),i=0;i<e.composites.length;i++)t=t.concat(n.allComposites(e.composites[i]));return t},n.get=function(e,t,i){var o,r;switch(i){case"body":o=n.allBodies(e);break;case"constraint":o=n.allConstraints(e);break;case"composite":o=n.allComposites(e).concat(e)}return o?0===(r=o.filter((function(e){return e.id.toString()===t.toString()}))).length?null:r[0]:null},n.move=function(e,t,i){return n.remove(e,t),n.add(i,t),e},n.rebase=function(e){for(var t=n.allBodies(e).concat(n.allConstraints(e)).concat(n.allComposites(e)),i=0;i<t.length;i++)t[i].id=r.nextId();return n.setModified(e,!0,!0,!1),e},n.translate=function(e,t,i){for(var o=i?n.allBodies(e):e.bodies,r=0;r<o.length;r++)a.translate(o[r],t);return n.setModified(e,!0,!0,!1),e},n.rotate=function(e,t,i,o){for(var r=Math.cos(t),s=Math.sin(t),l=o?n.allBodies(e):e.bodies,c=0;c<l.length;c++){var d=l[c],u=d.position.x-i.x,p=d.position.y-i.y;a.setPosition(d,{x:i.x+(u*r-p*s),y:i.y+(u*s+p*r)}),a.rotate(d,t)}return n.setModified(e,!0,!0,!1),e},n.scale=function(e,t,i,o,r){for(var s=r?n.allBodies(e):e.bodies,l=0;l<s.length;l++){var c=s[l],d=c.position.x-o.x,u=c.position.y-o.y;a.setPosition(c,{x:o.x+d*t,y:o.y+u*i}),a.scale(c,t,i)}return n.setModified(e,!0,!0,!1),e},n.bounds=function(e){for(var t=n.allBodies(e),i=[],o=0;o<t.length;o+=1){var r=t[o];i.push(r.bounds.min,r.bounds.max)}return s.create(i)}},{"../core/Common":14,"../core/Events":16,"../geometry/Bounds":26,"./Body":1}],3:[function(e,t,i){var n={};t.exports=n;var o=e("./Composite"),r=(e("../constraint/Constraint"),e("../core/Common"));n.create=function(e){var t=o.create();return r.extend(t,{label:"World",gravity:{x:0,y:1,scale:.001},bounds:{min:{x:-1/0,y:-1/0},max:{x:1/0,y:1/0}}},e)}},{"../constraint/Constraint":12,"../core/Common":14,"./Composite":2}],4:[function(e,t,i){var n={};t.exports=n,n.create=function(e){return{id:n.id(e),vertex:e,normalImpulse:0,tangentImpulse:0}},n.id=function(e){return e.body.id+"_"+e.index}},{}],5:[function(e,t,i){var n={};t.exports=n;var o=e("./SAT"),r=e("./Pair"),s=e("../geometry/Bounds");n.collisions=function(e,t){for(var i=[],a=t.pairs.table,l=0;l<e.length;l++){var c=e[l][0],d=e[l][1];if((!c.isStatic&&!c.isSleeping||!d.isStatic&&!d.isSleeping)&&n.canCollide(c.collisionFilter,d.collisionFilter)&&s.overlaps(c.bounds,d.bounds))for(var u=c.parts.length>1?1:0;u<c.parts.length;u++)for(var p=c.parts[u],h=d.parts.length>1?1:0;h<d.parts.length;h++){var m=d.parts[h];if(p===c&&m===d||s.overlaps(p.bounds,m.bounds)){var f,v=a[r.id(p,m)];f=v&&v.isActive?v.collision:null;var y=o.collides(p,m,f);y.collided&&i.push(y)}}}return i},n.canCollide=function(e,t){return e.group===t.group&&0!==e.group?e.group>0:0!=(e.mask&t.category)&&0!=(t.mask&e.category)}},{"../geometry/Bounds":26,"./Pair":7,"./SAT":11}],6:[function(e,t,i){var n={};t.exports=n;var o=e("./Pair"),r=e("./Detector"),s=e("../core/Common");n.create=function(e){var t={controller:n,detector:r.collisions,buckets:{},pairs:{},pairsList:[],bucketWidth:48,bucketHeight:48};return s.extend(t,e)},n.update=function(e,t,i,o){var r,s,a,l,c,d=i.world,u=e.buckets,p=!1;for(r=0;r<t.length;r++){var h=t[r];if((!h.isSleeping||o)&&!(h.bounds.max.x<d.bounds.min.x||h.bounds.min.x>d.bounds.max.x||h.bounds.max.y<d.bounds.min.y||h.bounds.min.y>d.bounds.max.y)){var m=n._getRegion(e,h);if(!h.region||m.id!==h.region.id||o){h.region&&!o||(h.region=m);var f=n._regionUnion(m,h.region);for(s=f.startCol;s<=f.endCol;s++)for(a=f.startRow;a<=f.endRow;a++){l=u[c=n._getBucketId(s,a)];var v=s>=m.startCol&&s<=m.endCol&&a>=m.startRow&&a<=m.endRow,y=s>=h.region.startCol&&s<=h.region.endCol&&a>=h.region.startRow&&a<=h.region.endRow;!v&&y&&y&&l&&n._bucketRemoveBody(e,l,h),(h.region===m||v&&!y||o)&&(l||(l=n._createBucket(u,c)),n._bucketAddBody(e,l,h))}h.region=m,p=!0}}}p&&(e.pairsList=n._createActivePairsList(e))},n.clear=function(e){e.buckets={},e.pairs={},e.pairsList=[]},n._regionUnion=function(e,t){var i=Math.min(e.startCol,t.startCol),o=Math.max(e.endCol,t.endCol),r=Math.min(e.startRow,t.startRow),s=Math.max(e.endRow,t.endRow);return n._createRegion(i,o,r,s)},n._getRegion=function(e,t){var i=t.bounds,o=Math.floor(i.min.x/e.bucketWidth),r=Math.floor(i.max.x/e.bucketWidth),s=Math.floor(i.min.y/e.bucketHeight),a=Math.floor(i.max.y/e.bucketHeight);return n._createRegion(o,r,s,a)},n._createRegion=function(e,t,i,n){return{id:e+","+t+","+i+","+n,startCol:e,endCol:t,startRow:i,endRow:n}},n._getBucketId=function(e,t){return"C"+e+"R"+t},n._createBucket=function(e,t){return e[t]=[]},n._bucketAddBody=function(e,t,i){for(var n=0;n<t.length;n++){var r=t[n];if(!(i.id===r.id||i.isStatic&&r.isStatic)){var s=o.id(i,r),a=e.pairs[s];a?a[2]+=1:e.pairs[s]=[i,r,1]}}t.push(i)},n._bucketRemoveBody=function(e,t,i){t.splice(s.indexOf(t,i),1);for(var n=0;n<t.length;n++){var r=t[n],a=o.id(i,r),l=e.pairs[a];l&&(l[2]-=1)}},n._createActivePairsList=function(e){var t,i,n=[];t=s.keys(e.pairs);for(var o=0;o<t.length;o++)(i=e.pairs[t[o]])[2]>0?n.push(i):delete e.pairs[t[o]];return n}},{"../core/Common":14,"./Detector":5,"./Pair":7}],7:[function(e,t,i){var n={};t.exports=n;var o=e("./Contact");n.create=function(e,t){var i=e.bodyA,o=e.bodyB,r=e.parentA,s=e.parentB,a={id:n.id(i,o),bodyA:i,bodyB:o,contacts:{},activeContacts:[],separation:0,isActive:!0,isSensor:i.isSensor||o.isSensor,timeCreated:t,timeUpdated:t,inverseMass:r.inverseMass+s.inverseMass,friction:Math.min(r.friction,s.friction),frictionStatic:Math.max(r.frictionStatic,s.frictionStatic),restitution:Math.max(r.restitution,s.restitution),slop:Math.max(r.slop,s.slop)};return n.update(a,e,t),a},n.update=function(e,t,i){var r=e.contacts,s=t.supports,a=e.activeContacts,l=t.parentA,c=t.parentB;if(e.collision=t,e.inverseMass=l.inverseMass+c.inverseMass,e.friction=Math.min(l.friction,c.friction),e.frictionStatic=Math.max(l.frictionStatic,c.frictionStatic),e.restitution=Math.max(l.restitution,c.restitution),e.slop=Math.max(l.slop,c.slop),a.length=0,t.collided){for(var d=0;d<s.length;d++){var u=s[d],p=o.id(u),h=r[p];h?a.push(h):a.push(r[p]=o.create(u))}e.separation=t.depth,n.setActive(e,!0,i)}else!0===e.isActive&&n.setActive(e,!1,i)},n.setActive=function(e,t,i){t?(e.isActive=!0,e.timeUpdated=i):(e.isActive=!1,e.activeContacts.length=0)},n.id=function(e,t){return e.id<t.id?"A"+e.id+"B"+t.id:"A"+t.id+"B"+e.id}},{"./Contact":4}],8:[function(e,t,i){var n={};t.exports=n;var o=e("./Pair"),r=e("../core/Common");n._pairMaxIdleLife=1e3,n.create=function(e){return r.extend({table:{},list:[],collisionStart:[],collisionActive:[],collisionEnd:[]},e)},n.update=function(e,t,i){var n,s,a,l,c=e.list,d=e.table,u=e.collisionStart,p=e.collisionEnd,h=e.collisionActive,m=[];for(u.length=0,p.length=0,h.length=0,l=0;l<t.length;l++)(n=t[l]).collided&&(s=o.id(n.bodyA,n.bodyB),m.push(s),(a=d[s])?(a.isActive?h.push(a):u.push(a),o.update(a,n,i)):(a=o.create(n,i),d[s]=a,u.push(a),c.push(a)));for(l=0;l<c.length;l++)(a=c[l]).isActive&&-1===r.indexOf(m,a.id)&&(o.setActive(a,!1,i),p.push(a))},n.removeOld=function(e,t){var i,o,r,s,a=e.list,l=e.table,c=[];for(s=0;s<a.length;s++)(o=(i=a[s]).collision).bodyA.isSleeping||o.bodyB.isSleeping?i.timeUpdated=t:t-i.timeUpdated>n._pairMaxIdleLife&&c.push(s);for(s=0;s<c.length;s++)delete l[(i=a[r=c[s]-s]).id],a.splice(r,1)},n.clear=function(e){return e.table={},e.list.length=0,e.collisionStart.length=0,e.collisionActive.length=0,e.collisionEnd.length=0,e}},{"../core/Common":14,"./Pair":7}],9:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vector"),r=e("./SAT"),s=e("../geometry/Bounds"),a=e("../factory/Bodies"),l=e("../geometry/Vertices");n.collides=function(e,t){for(var i=[],n=0;n<t.length;n++){var o=t[n];if(s.overlaps(o.bounds,e.bounds))for(var a=1===o.parts.length?0:1;a<o.parts.length;a++){var l=o.parts[a];if(s.overlaps(l.bounds,e.bounds)){var c=r.collides(l,e);if(c.collided){i.push(c);break}}}}return i},n.ray=function(e,t,i,r){r=r||1e-100;for(var s=o.angle(t,i),l=o.magnitude(o.sub(t,i)),c=.5*(i.x+t.x),d=.5*(i.y+t.y),u=a.rectangle(c,d,l,r,{angle:s}),p=n.collides(u,e),h=0;h<p.length;h+=1){var m=p[h];m.body=m.bodyB=m.bodyA}return p},n.region=function(e,t,i){for(var n=[],o=0;o<e.length;o++){var r=e[o],a=s.overlaps(r.bounds,t);(a&&!i||!a&&i)&&n.push(r)}return n},n.point=function(e,t){for(var i=[],n=0;n<e.length;n++){var o=e[n];if(s.contains(o.bounds,t))for(var r=1===o.parts.length?0:1;r<o.parts.length;r++){var a=o.parts[r];if(s.contains(a.bounds,t)&&l.contains(a.vertices,t)){i.push(o);break}}}return i}},{"../factory/Bodies":23,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29,"./SAT":11}],10:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vertices"),r=e("../geometry/Vector"),s=e("../core/Common"),a=e("../geometry/Bounds");n._restingThresh=4,n._restingThreshTangent=6,n._positionDampen=.9,n._positionWarming=.8,n._frictionNormalMultiplier=5,n.preSolvePosition=function(e){var t,i,n;for(t=0;t<e.length;t++)(i=e[t]).isActive&&(n=i.activeContacts.length,i.collision.parentA.totalContacts+=n,i.collision.parentB.totalContacts+=n)},n.solvePosition=function(e,t){var i,o,s,a,l,c,d,u,p,h=r._temp[0],m=r._temp[1],f=r._temp[2],v=r._temp[3];for(i=0;i<e.length;i++)(o=e[i]).isActive&&!o.isSensor&&(a=(s=o.collision).parentA,l=s.parentB,c=s.normal,d=r.sub(r.add(l.positionImpulse,l.position,h),r.add(a.positionImpulse,r.sub(l.position,s.penetration,m),f),v),o.separation=r.dot(c,d));for(i=0;i<e.length;i++)(o=e[i]).isActive&&!o.isSensor&&(a=(s=o.collision).parentA,l=s.parentB,c=s.normal,p=(o.separation-o.slop)*t,(a.isStatic||l.isStatic)&&(p*=2),a.isStatic||a.isSleeping||(u=n._positionDampen/a.totalContacts,a.positionImpulse.x+=c.x*p*u,a.positionImpulse.y+=c.y*p*u),l.isStatic||l.isSleeping||(u=n._positionDampen/l.totalContacts,l.positionImpulse.x-=c.x*p*u,l.positionImpulse.y-=c.y*p*u))},n.postSolvePosition=function(e){for(var t=0;t<e.length;t++){var i=e[t];if(i.totalContacts=0,0!==i.positionImpulse.x||0!==i.positionImpulse.y){for(var s=0;s<i.parts.length;s++){var l=i.parts[s];o.translate(l.vertices,i.positionImpulse),a.update(l.bounds,l.vertices,i.velocity),l.position.x+=i.positionImpulse.x,l.position.y+=i.positionImpulse.y}i.positionPrev.x+=i.positionImpulse.x,i.positionPrev.y+=i.positionImpulse.y,r.dot(i.positionImpulse,i.velocity)<0?(i.positionImpulse.x=0,i.positionImpulse.y=0):(i.positionImpulse.x*=n._positionWarming,i.positionImpulse.y*=n._positionWarming)}}},n.preSolveVelocity=function(e){var t,i,n,o,s,a,l,c,d,u,p,h,m,f,v=r._temp[0],y=r._temp[1];for(t=0;t<e.length;t++)if((n=e[t]).isActive&&!n.isSensor)for(o=n.activeContacts,a=(s=n.collision).parentA,l=s.parentB,c=s.normal,d=s.tangent,i=0;i<o.length;i++)p=(u=o[i]).vertex,h=u.normalImpulse,m=u.tangentImpulse,0===h&&0===m||(v.x=c.x*h+d.x*m,v.y=c.y*h+d.y*m,a.isStatic||a.isSleeping||(f=r.sub(p,a.position,y),a.positionPrev.x+=v.x*a.inverseMass,a.positionPrev.y+=v.y*a.inverseMass,a.anglePrev+=r.cross(f,v)*a.inverseInertia),l.isStatic||l.isSleeping||(f=r.sub(p,l.position,y),l.positionPrev.x-=v.x*l.inverseMass,l.positionPrev.y-=v.y*l.inverseMass,l.anglePrev-=r.cross(f,v)*l.inverseInertia))},n.solveVelocity=function(e,t){for(var i=t*t,o=r._temp[0],a=r._temp[1],l=r._temp[2],c=r._temp[3],d=r._temp[4],u=r._temp[5],p=0;p<e.length;p++){var h=e[p];if(h.isActive&&!h.isSensor){var m=h.collision,f=m.parentA,v=m.parentB,y=m.normal,g=m.tangent,x=h.activeContacts,b=1/x.length;f.velocity.x=f.position.x-f.positionPrev.x,f.velocity.y=f.position.y-f.positionPrev.y,v.velocity.x=v.position.x-v.positionPrev.x,v.velocity.y=v.position.y-v.positionPrev.y,f.angularVelocity=f.angle-f.anglePrev,v.angularVelocity=v.angle-v.anglePrev;for(var w=0;w<x.length;w++){var S=x[w],C=S.vertex,P=r.sub(C,f.position,a),A=r.sub(C,v.position,l),I=r.add(f.velocity,r.mult(r.perp(P),f.angularVelocity),c),M=r.add(v.velocity,r.mult(r.perp(A),v.angularVelocity),d),B=r.sub(I,M,u),_=r.dot(y,B),T=r.dot(g,B),k=Math.abs(T),V=s.sign(T),R=(1+h.restitution)*_,E=s.clamp(h.separation+_,0,1)*n._frictionNormalMultiplier,L=T,F=1/0;k>h.friction*h.frictionStatic*E*i&&(F=k,L=s.clamp(h.friction*V*i,-F,F));var O=r.cross(P,y),D=r.cross(A,y),W=b/(f.inverseMass+v.inverseMass+f.inverseInertia*O*O+v.inverseInertia*D*D);if(R*=W,L*=W,_<0&&_*_>n._restingThresh*i)S.normalImpulse=0;else{var q=S.normalImpulse;S.normalImpulse=Math.min(S.normalImpulse+R,0),R=S.normalImpulse-q}if(T*T>n._restingThreshTangent*i)S.tangentImpulse=0;else{var z=S.tangentImpulse;S.tangentImpulse=s.clamp(S.tangentImpulse+L,-F,F),L=S.tangentImpulse-z}o.x=y.x*R+g.x*L,o.y=y.y*R+g.y*L,f.isStatic||f.isSleeping||(f.positionPrev.x+=o.x*f.inverseMass,f.positionPrev.y+=o.y*f.inverseMass,f.anglePrev+=r.cross(P,o)*f.inverseInertia),v.isStatic||v.isSleeping||(v.positionPrev.x-=o.x*v.inverseMass,v.positionPrev.y-=o.y*v.inverseMass,v.anglePrev-=r.cross(A,o)*v.inverseInertia)}}}}},{"../core/Common":14,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29}],11:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vertices"),r=e("../geometry/Vector");n.collides=function(e,t,i){var s,a,l,c,d=!1;if(i){var u=e.parent,p=t.parent,h=u.speed*u.speed+u.angularSpeed*u.angularSpeed+p.speed*p.speed+p.angularSpeed*p.angularSpeed;d=i&&i.collided&&h<.2,c=i}else c={collided:!1,bodyA:e,bodyB:t};if(i&&d){var m=c.axisBody,f=m===e?t:e,v=[m.axes[i.axisNumber]];if(l=n._overlapAxes(m.vertices,f.vertices,v),c.reused=!0,l.overlap<=0)return c.collided=!1,c}else{if((s=n._overlapAxes(e.vertices,t.vertices,e.axes)).overlap<=0)return c.collided=!1,c;if((a=n._overlapAxes(t.vertices,e.vertices,t.axes)).overlap<=0)return c.collided=!1,c;s.overlap<a.overlap?(l=s,c.axisBody=e):(l=a,c.axisBody=t),c.axisNumber=l.axisNumber}c.bodyA=e.id<t.id?e:t,c.bodyB=e.id<t.id?t:e,c.collided=!0,c.depth=l.overlap,c.parentA=c.bodyA.parent,c.parentB=c.bodyB.parent,e=c.bodyA,t=c.bodyB,r.dot(l.axis,r.sub(t.position,e.position))<0?c.normal={x:l.axis.x,y:l.axis.y}:c.normal={x:-l.axis.x,y:-l.axis.y},c.tangent=r.perp(c.normal),c.penetration=c.penetration||{},c.penetration.x=c.normal.x*c.depth,c.penetration.y=c.normal.y*c.depth;var y=n._findSupports(e,t,c.normal),g=[];if(o.contains(e.vertices,y[0])&&g.push(y[0]),o.contains(e.vertices,y[1])&&g.push(y[1]),g.length<2){var x=n._findSupports(t,e,r.neg(c.normal));o.contains(t.vertices,x[0])&&g.push(x[0]),g.length<2&&o.contains(t.vertices,x[1])&&g.push(x[1])}return g.length<1&&(g=[y[0]]),c.supports=g,c},n._overlapAxes=function(e,t,i){for(var o,s,a=r._temp[0],l=r._temp[1],c={overlap:Number.MAX_VALUE},d=0;d<i.length;d++){if(s=i[d],n._projectToAxis(a,e,s),n._projectToAxis(l,t,s),(o=Math.min(a.max-l.min,l.max-a.min))<=0)return c.overlap=o,c;o<c.overlap&&(c.overlap=o,c.axis=s,c.axisNumber=d)}return c},n._projectToAxis=function(e,t,i){for(var n=r.dot(t[0],i),o=n,s=1;s<t.length;s+=1){var a=r.dot(t[s],i);a>o?o=a:a<n&&(n=a)}e.min=n,e.max=o},n._findSupports=function(e,t,i){for(var n,o,s,a,l=Number.MAX_VALUE,c=r._temp[0],d=t.vertices,u=e.position,p=0;p<d.length;p++)o=d[p],c.x=o.x-u.x,c.y=o.y-u.y,(n=-r.dot(i,c))<l&&(l=n,s=o);return o=d[s.index-1>=0?s.index-1:d.length-1],c.x=o.x-u.x,c.y=o.y-u.y,l=-r.dot(i,c),a=o,o=d[(s.index+1)%d.length],c.x=o.x-u.x,c.y=o.y-u.y,(n=-r.dot(i,c))<l&&(a=o),[s,a]}},{"../geometry/Vector":28,"../geometry/Vertices":29}],12:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vertices"),r=e("../geometry/Vector"),s=e("../core/Sleeping"),a=e("../geometry/Bounds"),l=e("../geometry/Axes"),c=e("../core/Common");n._warming=.4,n._torqueDampen=1,n._minLength=1e-6,n.create=function(e){var t=e;t.bodyA&&!t.pointA&&(t.pointA={x:0,y:0}),t.bodyB&&!t.pointB&&(t.pointB={x:0,y:0});var i=t.bodyA?r.add(t.bodyA.position,t.pointA):t.pointA,n=t.bodyB?r.add(t.bodyB.position,t.pointB):t.pointB,o=r.magnitude(r.sub(i,n));t.length=void 0!==t.length?t.length:o,t.id=t.id||c.nextId(),t.label=t.label||"Constraint",t.type="constraint",t.stiffness=t.stiffness||(t.length>0?1:.7),t.damping=t.damping||0,t.angularStiffness=t.angularStiffness||0,t.angleA=t.bodyA?t.bodyA.angle:t.angleA,t.angleB=t.bodyB?t.bodyB.angle:t.angleB,t.plugin={};var s={visible:!0,lineWidth:2,strokeStyle:"#ffffff",type:"line",anchors:!0};return 0===t.length&&t.stiffness>.1?(s.type="pin",s.anchors=!1):t.stiffness<.9&&(s.type="spring"),t.render=c.extend(s,t.render),t},n.preSolveAll=function(e){for(var t=0;t<e.length;t+=1){var i=e[t],n=i.constraintImpulse;i.isStatic||0===n.x&&0===n.y&&0===n.angle||(i.position.x+=n.x,i.position.y+=n.y,i.angle+=n.angle)}},n.solveAll=function(e,t){for(var i=0;i<e.length;i+=1){var o=e[i],r=!o.bodyA||o.bodyA&&o.bodyA.isStatic,s=!o.bodyB||o.bodyB&&o.bodyB.isStatic;(r||s)&&n.solve(e[i],t)}for(i=0;i<e.length;i+=1)r=!(o=e[i]).bodyA||o.bodyA&&o.bodyA.isStatic,s=!o.bodyB||o.bodyB&&o.bodyB.isStatic,r||s||n.solve(e[i],t)},n.solve=function(e,t){var i=e.bodyA,o=e.bodyB,s=e.pointA,a=e.pointB;if(i||o){i&&!i.isStatic&&(r.rotate(s,i.angle-e.angleA,s),e.angleA=i.angle),o&&!o.isStatic&&(r.rotate(a,o.angle-e.angleB,a),e.angleB=o.angle);var l=s,c=a;if(i&&(l=r.add(i.position,s)),o&&(c=r.add(o.position,a)),l&&c){var d=r.sub(l,c),u=r.magnitude(d);u<n._minLength&&(u=n._minLength);var p,h,m,f,v,y=(u-e.length)/u,g=e.stiffness<1?e.stiffness*t:e.stiffness,x=r.mult(d,y*g),b=(i?i.inverseMass:0)+(o?o.inverseMass:0),w=b+((i?i.inverseInertia:0)+(o?o.inverseInertia:0));if(e.damping){var S=r.create();m=r.div(d,u),v=r.sub(o&&r.sub(o.position,o.positionPrev)||S,i&&r.sub(i.position,i.positionPrev)||S),f=r.dot(m,v)}i&&!i.isStatic&&(h=i.inverseMass/b,i.constraintImpulse.x-=x.x*h,i.constraintImpulse.y-=x.y*h,i.position.x-=x.x*h,i.position.y-=x.y*h,e.damping&&(i.positionPrev.x-=e.damping*m.x*f*h,i.positionPrev.y-=e.damping*m.y*f*h),p=r.cross(s,x)/w*n._torqueDampen*i.inverseInertia*(1-e.angularStiffness),i.constraintImpulse.angle-=p,i.angle-=p),o&&!o.isStatic&&(h=o.inverseMass/b,o.constraintImpulse.x+=x.x*h,o.constraintImpulse.y+=x.y*h,o.position.x+=x.x*h,o.position.y+=x.y*h,e.damping&&(o.positionPrev.x+=e.damping*m.x*f*h,o.positionPrev.y+=e.damping*m.y*f*h),p=r.cross(a,x)/w*n._torqueDampen*o.inverseInertia*(1-e.angularStiffness),o.constraintImpulse.angle+=p,o.angle+=p)}}},n.postSolveAll=function(e){for(var t=0;t<e.length;t++){var i=e[t],c=i.constraintImpulse;if(!(i.isStatic||0===c.x&&0===c.y&&0===c.angle)){s.set(i,!1);for(var d=0;d<i.parts.length;d++){var u=i.parts[d];o.translate(u.vertices,c),d>0&&(u.position.x+=c.x,u.position.y+=c.y),0!==c.angle&&(o.rotate(u.vertices,c.angle,i.position),l.rotate(u.axes,c.angle),d>0&&r.rotateAbout(u.position,c.angle,i.position,u.position)),a.update(u.bounds,u.vertices,i.velocity)}c.angle*=n._warming,c.x*=n._warming,c.y*=n._warming}}}},{"../core/Common":14,"../core/Sleeping":22,"../geometry/Axes":25,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29}],13:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vertices"),r=e("../core/Sleeping"),s=e("../core/Mouse"),a=e("../core/Events"),l=e("../collision/Detector"),c=e("./Constraint"),d=e("../body/Composite"),u=e("../core/Common"),p=e("../geometry/Bounds");n.create=function(e,t){var i=(e?e.mouse:null)||(t?t.mouse:null);i||(e&&e.render&&e.render.canvas?i=s.create(e.render.canvas):t&&t.element?i=s.create(t.element):(i=s.create(),u.warn("MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected")));var o={type:"mouseConstraint",mouse:i,element:null,body:null,constraint:c.create({label:"Mouse Constraint",pointA:i.position,pointB:{x:0,y:0},length:.01,stiffness:.1,angularStiffness:1,render:{strokeStyle:"#90EE90",lineWidth:3}}),collisionFilter:{category:1,mask:4294967295,group:0}},r=u.extend(o,t);return a.on(e,"beforeUpdate",(function(){var t=d.allBodies(e.world);n.update(r,t),n._triggerEvents(r)})),r},n.update=function(e,t){var i=e.mouse,n=e.constraint,s=e.body;if(0===i.button){if(n.bodyB)r.set(n.bodyB,!1),n.pointA=i.position;else for(var c=0;c<t.length;c++)if(s=t[c],p.contains(s.bounds,i.position)&&l.canCollide(s.collisionFilter,e.collisionFilter))for(var d=s.parts.length>1?1:0;d<s.parts.length;d++){var u=s.parts[d];if(o.contains(u.vertices,i.position)){n.pointA=i.position,n.bodyB=e.body=s,n.pointB={x:i.position.x-s.position.x,y:i.position.y-s.position.y},n.angleB=s.angle,r.set(s,!1),a.trigger(e,"startdrag",{mouse:i,body:s});break}}}else n.bodyB=e.body=null,n.pointB=null,s&&a.trigger(e,"enddrag",{mouse:i,body:s})},n._triggerEvents=function(e){var t=e.mouse,i=t.sourceEvents;i.mousemove&&a.trigger(e,"mousemove",{mouse:t}),i.mousedown&&a.trigger(e,"mousedown",{mouse:t}),i.mouseup&&a.trigger(e,"mouseup",{mouse:t}),s.clearSourceEvents(t)}},{"../body/Composite":2,"../collision/Detector":5,"../core/Common":14,"../core/Events":16,"../core/Mouse":19,"../core/Sleeping":22,"../geometry/Bounds":26,"../geometry/Vertices":29,"./Constraint":12}],14:[function(e,i,n){(function(t){var n={};i.exports=n,function(){n._nextId=0,n._seed=0,n._nowStartTime=+new Date,n.extend=function(e,t){var i,o;"boolean"==typeof t?(i=2,o=t):(i=1,o=!0);for(var r=i;r<arguments.length;r++){var s=arguments[r];if(s)for(var a in s)o&&s[a]&&s[a].constructor===Object?e[a]&&e[a].constructor!==Object?e[a]=s[a]:(e[a]=e[a]||{},n.extend(e[a],o,s[a])):e[a]=s[a]}return e},n.clone=function(e,t){return n.extend({},t,e)},n.keys=function(e){if(Object.keys)return Object.keys(e);var t=[];for(var i in e)t.push(i);return t},n.values=function(e){var t=[];if(Object.keys){for(var i=Object.keys(e),n=0;n<i.length;n++)t.push(e[i[n]]);return t}for(var o in e)t.push(e[o]);return t},n.get=function(e,t,i,n){t=t.split(".").slice(i,n);for(var o=0;o<t.length;o+=1)e=e[t[o]];return e},n.set=function(e,t,i,o,r){var s=t.split(".").slice(o,r);return n.get(e,t,0,-1)[s[s.length-1]]=i,i},n.shuffle=function(e){for(var t=e.length-1;t>0;t--){var i=Math.floor(n.random()*(t+1)),o=e[t];e[t]=e[i],e[i]=o}return e},n.choose=function(e){return e[Math.floor(n.random()*e.length)]},n.isElement=function(e){return"undefined"!=typeof HTMLElement?e instanceof HTMLElement:!!(e&&e.nodeType&&e.nodeName)},n.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)},n.isFunction=function(e){return"function"==typeof e},n.isPlainObject=function(e){return"object"==typeof e&&e.constructor===Object},n.isString=function(e){return"[object String]"===toString.call(e)},n.clamp=function(e,t,i){return e<t?t:e>i?i:e},n.sign=function(e){return e<0?-1:1},n.now=function(){if(window.performance){if(window.performance.now)return window.performance.now();if(window.performance.webkitNow)return window.performance.webkitNow()}return new Date-n._nowStartTime},n.random=function(e,t){return t=void 0!==t?t:1,(e=void 0!==e?e:0)+i()*(t-e)};var i=function(){return n._seed=(9301*n._seed+49297)%233280,n._seed/233280};n.colorToNumber=function(e){return 3==(e=e.replace("#","")).length&&(e=e.charAt(0)+e.charAt(0)+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)),parseInt(e,16)},n.logLevel=1,n.log=function(){console&&n.logLevel>0&&n.logLevel<=3&&console.log.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},n.info=function(){console&&n.logLevel>0&&n.logLevel<=2&&console.info.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},n.warn=function(){console&&n.logLevel>0&&n.logLevel<=3&&console.warn.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},n.nextId=function(){return n._nextId++},n.indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);for(var i=0;i<e.length;i++)if(e[i]===t)return i;return-1},n.map=function(e,t){if(e.map)return e.map(t);for(var i=[],n=0;n<e.length;n+=1)i.push(t(e[n]));return i},n.topologicalSort=function(e){var t=[],i=[],o=[];for(var r in e)i[r]||o[r]||n._topologicalSort(r,i,o,e,t);return t},n._topologicalSort=function(e,t,i,o,r){var s=o[e]||[];i[e]=!0;for(var a=0;a<s.length;a+=1){var l=s[a];i[l]||t[l]||n._topologicalSort(l,t,i,o,r)}i[e]=!1,t[e]=!0,r.push(e)},n.chain=function(){for(var e=[],t=0;t<arguments.length;t+=1){var i=arguments[t];i._chained?e.push.apply(e,i._chained):e.push(i)}var n=function(){for(var t,i=new Array(arguments.length),n=0,o=arguments.length;n<o;n++)i[n]=arguments[n];for(n=0;n<e.length;n+=1){var r=e[n].apply(t,i);void 0!==r&&(t=r)}return t};return n._chained=e,n},n.chainPathBefore=function(e,t,i){return n.set(e,t,n.chain(i,n.get(e,t)))},n.chainPathAfter=function(e,t,i){return n.set(e,t,n.chain(n.get(e,t),i))},n._requireGlobal=function(i,n){return("undefined"!=typeof window?window[i]:void 0!==t?t[i]:null)||e(n)}}()}).call(this,void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],15:[function(e,t,i){var n={};t.exports=n;var o=e("../body/World"),r=e("./Sleeping"),s=e("../collision/Resolver"),a=e("../render/Render"),l=e("../collision/Pairs"),c=(e("./Metrics"),e("../collision/Grid")),d=e("./Events"),u=e("../body/Composite"),p=e("../constraint/Constraint"),h=e("./Common"),m=e("../body/Body");n.create=function(e,t){t=(t=h.isElement(e)?t:e)||{},((e=h.isElement(e)?e:null)||t.render)&&h.warn("Engine.create: engine.render is deprecated (see docs)");var i={positionIterations:6,velocityIterations:4,constraintIterations:2,enableSleeping:!1,events:[],plugin:{},timing:{timestamp:0,timeScale:1},broadphase:{controller:c}},n=h.extend(i,t);if(e||n.render){var r={element:e,controller:a};n.render=h.extend(r,n.render)}return n.render&&n.render.controller&&(n.render=n.render.controller.create(n.render)),n.render&&(n.render.engine=n),n.world=t.world||o.create(n.world),n.pairs=l.create(),n.broadphase=n.broadphase.controller.create(n.broadphase),n.metrics=n.metrics||{extended:!1},n},n.update=function(e,t,i){t=t||1e3/60,i=i||1;var o,a=e.world,c=e.timing,h=e.broadphase,m=[];c.timestamp+=t*c.timeScale;var f={timestamp:c.timestamp};d.trigger(e,"beforeUpdate",f);var v=u.allBodies(a),y=u.allConstraints(a);for(e.enableSleeping&&r.update(v,c.timeScale),n._bodiesApplyGravity(v,a.gravity),n._bodiesUpdate(v,t,c.timeScale,i,a.bounds),p.preSolveAll(v),o=0;o<e.constraintIterations;o++)p.solveAll(y,c.timeScale);p.postSolveAll(v),h.controller?(a.isModified&&h.controller.clear(h),h.controller.update(h,v,e,a.isModified),m=h.pairsList):m=v,a.isModified&&u.setModified(a,!1,!1,!0);var g=h.detector(m,e),x=e.pairs,b=c.timestamp;for(l.update(x,g,b),l.removeOld(x,b),e.enableSleeping&&r.afterCollisions(x.list,c.timeScale),x.collisionStart.length>0&&d.trigger(e,"collisionStart",{pairs:x.collisionStart}),s.preSolvePosition(x.list),o=0;o<e.positionIterations;o++)s.solvePosition(x.list,c.timeScale);for(s.postSolvePosition(v),p.preSolveAll(v),o=0;o<e.constraintIterations;o++)p.solveAll(y,c.timeScale);for(p.postSolveAll(v),s.preSolveVelocity(x.list),o=0;o<e.velocityIterations;o++)s.solveVelocity(x.list,c.timeScale);return x.collisionActive.length>0&&d.trigger(e,"collisionActive",{pairs:x.collisionActive}),x.collisionEnd.length>0&&d.trigger(e,"collisionEnd",{pairs:x.collisionEnd}),n._bodiesClearForces(v),d.trigger(e,"afterUpdate",f),e},n.merge=function(e,t){if(h.extend(e,t),t.world){e.world=t.world,n.clear(e);for(var i=u.allBodies(e.world),o=0;o<i.length;o++){var s=i[o];r.set(s,!1),s.id=h.nextId()}}},n.clear=function(e){var t=e.world;l.clear(e.pairs);var i=e.broadphase;if(i.controller){var n=u.allBodies(t);i.controller.clear(i),i.controller.update(i,n,e,!0)}},n._bodiesClearForces=function(e){for(var t=0;t<e.length;t++){var i=e[t];i.force.x=0,i.force.y=0,i.torque=0}},n._bodiesApplyGravity=function(e,t){var i=void 0!==t.scale?t.scale:.001;if((0!==t.x||0!==t.y)&&0!==i)for(var n=0;n<e.length;n++){var o=e[n];o.isStatic||o.isSleeping||(o.force.y+=o.mass*t.y*i,o.force.x+=o.mass*t.x*i)}},n._bodiesUpdate=function(e,t,i,n,o){for(var r=0;r<e.length;r++){var s=e[r];s.isStatic||s.isSleeping||m.update(s,t,i,n)}}},{"../body/Body":1,"../body/Composite":2,"../body/World":3,"../collision/Grid":6,"../collision/Pairs":8,"../collision/Resolver":10,"../constraint/Constraint":12,"../render/Render":31,"./Common":14,"./Events":16,"./Metrics":18,"./Sleeping":22}],16:[function(e,t,i){var n={};t.exports=n;var o=e("./Common");n.on=function(e,t,i){for(var n,o=t.split(" "),r=0;r<o.length;r++)n=o[r],e.events=e.events||{},e.events[n]=e.events[n]||[],e.events[n].push(i);return i},n.off=function(e,t,i){if(t){"function"==typeof t&&(i=t,t=o.keys(e.events).join(" "));for(var n=t.split(" "),r=0;r<n.length;r++){var s=e.events[n[r]],a=[];if(i&&s)for(var l=0;l<s.length;l++)s[l]!==i&&a.push(s[l]);e.events[n[r]]=a}}else e.events={}},n.trigger=function(e,t,i){var n,r,s,a;if(e.events){i||(i={}),n=t.split(" ");for(var l=0;l<n.length;l++)if(r=n[l],s=e.events[r]){(a=o.clone(i,!1)).name=r,a.source=e;for(var c=0;c<s.length;c++)s[c].apply(e,[a])}}}},{"./Common":14}],17:[function(e,t,i){var n={};t.exports=n;var o=e("./Plugin"),r=e("./Common");n.name="matter-js",n.version="0.14.2",n.uses=[],n.used=[],n.use=function(){o.use(n,Array.prototype.slice.call(arguments))},n.before=function(e,t){return e=e.replace(/^Matter./,""),r.chainPathBefore(n,e,t)},n.after=function(e,t){return e=e.replace(/^Matter./,""),r.chainPathAfter(n,e,t)}},{"./Common":14,"./Plugin":20}],18:[function(e,t,i){},{"../body/Composite":2,"./Common":14}],19:[function(e,t,i){var n={};t.exports=n;var o=e("../core/Common");n.create=function(e){var t={};return e||o.log("Mouse.create: element was undefined, defaulting to document.body","warn"),t.element=e||document.body,t.absolute={x:0,y:0},t.position={x:0,y:0},t.mousedownPosition={x:0,y:0},t.mouseupPosition={x:0,y:0},t.offset={x:0,y:0},t.scale={x:1,y:1},t.wheelDelta=0,t.button=-1,t.pixelRatio=t.element.getAttribute("data-pixel-ratio")||1,t.sourceEvents={mousemove:null,mousedown:null,mouseup:null,mousewheel:null},t.mousemove=function(e){var i=n._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches&&(t.button=0,e.preventDefault()),t.absolute.x=i.x,t.absolute.y=i.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.sourceEvents.mousemove=e},t.mousedown=function(e){var i=n._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches?(t.button=0,e.preventDefault()):t.button=e.button,t.absolute.x=i.x,t.absolute.y=i.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mousedownPosition.x=t.position.x,t.mousedownPosition.y=t.position.y,t.sourceEvents.mousedown=e},t.mouseup=function(e){var i=n._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches&&e.preventDefault(),t.button=-1,t.absolute.x=i.x,t.absolute.y=i.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mouseupPosition.x=t.position.x,t.mouseupPosition.y=t.position.y,t.sourceEvents.mouseup=e},t.mousewheel=function(e){t.wheelDelta=Math.max(-1,Math.min(1,e.wheelDelta||-e.detail)),e.preventDefault()},n.setElement(t,t.element),t},n.setElement=function(e,t){e.element=t,t.addEventListener("mousemove",e.mousemove),t.addEventListener("mousedown",e.mousedown),t.addEventListener("mouseup",e.mouseup),t.addEventListener("mousewheel",e.mousewheel),t.addEventListener("DOMMouseScroll",e.mousewheel),t.addEventListener("touchmove",e.mousemove),t.addEventListener("touchstart",e.mousedown),t.addEventListener("touchend",e.mouseup)},n.clearSourceEvents=function(e){e.sourceEvents.mousemove=null,e.sourceEvents.mousedown=null,e.sourceEvents.mouseup=null,e.sourceEvents.mousewheel=null,e.wheelDelta=0},n.setOffset=function(e,t){e.offset.x=t.x,e.offset.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},n.setScale=function(e,t){e.scale.x=t.x,e.scale.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},n._getRelativeMousePosition=function(e,t,i){var n,o,r=t.getBoundingClientRect(),s=document.documentElement||document.body.parentNode||document.body,a=void 0!==window.pageXOffset?window.pageXOffset:s.scrollLeft,l=void 0!==window.pageYOffset?window.pageYOffset:s.scrollTop,c=e.changedTouches;return c?(n=c[0].pageX-r.left-a,o=c[0].pageY-r.top-l):(n=e.pageX-r.left-a,o=e.pageY-r.top-l),{x:n/(t.clientWidth/(t.width||t.clientWidth)*i),y:o/(t.clientHeight/(t.height||t.clientHeight)*i)}}},{"../core/Common":14}],20:[function(e,t,i){var n={};t.exports=n;var o=e("./Common");n._registry={},n.register=function(e){if(n.isPlugin(e)||o.warn("Plugin.register:",n.toString(e),"does not implement all required fields."),e.name in n._registry){var t=n._registry[e.name],i=n.versionParse(e.version).number,r=n.versionParse(t.version).number;i>r?(o.warn("Plugin.register:",n.toString(t),"was upgraded to",n.toString(e)),n._registry[e.name]=e):i<r?o.warn("Plugin.register:",n.toString(t),"can not be downgraded to",n.toString(e)):e!==t&&o.warn("Plugin.register:",n.toString(e),"is already registered to different plugin object")}else n._registry[e.name]=e;return e},n.resolve=function(e){return n._registry[n.dependencyParse(e).name]},n.toString=function(e){return"string"==typeof e?e:(e.name||"anonymous")+"@"+(e.version||e.range||"0.0.0")},n.isPlugin=function(e){return e&&e.name&&e.version&&e.install},n.isUsed=function(e,t){return e.used.indexOf(t)>-1},n.isFor=function(e,t){var i=e.for&&n.dependencyParse(e.for);return!e.for||t.name===i.name&&n.versionSatisfies(t.version,i.range)},n.use=function(e,t){if(e.uses=(e.uses||[]).concat(t||[]),0!==e.uses.length){for(var i=n.dependencies(e),r=o.topologicalSort(i),s=[],a=0;a<r.length;a+=1)if(r[a]!==e.name){var l=n.resolve(r[a]);l?n.isUsed(e,l.name)||(n.isFor(l,e)||(o.warn("Plugin.use:",n.toString(l),"is for",l.for,"but installed on",n.toString(e)+"."),l._warned=!0),l.install?l.install(e):(o.warn("Plugin.use:",n.toString(l),"does not specify an install function."),l._warned=!0),l._warned?(s.push("🔶 "+n.toString(l)),delete l._warned):s.push("✅ "+n.toString(l)),e.used.push(l.name)):s.push("❌ "+r[a])}s.length>0&&o.info(s.join("  "))}else o.warn("Plugin.use:",n.toString(e),"does not specify any dependencies to install.")},n.dependencies=function(e,t){var i=n.dependencyParse(e),r=i.name;if(!(r in(t=t||{}))){e=n.resolve(e)||e,t[r]=o.map(e.uses||[],(function(t){n.isPlugin(t)&&n.register(t);var r=n.dependencyParse(t),s=n.resolve(t);return s&&!n.versionSatisfies(s.version,r.range)?(o.warn("Plugin.dependencies:",n.toString(s),"does not satisfy",n.toString(r),"used by",n.toString(i)+"."),s._warned=!0,e._warned=!0):s||(o.warn("Plugin.dependencies:",n.toString(t),"used by",n.toString(i),"could not be resolved."),e._warned=!0),r.name}));for(var s=0;s<t[r].length;s+=1)n.dependencies(t[r][s],t);return t}},n.dependencyParse=function(e){return o.isString(e)?(/^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?))?$/.test(e)||o.warn("Plugin.dependencyParse:",e,"is not a valid dependency string."),{name:e.split("@")[0],range:e.split("@")[1]||"*"}):{name:e.name,range:e.range||e.version}},n.versionParse=function(e){/^\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?$/.test(e)||o.warn("Plugin.versionParse:",e,"is not a valid version or range.");var t=e.split("-");e=t[0];var i=isNaN(Number(e[0])),n=i?e.substr(1):e,r=o.map(n.split("."),(function(e){return Number(e)}));return{isRange:i,version:n,range:e,operator:i?e[0]:"",parts:r,prerelease:t[1],number:1e8*r[0]+1e4*r[1]+r[2]}},n.versionSatisfies=function(e,t){t=t||"*";var i=n.versionParse(t),o=i.parts,r=n.versionParse(e),s=r.parts;if(i.isRange){if("*"===i.operator||"*"===e)return!0;if("~"===i.operator)return s[0]===o[0]&&s[1]===o[1]&&s[2]>=o[2];if("^"===i.operator)return o[0]>0?s[0]===o[0]&&r.number>=i.number:o[1]>0?s[1]===o[1]&&s[2]>=o[2]:s[2]===o[2]}return e===t||"*"===e}},{"./Common":14}],21:[function(e,t,i){var n={};t.exports=n;var o=e("./Events"),r=e("./Engine"),s=e("./Common");!function(){var e,t,i;"undefined"!=typeof window&&(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame,t=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),e||(e=function(e){i=setTimeout((function(){e(s.now())}),1e3/60)},t=function(){clearTimeout(i)}),n.create=function(e){var t=s.extend({fps:60,correction:1,deltaSampleSize:60,counterTimestamp:0,frameCounter:0,deltaHistory:[],timePrev:null,timeScalePrev:1,frameRequestId:null,isFixed:!1,enabled:!0},e);return t.delta=t.delta||1e3/t.fps,t.deltaMin=t.deltaMin||1e3/t.fps,t.deltaMax=t.deltaMax||1e3/(.5*t.fps),t.fps=1e3/t.delta,t},n.run=function(t,i){return void 0!==t.positionIterations&&(i=t,t=n.create()),function o(r){t.frameRequestId=e(o),r&&t.enabled&&n.tick(t,i,r)}(),t},n.tick=function(e,t,i){var n,s=t.timing,a=1,l={timestamp:s.timestamp};o.trigger(e,"beforeTick",l),o.trigger(t,"beforeTick",l),e.isFixed?n=e.delta:(n=i-e.timePrev||e.delta,e.timePrev=i,e.deltaHistory.push(n),e.deltaHistory=e.deltaHistory.slice(-e.deltaSampleSize),a=(n=(n=(n=Math.min.apply(null,e.deltaHistory))<e.deltaMin?e.deltaMin:n)>e.deltaMax?e.deltaMax:n)/e.delta,e.delta=n),0!==e.timeScalePrev&&(a*=s.timeScale/e.timeScalePrev),0===s.timeScale&&(a=0),e.timeScalePrev=s.timeScale,e.correction=a,e.frameCounter+=1,i-e.counterTimestamp>=1e3&&(e.fps=e.frameCounter*((i-e.counterTimestamp)/1e3),e.counterTimestamp=i,e.frameCounter=0),o.trigger(e,"tick",l),o.trigger(t,"tick",l),t.world.isModified&&t.render&&t.render.controller&&t.render.controller.clear&&t.render.controller.clear(t.render),o.trigger(e,"beforeUpdate",l),r.update(t,n,a),o.trigger(e,"afterUpdate",l),t.render&&t.render.controller&&(o.trigger(e,"beforeRender",l),o.trigger(t,"beforeRender",l),t.render.controller.world(t.render),o.trigger(e,"afterRender",l),o.trigger(t,"afterRender",l)),o.trigger(e,"afterTick",l),o.trigger(t,"afterTick",l)},n.stop=function(e){t(e.frameRequestId)},n.start=function(e,t){n.run(e,t)}}()},{"./Common":14,"./Engine":15,"./Events":16}],22:[function(e,t,i){var n={};t.exports=n;var o=e("./Events");n._motionWakeThreshold=.18,n._motionSleepThreshold=.08,n._minBias=.9,n.update=function(e,t){for(var i=t*t*t,o=0;o<e.length;o++){var r=e[o],s=r.speed*r.speed+r.angularSpeed*r.angularSpeed;if(0===r.force.x&&0===r.force.y){var a=Math.min(r.motion,s),l=Math.max(r.motion,s);r.motion=n._minBias*a+(1-n._minBias)*l,r.sleepThreshold>0&&r.motion<n._motionSleepThreshold*i?(r.sleepCounter+=1,r.sleepCounter>=r.sleepThreshold&&n.set(r,!0)):r.sleepCounter>0&&(r.sleepCounter-=1)}else n.set(r,!1)}},n.afterCollisions=function(e,t){for(var i=t*t*t,o=0;o<e.length;o++){var r=e[o];if(r.isActive){var s=r.collision,a=s.bodyA.parent,l=s.bodyB.parent;if(!(a.isSleeping&&l.isSleeping||a.isStatic||l.isStatic)&&(a.isSleeping||l.isSleeping)){var c=a.isSleeping&&!a.isStatic?a:l,d=c===a?l:a;!c.isStatic&&d.motion>n._motionWakeThreshold*i&&n.set(c,!1)}}}},n.set=function(e,t){var i=e.isSleeping;t?(e.isSleeping=!0,e.sleepCounter=e.sleepThreshold,e.positionImpulse.x=0,e.positionImpulse.y=0,e.positionPrev.x=e.position.x,e.positionPrev.y=e.position.y,e.anglePrev=e.angle,e.speed=0,e.angularSpeed=0,e.motion=0,i||o.trigger(e,"sleepStart")):(e.isSleeping=!1,e.sleepCounter=0,i&&o.trigger(e,"sleepEnd"))}},{"./Events":16}],23:[function(e,t,i){var n={};t.exports=n;var o,r=e("../geometry/Vertices"),s=e("../core/Common"),a=e("../body/Body"),l=e("../geometry/Bounds"),c=e("../geometry/Vector");n.rectangle=function(e,t,i,n,o){o=o||{};var l={label:"Rectangle Body",position:{x:e,y:t},vertices:r.fromPath("L 0 0 L "+i+" 0 L "+i+" "+n+" L 0 "+n)};if(o.chamfer){var c=o.chamfer;l.vertices=r.chamfer(l.vertices,c.radius,c.quality,c.qualityMin,c.qualityMax),delete o.chamfer}return a.create(s.extend({},l,o))},n.trapezoid=function(e,t,i,n,o,l){l=l||{};var c,d=i*(o*=.5),u=d+(1-2*o)*i,p=u+d;c=o<.5?"L 0 0 L "+d+" "+-n+" L "+u+" "+-n+" L "+p+" 0":"L 0 0 L "+u+" "+-n+" L "+p+" 0";var h={label:"Trapezoid Body",position:{x:e,y:t},vertices:r.fromPath(c)};if(l.chamfer){var m=l.chamfer;h.vertices=r.chamfer(h.vertices,m.radius,m.quality,m.qualityMin,m.qualityMax),delete l.chamfer}return a.create(s.extend({},h,l))},n.circle=function(e,t,i,o,r){o=o||{};var a={label:"Circle Body",circleRadius:i};r=r||25;var l=Math.ceil(Math.max(10,Math.min(r,i)));return l%2==1&&(l+=1),n.polygon(e,t,l,i,s.extend({},a,o))},n.polygon=function(e,t,i,o,l){if(l=l||{},i<3)return n.circle(e,t,o,l);for(var c=2*Math.PI/i,d="",u=.5*c,p=0;p<i;p+=1){var h=u+p*c,m=Math.cos(h)*o,f=Math.sin(h)*o;d+="L "+m.toFixed(3)+" "+f.toFixed(3)+" "}var v={label:"Polygon Body",position:{x:e,y:t},vertices:r.fromPath(d)};if(l.chamfer){var y=l.chamfer;v.vertices=r.chamfer(v.vertices,y.radius,y.quality,y.qualityMin,y.qualityMax),delete l.chamfer}return a.create(s.extend({},v,l))},n.fromVertices=function(e,t,i,n,d,u,p){var h,m,f,v,y,g,x,b,w;for(o||(o=s._requireGlobal("decomp","poly-decomp")),n=n||{},m=[],d=void 0!==d&&d,u=void 0!==u?u:.01,p=void 0!==p?p:10,o||s.warn("Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull."),s.isArray(i[0])||(i=[i]),b=0;b<i.length;b+=1)if(v=i[b],(f=r.isConvex(v))||!o)v=f?r.clockwiseSort(v):r.hull(v),m.push({position:{x:e,y:t},vertices:v});else{var S=v.map((function(e){return[e.x,e.y]}));o.makeCCW(S),!1!==u&&o.removeCollinearPoints(S,u);var C=o.quickDecomp(S);for(y=0;y<C.length;y++){var P=C[y].map((function(e){return{x:e[0],y:e[1]}}));p>0&&r.area(P)<p||m.push({position:r.centre(P),vertices:P})}}for(y=0;y<m.length;y++)m[y]=a.create(s.extend(m[y],n));if(d)for(y=0;y<m.length;y++){var A=m[y];for(g=y+1;g<m.length;g++){var I=m[g];if(l.overlaps(A.bounds,I.bounds)){var M=A.vertices,B=I.vertices;for(x=0;x<A.vertices.length;x++)for(w=0;w<I.vertices.length;w++){var _=c.magnitudeSquared(c.sub(M[(x+1)%M.length],B[w])),T=c.magnitudeSquared(c.sub(M[x],B[(w+1)%B.length]));_<5&&T<5&&(M[x].isInternal=!0,B[w].isInternal=!0)}}}}return m.length>1?(h=a.create(s.extend({parts:m.slice(0)},n)),a.setPosition(h,{x:e,y:t}),h):m[0]}},{"../body/Body":1,"../core/Common":14,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29}],24:[function(e,t,i){var n={};t.exports=n;var o=e("../body/Composite"),r=e("../constraint/Constraint"),s=e("../core/Common"),a=e("../body/Body"),l=e("./Bodies");n.stack=function(e,t,i,n,r,s,l){for(var c,d=o.create({label:"Stack"}),u=e,p=t,h=0,m=0;m<n;m++){for(var f=0,v=0;v<i;v++){var y=l(u,p,v,m,c,h);if(y){var g=y.bounds.max.y-y.bounds.min.y,x=y.bounds.max.x-y.bounds.min.x;g>f&&(f=g),a.translate(y,{x:.5*x,y:.5*g}),u=y.bounds.max.x+r,o.addBody(d,y),c=y,h+=1}else u+=r}p+=f+s,u=e}return d},n.chain=function(e,t,i,n,a,l){for(var c=e.bodies,d=1;d<c.length;d++){var u=c[d-1],p=c[d],h=u.bounds.max.y-u.bounds.min.y,m=u.bounds.max.x-u.bounds.min.x,f=p.bounds.max.y-p.bounds.min.y,v={bodyA:u,pointA:{x:m*t,y:h*i},bodyB:p,pointB:{x:(p.bounds.max.x-p.bounds.min.x)*n,y:f*a}},y=s.extend(v,l);o.addConstraint(e,r.create(y))}return e.label+=" Chain",e},n.mesh=function(e,t,i,n,a){var l,c,d,u,p,h=e.bodies;for(l=0;l<i;l++){for(c=1;c<t;c++)d=h[c-1+l*t],u=h[c+l*t],o.addConstraint(e,r.create(s.extend({bodyA:d,bodyB:u},a)));if(l>0)for(c=0;c<t;c++)d=h[c+(l-1)*t],u=h[c+l*t],o.addConstraint(e,r.create(s.extend({bodyA:d,bodyB:u},a))),n&&c>0&&(p=h[c-1+(l-1)*t],o.addConstraint(e,r.create(s.extend({bodyA:p,bodyB:u},a)))),n&&c<t-1&&(p=h[c+1+(l-1)*t],o.addConstraint(e,r.create(s.extend({bodyA:p,bodyB:u},a))))}return e.label+=" Mesh",e},n.pyramid=function(e,t,i,o,r,s,l){return n.stack(e,t,i,o,r,s,(function(t,n,s,c,d,u){var p=Math.min(o,Math.ceil(i/2)),h=d?d.bounds.max.x-d.bounds.min.x:0;if(!(c>p||s<(c=p-c)||s>i-1-c))return 1===u&&a.translate(d,{x:(s+(i%2==1?1:-1))*h,y:0}),l(e+(d?s*h:0)+s*r,n,s,c,d,u)}))},n.newtonsCradle=function(e,t,i,n,s){for(var a=o.create({label:"Newtons Cradle"}),c=0;c<i;c++){var d=l.circle(e+c*(1.9*n),t+s,n,{inertia:1/0,restitution:1,friction:0,frictionAir:1e-4,slop:1}),u=r.create({pointA:{x:e+c*(1.9*n),y:t},bodyB:d});o.addBody(a,d),o.addConstraint(a,u)}return a},n.car=function(e,t,i,n,s){var c=a.nextGroup(!0),d=.5*-i+20,u=.5*i-20,p=o.create({label:"Car"}),h=l.rectangle(e,t,i,n,{collisionFilter:{group:c},chamfer:{radius:.5*n},density:2e-4}),m=l.circle(e+d,t+0,s,{collisionFilter:{group:c},friction:.8}),f=l.circle(e+u,t+0,s,{collisionFilter:{group:c},friction:.8}),v=r.create({bodyB:h,pointB:{x:d,y:0},bodyA:m,stiffness:1,length:0}),y=r.create({bodyB:h,pointB:{x:u,y:0},bodyA:f,stiffness:1,length:0});return o.addBody(p,h),o.addBody(p,m),o.addBody(p,f),o.addConstraint(p,v),o.addConstraint(p,y),p},n.softBody=function(e,t,i,o,r,a,c,d,u,p){u=s.extend({inertia:1/0},u),p=s.extend({stiffness:.2,render:{type:"line",anchors:!1}},p);var h=n.stack(e,t,i,o,r,a,(function(e,t){return l.circle(e,t,d,u)}));return n.mesh(h,i,o,c,p),h.label="Soft Body",h}},{"../body/Body":1,"../body/Composite":2,"../constraint/Constraint":12,"../core/Common":14,"./Bodies":23}],25:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vector"),r=e("../core/Common");n.fromVertices=function(e){for(var t={},i=0;i<e.length;i++){var n=(i+1)%e.length,s=o.normalise({x:e[n].y-e[i].y,y:e[i].x-e[n].x}),a=0===s.y?1/0:s.x/s.y;t[a=a.toFixed(3).toString()]=s}return r.values(t)},n.rotate=function(e,t){if(0!==t)for(var i=Math.cos(t),n=Math.sin(t),o=0;o<e.length;o++){var r,s=e[o];r=s.x*i-s.y*n,s.y=s.x*n+s.y*i,s.x=r}}},{"../core/Common":14,"../geometry/Vector":28}],26:[function(e,t,i){var n={};t.exports=n,n.create=function(e){var t={min:{x:0,y:0},max:{x:0,y:0}};return e&&n.update(t,e),t},n.update=function(e,t,i){e.min.x=1/0,e.max.x=-1/0,e.min.y=1/0,e.max.y=-1/0;for(var n=0;n<t.length;n++){var o=t[n];o.x>e.max.x&&(e.max.x=o.x),o.x<e.min.x&&(e.min.x=o.x),o.y>e.max.y&&(e.max.y=o.y),o.y<e.min.y&&(e.min.y=o.y)}i&&(i.x>0?e.max.x+=i.x:e.min.x+=i.x,i.y>0?e.max.y+=i.y:e.min.y+=i.y)},n.contains=function(e,t){return t.x>=e.min.x&&t.x<=e.max.x&&t.y>=e.min.y&&t.y<=e.max.y},n.overlaps=function(e,t){return e.min.x<=t.max.x&&e.max.x>=t.min.x&&e.max.y>=t.min.y&&e.min.y<=t.max.y},n.translate=function(e,t){e.min.x+=t.x,e.max.x+=t.x,e.min.y+=t.y,e.max.y+=t.y},n.shift=function(e,t){var i=e.max.x-e.min.x,n=e.max.y-e.min.y;e.min.x=t.x,e.max.x=t.x+i,e.min.y=t.y,e.max.y=t.y+n}},{}],27:[function(e,t,i){var n={};t.exports=n;var o=(e("../geometry/Bounds"),e("../core/Common"));n.pathToVertices=function(e,t){"undefined"==typeof window||"SVGPathSeg"in window||o.warn("Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.");var i,r,s,a,l,c,d,u,p,h,m,f=[],v=0,y=0,g=0;t=t||15;var x=function(e,t,i){var n=i%2==1&&i>1;if(!p||e!=p.x||t!=p.y){p&&n?(h=p.x,m=p.y):(h=0,m=0);var o={x:h+e,y:m+t};!n&&p||(p=o),f.push(o),y=h+e,g=m+t}},b=function(e){var t=e.pathSegTypeAsLetter.toUpperCase();if("Z"!==t){switch(t){case"M":case"L":case"T":case"C":case"S":case"Q":y=e.x,g=e.y;break;case"H":y=e.x;break;case"V":g=e.y}x(y,g,e.pathSegType)}};for(n._svgPathToAbsolute(e),s=e.getTotalLength(),c=[],i=0;i<e.pathSegList.numberOfItems;i+=1)c.push(e.pathSegList.getItem(i));for(d=c.concat();v<s;){if((l=c[e.getPathSegAtLength(v)])!=u){for(;d.length&&d[0]!=l;)b(d.shift());u=l}switch(l.pathSegTypeAsLetter.toUpperCase()){case"C":case"T":case"S":case"Q":case"A":a=e.getPointAtLength(v),x(a.x,a.y,0)}v+=t}for(i=0,r=d.length;i<r;++i)b(d[i]);return f},n._svgPathToAbsolute=function(e){for(var t,i,n,o,r,s,a=e.pathSegList,l=0,c=0,d=a.numberOfItems,u=0;u<d;++u){var p=a.getItem(u),h=p.pathSegTypeAsLetter;if(/[MLHVCSQTA]/.test(h))"x"in p&&(l=p.x),"y"in p&&(c=p.y);else switch("x1"in p&&(n=l+p.x1),"x2"in p&&(r=l+p.x2),"y1"in p&&(o=c+p.y1),"y2"in p&&(s=c+p.y2),"x"in p&&(l+=p.x),"y"in p&&(c+=p.y),h){case"m":a.replaceItem(e.createSVGPathSegMovetoAbs(l,c),u);break;case"l":a.replaceItem(e.createSVGPathSegLinetoAbs(l,c),u);break;case"h":a.replaceItem(e.createSVGPathSegLinetoHorizontalAbs(l),u);break;case"v":a.replaceItem(e.createSVGPathSegLinetoVerticalAbs(c),u);break;case"c":a.replaceItem(e.createSVGPathSegCurvetoCubicAbs(l,c,n,o,r,s),u);break;case"s":a.replaceItem(e.createSVGPathSegCurvetoCubicSmoothAbs(l,c,r,s),u);break;case"q":a.replaceItem(e.createSVGPathSegCurvetoQuadraticAbs(l,c,n,o),u);break;case"t":a.replaceItem(e.createSVGPathSegCurvetoQuadraticSmoothAbs(l,c),u);break;case"a":a.replaceItem(e.createSVGPathSegArcAbs(l,c,p.r1,p.r2,p.angle,p.largeArcFlag,p.sweepFlag),u);break;case"z":case"Z":l=t,c=i}"M"!=h&&"m"!=h||(t=l,i=c)}}},{"../core/Common":14,"../geometry/Bounds":26}],28:[function(e,t,i){var n={};t.exports=n,n.create=function(e,t){return{x:e||0,y:t||0}},n.clone=function(e){return{x:e.x,y:e.y}},n.magnitude=function(e){return Math.sqrt(e.x*e.x+e.y*e.y)},n.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},n.rotate=function(e,t,i){var n=Math.cos(t),o=Math.sin(t);i||(i={});var r=e.x*n-e.y*o;return i.y=e.x*o+e.y*n,i.x=r,i},n.rotateAbout=function(e,t,i,n){var o=Math.cos(t),r=Math.sin(t);n||(n={});var s=i.x+((e.x-i.x)*o-(e.y-i.y)*r);return n.y=i.y+((e.x-i.x)*r+(e.y-i.y)*o),n.x=s,n},n.normalise=function(e){var t=n.magnitude(e);return 0===t?{x:0,y:0}:{x:e.x/t,y:e.y/t}},n.dot=function(e,t){return e.x*t.x+e.y*t.y},n.cross=function(e,t){return e.x*t.y-e.y*t.x},n.cross3=function(e,t,i){return(t.x-e.x)*(i.y-e.y)-(t.y-e.y)*(i.x-e.x)},n.add=function(e,t,i){return i||(i={}),i.x=e.x+t.x,i.y=e.y+t.y,i},n.sub=function(e,t,i){return i||(i={}),i.x=e.x-t.x,i.y=e.y-t.y,i},n.mult=function(e,t){return{x:e.x*t,y:e.y*t}},n.div=function(e,t){return{x:e.x/t,y:e.y/t}},n.perp=function(e,t){return{x:(t=!0===t?-1:1)*-e.y,y:t*e.x}},n.neg=function(e){return{x:-e.x,y:-e.y}},n.angle=function(e,t){return Math.atan2(t.y-e.y,t.x-e.x)},n._temp=[n.create(),n.create(),n.create(),n.create(),n.create(),n.create()]},{}],29:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Vector"),r=e("../core/Common");n.create=function(e,t){for(var i=[],n=0;n<e.length;n++){var o=e[n],r={x:o.x,y:o.y,index:n,body:t,isInternal:!1};i.push(r)}return i},n.fromPath=function(e,t){var i=[];return e.replace(/L?\s*([\-\d\.e]+)[\s,]*([\-\d\.e]+)*/gi,(function(e,t,n){i.push({x:parseFloat(t),y:parseFloat(n)})})),n.create(i,t)},n.centre=function(e){for(var t,i,r,s=n.area(e,!0),a={x:0,y:0},l=0;l<e.length;l++)r=(l+1)%e.length,t=o.cross(e[l],e[r]),i=o.mult(o.add(e[l],e[r]),t),a=o.add(a,i);return o.div(a,6*s)},n.mean=function(e){for(var t={x:0,y:0},i=0;i<e.length;i++)t.x+=e[i].x,t.y+=e[i].y;return o.div(t,e.length)},n.area=function(e,t){for(var i=0,n=e.length-1,o=0;o<e.length;o++)i+=(e[n].x-e[o].x)*(e[n].y+e[o].y),n=o;return t?i/2:Math.abs(i)/2},n.inertia=function(e,t){for(var i,n,r=0,s=0,a=e,l=0;l<a.length;l++)n=(l+1)%a.length,r+=(i=Math.abs(o.cross(a[n],a[l])))*(o.dot(a[n],a[n])+o.dot(a[n],a[l])+o.dot(a[l],a[l])),s+=i;return t/6*(r/s)},n.translate=function(e,t,i){var n;if(i)for(n=0;n<e.length;n++)e[n].x+=t.x*i,e[n].y+=t.y*i;else for(n=0;n<e.length;n++)e[n].x+=t.x,e[n].y+=t.y;return e},n.rotate=function(e,t,i){if(0!==t){for(var n=Math.cos(t),o=Math.sin(t),r=0;r<e.length;r++){var s=e[r],a=s.x-i.x,l=s.y-i.y;s.x=i.x+(a*n-l*o),s.y=i.y+(a*o+l*n)}return e}},n.contains=function(e,t){for(var i=0;i<e.length;i++){var n=e[i],o=e[(i+1)%e.length];if((t.x-n.x)*(o.y-n.y)+(t.y-n.y)*(n.x-o.x)>0)return!1}return!0},n.scale=function(e,t,i,r){if(1===t&&1===i)return e;r=r||n.centre(e);for(var s,a,l=0;l<e.length;l++)s=e[l],a=o.sub(s,r),e[l].x=r.x+a.x*t,e[l].y=r.y+a.y*i;return e},n.chamfer=function(e,t,i,n,s){t="number"==typeof t?[t]:t||[8],i=void 0!==i?i:-1,n=n||2,s=s||14;for(var a=[],l=0;l<e.length;l++){var c=e[l-1>=0?l-1:e.length-1],d=e[l],u=e[(l+1)%e.length],p=t[l<t.length?l:t.length-1];if(0!==p){var h=o.normalise({x:d.y-c.y,y:c.x-d.x}),m=o.normalise({x:u.y-d.y,y:d.x-u.x}),f=Math.sqrt(2*Math.pow(p,2)),v=o.mult(r.clone(h),p),y=o.normalise(o.mult(o.add(h,m),.5)),g=o.sub(d,o.mult(y,f)),x=i;-1===i&&(x=1.75*Math.pow(p,.32)),(x=r.clamp(x,n,s))%2==1&&(x+=1);for(var b=Math.acos(o.dot(h,m))/x,w=0;w<x;w++)a.push(o.add(o.rotate(v,b*w),g))}else a.push(d)}return a},n.clockwiseSort=function(e){var t=n.mean(e);return e.sort((function(e,i){return o.angle(t,e)-o.angle(t,i)})),e},n.isConvex=function(e){var t,i,n,o,r=0,s=e.length;if(s<3)return null;for(t=0;t<s;t++)if(n=(t+2)%s,o=(e[i=(t+1)%s].x-e[t].x)*(e[n].y-e[i].y),(o-=(e[i].y-e[t].y)*(e[n].x-e[i].x))<0?r|=1:o>0&&(r|=2),3===r)return!1;return 0!==r||null},n.hull=function(e){var t,i,n=[],r=[];for((e=e.slice(0)).sort((function(e,t){var i=e.x-t.x;return 0!==i?i:e.y-t.y})),i=0;i<e.length;i+=1){for(t=e[i];r.length>=2&&o.cross3(r[r.length-2],r[r.length-1],t)<=0;)r.pop();r.push(t)}for(i=e.length-1;i>=0;i-=1){for(t=e[i];n.length>=2&&o.cross3(n[n.length-2],n[n.length-1],t)<=0;)n.pop();n.push(t)}return n.pop(),r.pop(),n.concat(r)}},{"../core/Common":14,"../geometry/Vector":28}],30:[function(e,t,i){var n=t.exports=e("../core/Matter");n.Body=e("../body/Body"),n.Composite=e("../body/Composite"),n.World=e("../body/World"),n.Contact=e("../collision/Contact"),n.Detector=e("../collision/Detector"),n.Grid=e("../collision/Grid"),n.Pairs=e("../collision/Pairs"),n.Pair=e("../collision/Pair"),n.Query=e("../collision/Query"),n.Resolver=e("../collision/Resolver"),n.SAT=e("../collision/SAT"),n.Constraint=e("../constraint/Constraint"),n.MouseConstraint=e("../constraint/MouseConstraint"),n.Common=e("../core/Common"),n.Engine=e("../core/Engine"),n.Events=e("../core/Events"),n.Mouse=e("../core/Mouse"),n.Runner=e("../core/Runner"),n.Sleeping=e("../core/Sleeping"),n.Plugin=e("../core/Plugin"),n.Bodies=e("../factory/Bodies"),n.Composites=e("../factory/Composites"),n.Axes=e("../geometry/Axes"),n.Bounds=e("../geometry/Bounds"),n.Svg=e("../geometry/Svg"),n.Vector=e("../geometry/Vector"),n.Vertices=e("../geometry/Vertices"),n.Render=e("../render/Render"),n.RenderPixi=e("../render/RenderPixi"),n.World.add=n.Composite.add,n.World.remove=n.Composite.remove,n.World.addComposite=n.Composite.addComposite,n.World.addBody=n.Composite.addBody,n.World.addConstraint=n.Composite.addConstraint,n.World.clear=n.Composite.clear,n.Engine.run=n.Runner.run},{"../body/Body":1,"../body/Composite":2,"../body/World":3,"../collision/Contact":4,"../collision/Detector":5,"../collision/Grid":6,"../collision/Pair":7,"../collision/Pairs":8,"../collision/Query":9,"../collision/Resolver":10,"../collision/SAT":11,"../constraint/Constraint":12,"../constraint/MouseConstraint":13,"../core/Common":14,"../core/Engine":15,"../core/Events":16,"../core/Matter":17,"../core/Metrics":18,"../core/Mouse":19,"../core/Plugin":20,"../core/Runner":21,"../core/Sleeping":22,"../factory/Bodies":23,"../factory/Composites":24,"../geometry/Axes":25,"../geometry/Bounds":26,"../geometry/Svg":27,"../geometry/Vector":28,"../geometry/Vertices":29,"../render/Render":31,"../render/RenderPixi":32}],31:[function(e,t,i){var n={};t.exports=n;var o=e("../core/Common"),r=e("../body/Composite"),s=e("../geometry/Bounds"),a=e("../core/Events"),l=e("../collision/Grid"),c=e("../geometry/Vector"),d=e("../core/Mouse");!function(){var e,t;"undefined"!=typeof window&&(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout((function(){e(o.now())}),1e3/60)},t=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),n.create=function(e){var t={controller:n,engine:null,element:null,canvas:null,mouse:null,frameRequestId:null,options:{width:800,height:600,pixelRatio:1,background:"#18181d",wireframeBackground:"#0f0f13",hasBounds:!!e.bounds,enabled:!0,wireframes:!0,showSleeping:!0,showDebug:!1,showBroadphase:!1,showBounds:!1,showVelocity:!1,showCollisions:!1,showSeparations:!1,showAxes:!1,showPositions:!1,showAngleIndicator:!1,showIds:!1,showShadows:!1,showVertexNumbers:!1,showConvexHulls:!1,showInternalEdges:!1,showMousePosition:!1}},r=o.extend(t,e);return r.canvas&&(r.canvas.width=r.options.width||r.canvas.width,r.canvas.height=r.options.height||r.canvas.height),r.mouse=e.mouse,r.engine=e.engine,r.canvas=r.canvas||i(r.options.width,r.options.height),r.context=r.canvas.getContext("2d"),r.textures={},r.bounds=r.bounds||{min:{x:0,y:0},max:{x:r.canvas.width,y:r.canvas.height}},1!==r.options.pixelRatio&&n.setPixelRatio(r,r.options.pixelRatio),o.isElement(r.element)?r.element.appendChild(r.canvas):r.canvas.parentNode||o.log("Render.create: options.element was undefined, render.canvas was created but not appended","warn"),r},n.run=function(t){!function i(o){t.frameRequestId=e(i),n.world(t)}()},n.stop=function(e){t(e.frameRequestId)},n.setPixelRatio=function(e,t){var i=e.options,n=e.canvas;"auto"===t&&(t=u(n)),i.pixelRatio=t,n.setAttribute("data-pixel-ratio",t),n.width=i.width*t,n.height=i.height*t,n.style.width=i.width+"px",n.style.height=i.height+"px",e.context.scale(t,t)},n.lookAt=function(e,t,i,n){n=void 0===n||n,t=o.isArray(t)?t:[t],i=i||{x:0,y:0};for(var r={min:{x:1/0,y:1/0},max:{x:-1/0,y:-1/0}},s=0;s<t.length;s+=1){var a=t[s],l=a.bounds?a.bounds.min:a.min||a.position||a,c=a.bounds?a.bounds.max:a.max||a.position||a;l&&c&&(l.x<r.min.x&&(r.min.x=l.x),c.x>r.max.x&&(r.max.x=c.x),l.y<r.min.y&&(r.min.y=l.y),c.y>r.max.y&&(r.max.y=c.y))}var u=r.max.x-r.min.x+2*i.x,p=r.max.y-r.min.y+2*i.y,h=e.canvas.height,m=e.canvas.width/h,f=u/p,v=1,y=1;f>m?y=f/m:v=m/f,e.options.hasBounds=!0,e.bounds.min.x=r.min.x,e.bounds.max.x=r.min.x+u*v,e.bounds.min.y=r.min.y,e.bounds.max.y=r.min.y+p*y,n&&(e.bounds.min.x+=.5*u-u*v*.5,e.bounds.max.x+=.5*u-u*v*.5,e.bounds.min.y+=.5*p-p*y*.5,e.bounds.max.y+=.5*p-p*y*.5),e.bounds.min.x-=i.x,e.bounds.max.x-=i.x,e.bounds.min.y-=i.y,e.bounds.max.y-=i.y,e.mouse&&(d.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),d.setOffset(e.mouse,e.bounds.min))},n.startViewTransform=function(e){var t=e.bounds.max.x-e.bounds.min.x,i=e.bounds.max.y-e.bounds.min.y,n=t/e.options.width,o=i/e.options.height;e.context.scale(1/n,1/o),e.context.translate(-e.bounds.min.x,-e.bounds.min.y)},n.endViewTransform=function(e){e.context.setTransform(e.options.pixelRatio,0,0,e.options.pixelRatio,0,0)},n.world=function(e){var t,i=e.engine,o=i.world,u=e.canvas,p=e.context,m=e.options,f=r.allBodies(o),v=r.allConstraints(o),y=m.wireframes?m.wireframeBackground:m.background,g=[],x=[],b={timestamp:i.timing.timestamp};if(a.trigger(e,"beforeRender",b),e.currentBackground!==y&&h(e,y),p.globalCompositeOperation="source-in",p.fillStyle="transparent",p.fillRect(0,0,u.width,u.height),p.globalCompositeOperation="source-over",m.hasBounds){for(t=0;t<f.length;t++){var w=f[t];s.overlaps(w.bounds,e.bounds)&&g.push(w)}for(t=0;t<v.length;t++){var S=v[t],C=S.bodyA,P=S.bodyB,A=S.pointA,I=S.pointB;C&&(A=c.add(C.position,S.pointA)),P&&(I=c.add(P.position,S.pointB)),A&&I&&(s.contains(e.bounds,A)||s.contains(e.bounds,I))&&x.push(S)}n.startViewTransform(e),e.mouse&&(d.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),d.setOffset(e.mouse,e.bounds.min))}else x=v,g=f;!m.wireframes||i.enableSleeping&&m.showSleeping?n.bodies(e,g,p):(m.showConvexHulls&&n.bodyConvexHulls(e,g,p),n.bodyWireframes(e,g,p)),m.showBounds&&n.bodyBounds(e,g,p),(m.showAxes||m.showAngleIndicator)&&n.bodyAxes(e,g,p),m.showPositions&&n.bodyPositions(e,g,p),m.showVelocity&&n.bodyVelocity(e,g,p),m.showIds&&n.bodyIds(e,g,p),m.showSeparations&&n.separations(e,i.pairs.list,p),m.showCollisions&&n.collisions(e,i.pairs.list,p),m.showVertexNumbers&&n.vertexNumbers(e,g,p),m.showMousePosition&&n.mousePosition(e,e.mouse,p),n.constraints(x,p),m.showBroadphase&&i.broadphase.controller===l&&n.grid(e,i.broadphase,p),m.showDebug&&n.debug(e,p),m.hasBounds&&n.endViewTransform(e),a.trigger(e,"afterRender",b)},n.debug=function(e,t){var i=t,n=e.engine,o=n.world,s=n.metrics,a=e.options;if(r.allBodies(o),n.timing.timestamp-(e.debugTimestamp||0)>=500){var l="";s.timing&&(l+="fps: "+Math.round(s.timing.fps)+"    "),e.debugString=l,e.debugTimestamp=n.timing.timestamp}if(e.debugString){i.font="12px Arial",a.wireframes?i.fillStyle="rgba(255,255,255,0.5)":i.fillStyle="rgba(0,0,0,0.5)";for(var c=e.debugString.split("\n"),d=0;d<c.length;d++)i.fillText(c[d],50,50+18*d)}},n.constraints=function(e,t){for(var i=t,n=0;n<e.length;n++){var r=e[n];if(r.render.visible&&r.pointA&&r.pointB){var s,a,l=r.bodyA,d=r.bodyB;if(s=l?c.add(l.position,r.pointA):r.pointA,"pin"===r.render.type)i.beginPath(),i.arc(s.x,s.y,3,0,2*Math.PI),i.closePath();else{if(a=d?c.add(d.position,r.pointB):r.pointB,i.beginPath(),i.moveTo(s.x,s.y),"spring"===r.render.type)for(var u,p=c.sub(a,s),h=c.perp(c.normalise(p)),m=Math.ceil(o.clamp(r.length/5,12,20)),f=1;f<m;f+=1)u=f%2==0?1:-1,i.lineTo(s.x+p.x*(f/m)+h.x*u*4,s.y+p.y*(f/m)+h.y*u*4);i.lineTo(a.x,a.y)}r.render.lineWidth&&(i.lineWidth=r.render.lineWidth,i.strokeStyle=r.render.strokeStyle,i.stroke()),r.render.anchors&&(i.fillStyle=r.render.strokeStyle,i.beginPath(),i.arc(s.x,s.y,3,0,2*Math.PI),i.arc(a.x,a.y,3,0,2*Math.PI),i.closePath(),i.fill())}}},n.bodyShadows=function(e,t,i){for(var n=i,o=(e.engine,0);o<t.length;o++){var r=t[o];if(r.render.visible){if(r.circleRadius)n.beginPath(),n.arc(r.position.x,r.position.y,r.circleRadius,0,2*Math.PI),n.closePath();else{n.beginPath(),n.moveTo(r.vertices[0].x,r.vertices[0].y);for(var s=1;s<r.vertices.length;s++)n.lineTo(r.vertices[s].x,r.vertices[s].y);n.closePath()}var a=r.position.x-.5*e.options.width,l=r.position.y-.2*e.options.height,c=Math.abs(a)+Math.abs(l);n.shadowColor="rgba(0,0,0,0.15)",n.shadowOffsetX=.05*a,n.shadowOffsetY=.05*l,n.shadowBlur=1+12*Math.min(1,c/1e3),n.fill(),n.shadowColor=null,n.shadowOffsetX=null,n.shadowOffsetY=null,n.shadowBlur=null}}},n.bodies=function(e,t,i){var n,o,r,s,a=i,l=(e.engine,e.options),c=l.showInternalEdges||!l.wireframes;for(r=0;r<t.length;r++)if((n=t[r]).render.visible)for(s=n.parts.length>1?1:0;s<n.parts.length;s++)if((o=n.parts[s]).render.visible){if(l.showSleeping&&n.isSleeping?a.globalAlpha=.5*o.render.opacity:1!==o.render.opacity&&(a.globalAlpha=o.render.opacity),o.render.sprite&&o.render.sprite.texture&&!l.wireframes){var d=o.render.sprite,u=p(e,d.texture);a.translate(o.position.x,o.position.y),a.rotate(o.angle),a.drawImage(u,u.width*-d.xOffset*d.xScale,u.height*-d.yOffset*d.yScale,u.width*d.xScale,u.height*d.yScale),a.rotate(-o.angle),a.translate(-o.position.x,-o.position.y)}else{if(o.circleRadius)a.beginPath(),a.arc(o.position.x,o.position.y,o.circleRadius,0,2*Math.PI);else{a.beginPath(),a.moveTo(o.vertices[0].x,o.vertices[0].y);for(var h=1;h<o.vertices.length;h++)!o.vertices[h-1].isInternal||c?a.lineTo(o.vertices[h].x,o.vertices[h].y):a.moveTo(o.vertices[h].x,o.vertices[h].y),o.vertices[h].isInternal&&!c&&a.moveTo(o.vertices[(h+1)%o.vertices.length].x,o.vertices[(h+1)%o.vertices.length].y);a.lineTo(o.vertices[0].x,o.vertices[0].y),a.closePath()}l.wireframes?(a.lineWidth=1,a.strokeStyle="#bbb",a.stroke()):(a.fillStyle=o.render.fillStyle,o.render.lineWidth&&(a.lineWidth=o.render.lineWidth,a.strokeStyle=o.render.strokeStyle,a.stroke()),a.fill())}a.globalAlpha=1}},n.bodyWireframes=function(e,t,i){var n,o,r,s,a,l=i,c=e.options.showInternalEdges;for(l.beginPath(),r=0;r<t.length;r++)if((n=t[r]).render.visible)for(a=n.parts.length>1?1:0;a<n.parts.length;a++){for(o=n.parts[a],l.moveTo(o.vertices[0].x,o.vertices[0].y),s=1;s<o.vertices.length;s++)!o.vertices[s-1].isInternal||c?l.lineTo(o.vertices[s].x,o.vertices[s].y):l.moveTo(o.vertices[s].x,o.vertices[s].y),o.vertices[s].isInternal&&!c&&l.moveTo(o.vertices[(s+1)%o.vertices.length].x,o.vertices[(s+1)%o.vertices.length].y);l.lineTo(o.vertices[0].x,o.vertices[0].y)}l.lineWidth=1,l.strokeStyle="#bbb",l.stroke()},n.bodyConvexHulls=function(e,t,i){var n,o,r,s=i;for(s.beginPath(),o=0;o<t.length;o++)if((n=t[o]).render.visible&&1!==n.parts.length){for(s.moveTo(n.vertices[0].x,n.vertices[0].y),r=1;r<n.vertices.length;r++)s.lineTo(n.vertices[r].x,n.vertices[r].y);s.lineTo(n.vertices[0].x,n.vertices[0].y)}s.lineWidth=1,s.strokeStyle="rgba(255,255,255,0.2)",s.stroke()},n.vertexNumbers=function(e,t,i){var n,o,r,s=i;for(n=0;n<t.length;n++){var a=t[n].parts;for(r=a.length>1?1:0;r<a.length;r++){var l=a[r];for(o=0;o<l.vertices.length;o++)s.fillStyle="rgba(255,255,255,0.2)",s.fillText(n+"_"+o,l.position.x+.8*(l.vertices[o].x-l.position.x),l.position.y+.8*(l.vertices[o].y-l.position.y))}}},n.mousePosition=function(e,t,i){var n=i;n.fillStyle="rgba(255,255,255,0.8)",n.fillText(t.position.x+"  "+t.position.y,t.position.x+5,t.position.y-5)},n.bodyBounds=function(e,t,i){var n=i,o=(e.engine,e.options);n.beginPath();for(var r=0;r<t.length;r++)if(t[r].render.visible)for(var s=t[r].parts,a=s.length>1?1:0;a<s.length;a++){var l=s[a];n.rect(l.bounds.min.x,l.bounds.min.y,l.bounds.max.x-l.bounds.min.x,l.bounds.max.y-l.bounds.min.y)}o.wireframes?n.strokeStyle="rgba(255,255,255,0.08)":n.strokeStyle="rgba(0,0,0,0.1)",n.lineWidth=1,n.stroke()},n.bodyAxes=function(e,t,i){var n,o,r,s,a=i,l=(e.engine,e.options);for(a.beginPath(),o=0;o<t.length;o++){var c=t[o],d=c.parts;if(c.render.visible)if(l.showAxes)for(r=d.length>1?1:0;r<d.length;r++)for(n=d[r],s=0;s<n.axes.length;s++){var u=n.axes[s];a.moveTo(n.position.x,n.position.y),a.lineTo(n.position.x+20*u.x,n.position.y+20*u.y)}else for(r=d.length>1?1:0;r<d.length;r++)for(n=d[r],s=0;s<n.axes.length;s++)a.moveTo(n.position.x,n.position.y),a.lineTo((n.vertices[0].x+n.vertices[n.vertices.length-1].x)/2,(n.vertices[0].y+n.vertices[n.vertices.length-1].y)/2)}l.wireframes?(a.strokeStyle="indianred",a.lineWidth=1):(a.strokeStyle="rgba(255, 255, 255, 0.4)",a.globalCompositeOperation="overlay",a.lineWidth=2),a.stroke(),a.globalCompositeOperation="source-over"},n.bodyPositions=function(e,t,i){var n,o,r,s,a=i,l=(e.engine,e.options);for(a.beginPath(),r=0;r<t.length;r++)if((n=t[r]).render.visible)for(s=0;s<n.parts.length;s++)o=n.parts[s],a.arc(o.position.x,o.position.y,3,0,2*Math.PI,!1),a.closePath();for(l.wireframes?a.fillStyle="indianred":a.fillStyle="rgba(0,0,0,0.5)",a.fill(),a.beginPath(),r=0;r<t.length;r++)(n=t[r]).render.visible&&(a.arc(n.positionPrev.x,n.positionPrev.y,2,0,2*Math.PI,!1),a.closePath());a.fillStyle="rgba(255,165,0,0.8)",a.fill()},n.bodyVelocity=function(e,t,i){var n=i;n.beginPath();for(var o=0;o<t.length;o++){var r=t[o];r.render.visible&&(n.moveTo(r.position.x,r.position.y),n.lineTo(r.position.x+2*(r.position.x-r.positionPrev.x),r.position.y+2*(r.position.y-r.positionPrev.y)))}n.lineWidth=3,n.strokeStyle="cornflowerblue",n.stroke()},n.bodyIds=function(e,t,i){var n,o,r=i;for(n=0;n<t.length;n++)if(t[n].render.visible){var s=t[n].parts;for(o=s.length>1?1:0;o<s.length;o++){var a=s[o];r.font="12px Arial",r.fillStyle="rgba(255,255,255,0.5)",r.fillText(a.id,a.position.x+10,a.position.y-10)}}},n.collisions=function(e,t,i){var n,o,r,s,a=i,l=e.options;for(a.beginPath(),r=0;r<t.length;r++)if((n=t[r]).isActive)for(o=n.collision,s=0;s<n.activeContacts.length;s++){var c=n.activeContacts[s].vertex;a.rect(c.x-1.5,c.y-1.5,3.5,3.5)}for(l.wireframes?a.fillStyle="rgba(255,255,255,0.7)":a.fillStyle="orange",a.fill(),a.beginPath(),r=0;r<t.length;r++)if((n=t[r]).isActive&&(o=n.collision,n.activeContacts.length>0)){var d=n.activeContacts[0].vertex.x,u=n.activeContacts[0].vertex.y;2===n.activeContacts.length&&(d=(n.activeContacts[0].vertex.x+n.activeContacts[1].vertex.x)/2,u=(n.activeContacts[0].vertex.y+n.activeContacts[1].vertex.y)/2),o.bodyB===o.supports[0].body||!0===o.bodyA.isStatic?a.moveTo(d-8*o.normal.x,u-8*o.normal.y):a.moveTo(d+8*o.normal.x,u+8*o.normal.y),a.lineTo(d,u)}l.wireframes?a.strokeStyle="rgba(255,165,0,0.7)":a.strokeStyle="orange",a.lineWidth=1,a.stroke()},n.separations=function(e,t,i){var n,o,r,s,a,l=i,c=e.options;for(l.beginPath(),a=0;a<t.length;a++)if((n=t[a]).isActive){r=(o=n.collision).bodyA;var d=1;(s=o.bodyB).isStatic||r.isStatic||(d=.5),s.isStatic&&(d=0),l.moveTo(s.position.x,s.position.y),l.lineTo(s.position.x-o.penetration.x*d,s.position.y-o.penetration.y*d),d=1,s.isStatic||r.isStatic||(d=.5),r.isStatic&&(d=0),l.moveTo(r.position.x,r.position.y),l.lineTo(r.position.x+o.penetration.x*d,r.position.y+o.penetration.y*d)}c.wireframes?l.strokeStyle="rgba(255,165,0,0.5)":l.strokeStyle="orange",l.stroke()},n.grid=function(e,t,i){var n=i;e.options.wireframes?n.strokeStyle="rgba(255,180,0,0.1)":n.strokeStyle="rgba(255,180,0,0.5)",n.beginPath();for(var r=o.keys(t.buckets),s=0;s<r.length;s++){var a=r[s];if(!(t.buckets[a].length<2)){var l=a.split(/C|R/);n.rect(.5+parseInt(l[1],10)*t.bucketWidth,.5+parseInt(l[2],10)*t.bucketHeight,t.bucketWidth,t.bucketHeight)}}n.lineWidth=1,n.stroke()},n.inspector=function(e,t){var i,n=(e.engine,e.selected),o=e.render,r=o.options;if(r.hasBounds){var s=o.bounds.max.x-o.bounds.min.x,a=o.bounds.max.y-o.bounds.min.y,l=s/o.options.width,c=a/o.options.height;t.scale(1/l,1/c),t.translate(-o.bounds.min.x,-o.bounds.min.y)}for(var d=0;d<n.length;d++){var u=n[d].data;switch(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle="rgba(255,165,0,0.9)",t.setLineDash([1,2]),u.type){case"body":i=u.bounds,t.beginPath(),t.rect(Math.floor(i.min.x-3),Math.floor(i.min.y-3),Math.floor(i.max.x-i.min.x+6),Math.floor(i.max.y-i.min.y+6)),t.closePath(),t.stroke();break;case"constraint":var p=u.pointA;u.bodyA&&(p=u.pointB),t.beginPath(),t.arc(p.x,p.y,10,0,2*Math.PI),t.closePath(),t.stroke()}t.setLineDash([]),t.translate(-.5,-.5)}null!==e.selectStart&&(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle="rgba(255,165,0,0.6)",t.fillStyle="rgba(255,165,0,0.1)",i=e.selectBounds,t.beginPath(),t.rect(Math.floor(i.min.x),Math.floor(i.min.y),Math.floor(i.max.x-i.min.x),Math.floor(i.max.y-i.min.y)),t.closePath(),t.stroke(),t.fill(),t.translate(-.5,-.5)),r.hasBounds&&t.setTransform(1,0,0,1,0,0)};var i=function(e,t){var i=document.createElement("canvas");return i.width=e,i.height=t,i.oncontextmenu=function(){return!1},i.onselectstart=function(){return!1},i},u=function(e){var t=e.getContext("2d");return(window.devicePixelRatio||1)/(t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1)},p=function(e,t){var i=e.textures[t];return i||((i=e.textures[t]=new Image).src=t,i)},h=function(e,t){var i=t;/(jpg|gif|png)$/.test(t)&&(i="url("+t+")"),e.canvas.style.background=i,e.canvas.style.backgroundSize="contain",e.currentBackground=t}}()},{"../body/Composite":2,"../collision/Grid":6,"../core/Common":14,"../core/Events":16,"../core/Mouse":19,"../geometry/Bounds":26,"../geometry/Vector":28}],32:[function(e,t,i){var n={};t.exports=n;var o=e("../geometry/Bounds"),r=e("../body/Composite"),s=e("../core/Common"),a=e("../core/Events"),l=e("../geometry/Vector");!function(){var e,t;"undefined"!=typeof window&&(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout((function(){e(s.now())}),1e3/60)},t=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),n.create=function(e){s.warn("RenderPixi.create: Matter.RenderPixi is deprecated (see docs)");var t={controller:n,engine:null,element:null,frameRequestId:null,canvas:null,renderer:null,container:null,spriteContainer:null,pixiOptions:null,options:{width:800,height:600,background:"#fafafa",wireframeBackground:"#222",hasBounds:!1,enabled:!0,wireframes:!0,showSleeping:!0,showDebug:!1,showBroadphase:!1,showBounds:!1,showVelocity:!1,showCollisions:!1,showAxes:!1,showPositions:!1,showAngleIndicator:!1,showIds:!1,showShadows:!1}},i=s.extend(t,e),o=!i.options.wireframes&&"transparent"===i.options.background;return i.pixiOptions=i.pixiOptions||{view:i.canvas,transparent:o,antialias:!0,backgroundColor:e.background},i.mouse=e.mouse,i.engine=e.engine,i.renderer=i.renderer||new PIXI.WebGLRenderer(i.options.width,i.options.height,i.pixiOptions),i.container=i.container||new PIXI.Container,i.spriteContainer=i.spriteContainer||new PIXI.Container,i.canvas=i.canvas||i.renderer.view,i.bounds=i.bounds||{min:{x:0,y:0},max:{x:i.options.width,y:i.options.height}},a.on(i.engine,"beforeUpdate",(function(){n.clear(i)})),i.textures={},i.sprites={},i.primitives={},i.container.addChild(i.spriteContainer),s.isElement(i.element)?i.element.appendChild(i.canvas):s.warn('No "render.element" passed, "render.canvas" was not inserted into document.'),i.canvas.oncontextmenu=function(){return!1},i.canvas.onselectstart=function(){return!1},i},n.run=function(t){!function i(o){t.frameRequestId=e(i),n.world(t)}()},n.stop=function(e){t(e.frameRequestId)},n.clear=function(e){for(var t=e.container,i=e.spriteContainer;t.children[0];)t.removeChild(t.children[0]);for(;i.children[0];)i.removeChild(i.children[0]);var n=e.sprites["bg-0"];e.textures={},e.sprites={},e.primitives={},e.sprites["bg-0"]=n,n&&t.addChildAt(n,0),e.container.addChild(e.spriteContainer),e.currentBackground=null,t.scale.set(1,1),t.position.set(0,0)},n.setBackground=function(e,t){if(e.currentBackground!==t){var i=t.indexOf&&-1!==t.indexOf("#"),n=e.sprites["bg-0"];if(i){var o=s.colorToNumber(t);e.renderer.backgroundColor=o,n&&e.container.removeChild(n)}else if(!n){var r=d(e,t);(n=e.sprites["bg-0"]=new PIXI.Sprite(r)).position.x=0,n.position.y=0,e.container.addChildAt(n,0)}e.currentBackground=t}},n.world=function(e){var t,i=e.engine.world,s=e.renderer,a=e.container,c=e.options,d=r.allBodies(i),u=r.allConstraints(i),p=[];c.wireframes?n.setBackground(e,c.wireframeBackground):n.setBackground(e,c.background);var h=e.bounds.max.x-e.bounds.min.x,m=e.bounds.max.y-e.bounds.min.y,f=h/e.options.width,v=m/e.options.height;if(c.hasBounds){for(t=0;t<d.length;t++){var y=d[t];y.render.sprite.visible=o.overlaps(y.bounds,e.bounds)}for(t=0;t<u.length;t++){var g=u[t],x=g.bodyA,b=g.bodyB,w=g.pointA,S=g.pointB;x&&(w=l.add(x.position,g.pointA)),b&&(S=l.add(b.position,g.pointB)),w&&S&&(o.contains(e.bounds,w)||o.contains(e.bounds,S))&&p.push(g)}a.scale.set(1/f,1/v),a.position.set(-e.bounds.min.x*(1/f),-e.bounds.min.y*(1/v))}else p=u;for(t=0;t<d.length;t++)n.body(e,d[t]);for(t=0;t<p.length;t++)n.constraint(e,p[t]);s.render(a)},n.constraint=function(e,t){var i=(e.engine,t.bodyA),n=t.bodyB,o=t.pointA,r=t.pointB,a=e.container,l=t.render,c="c-"+t.id,d=e.primitives[c];d||(d=e.primitives[c]=new PIXI.Graphics),l.visible&&t.pointA&&t.pointB?(-1===s.indexOf(a.children,d)&&a.addChild(d),d.clear(),d.beginFill(0,0),d.lineStyle(l.lineWidth,s.colorToNumber(l.strokeStyle),1),i?d.moveTo(i.position.x+o.x,i.position.y+o.y):d.moveTo(o.x,o.y),n?d.lineTo(n.position.x+r.x,n.position.y+r.y):d.lineTo(r.x,r.y),d.endFill()):d.clear()},n.body=function(e,t){var n=(e.engine,t.render);if(n.visible)if(n.sprite&&n.sprite.texture){var o="b-"+t.id,r=e.sprites[o],a=e.spriteContainer;r||(r=e.sprites[o]=i(e,t)),-1===s.indexOf(a.children,r)&&a.addChild(r),r.position.x=t.position.x,r.position.y=t.position.y,r.rotation=t.angle,r.scale.x=n.sprite.xScale||1,r.scale.y=n.sprite.yScale||1}else{var l="b-"+t.id,d=e.primitives[l],u=e.container;d||((d=e.primitives[l]=c(e,t)).initialAngle=t.angle),-1===s.indexOf(u.children,d)&&u.addChild(d),d.position.x=t.position.x,d.position.y=t.position.y,d.rotation=t.angle-d.initialAngle}};var i=function(e,t){var i=t.render.sprite.texture,n=d(e,i),o=new PIXI.Sprite(n);return o.anchor.x=t.render.sprite.xOffset,o.anchor.y=t.render.sprite.yOffset,o},c=function(e,t){var i,n=t.render,o=e.options,r=new PIXI.Graphics,a=s.colorToNumber(n.fillStyle),l=s.colorToNumber(n.strokeStyle),c=s.colorToNumber(n.strokeStyle),d=s.colorToNumber("#bbb"),u=s.colorToNumber("#CD5C5C");r.clear();for(var p=t.parts.length>1?1:0;p<t.parts.length;p++){i=t.parts[p],o.wireframes?(r.beginFill(0,0),r.lineStyle(1,d,1)):(r.beginFill(a,1),r.lineStyle(n.lineWidth,l,1)),r.moveTo(i.vertices[0].x-t.position.x,i.vertices[0].y-t.position.y);for(var h=1;h<i.vertices.length;h++)r.lineTo(i.vertices[h].x-t.position.x,i.vertices[h].y-t.position.y);r.lineTo(i.vertices[0].x-t.position.x,i.vertices[0].y-t.position.y),r.endFill(),(o.showAngleIndicator||o.showAxes)&&(r.beginFill(0,0),o.wireframes?r.lineStyle(1,u,1):r.lineStyle(1,c),r.moveTo(i.position.x-t.position.x,i.position.y-t.position.y),r.lineTo((i.vertices[0].x+i.vertices[i.vertices.length-1].x)/2-t.position.x,(i.vertices[0].y+i.vertices[i.vertices.length-1].y)/2-t.position.y),r.endFill())}return r},d=function(e,t){var i=e.textures[t];return i||(i=e.textures[t]=PIXI.Texture.fromImage(t)),i}}()},{"../body/Composite":2,"../core/Common":14,"../core/Events":16,"../geometry/Bounds":26,"../geometry/Vector":28}]},{},[30])(30)}).call(this,i(2))},function(e){e.exports=JSON.parse('{"particle_radius":5,"interaction_radius":10,"gravity":0.05,"stiffness":0.006,"near_stiffness":0.625,"rest_density":6.4,"sigma":0.3,"beta":0.9,"particle_limit":1024}')},function(e,t){var i;i=function(){return this}();try{i=i||new Function("return this")()}catch(e){"object"==typeof window&&(i=window)}e.exports=i},function(e,t,i){!function(){function t(e,t){document.addEventListener?e.addEventListener("scroll",t,!1):e.attachEvent("scroll",t)}function i(e){this.a=document.createElement("div"),this.a.setAttribute("aria-hidden","true"),this.a.appendChild(document.createTextNode(e)),this.b=document.createElement("span"),this.c=document.createElement("span"),this.h=document.createElement("span"),this.f=document.createElement("span"),this.g=-1,this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;",this.b.appendChild(this.h),this.c.appendChild(this.f),this.a.appendChild(this.b),this.a.appendChild(this.c)}function n(e,t){e.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+t+";"}function o(e){var t=e.a.offsetWidth,i=t+100;return e.f.style.width=i+"px",e.c.scrollLeft=i,e.b.scrollLeft=e.b.scrollWidth+100,e.g!==t&&(e.g=t,!0)}function r(e,i){function n(){var e=r;o(e)&&e.a.parentNode&&i(e.g)}var r=e;t(e.b,n),t(e.c,n),o(e)}function s(e,t){var i=t||{};this.family=e,this.style=i.style||"normal",this.weight=i.weight||"normal",this.stretch=i.stretch||"normal"}var a=null,l=null,c=null,d=null;function u(){return null===d&&(d=!!document.fonts),d}function p(){if(null===c){var e=document.createElement("div");try{e.style.font="condensed 100px sans-serif"}catch(e){}c=""!==e.style.font}return c}function h(e,t){return[e.style,e.weight,p()?e.stretch:"","100px",t].join(" ")}s.prototype.load=function(e,t){var o=this,s=e||"BESbswy",c=0,d=t||3e3,p=(new Date).getTime();return new Promise((function(e,t){if(u()&&!function(){if(null===l)if(u()&&/Apple/.test(window.navigator.vendor)){var e=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);l=!!e&&603>parseInt(e[1],10)}else l=!1;return l}()){var m=new Promise((function(e,t){!function i(){(new Date).getTime()-p>=d?t(Error(d+"ms timeout exceeded")):document.fonts.load(h(o,'"'+o.family+'"'),s).then((function(t){1<=t.length?e():setTimeout(i,25)}),t)}()})),f=new Promise((function(e,t){c=setTimeout((function(){t(Error(d+"ms timeout exceeded"))}),d)}));Promise.race([f,m]).then((function(){clearTimeout(c),e(o)}),t)}else!function(e){document.body?e():document.addEventListener?document.addEventListener("DOMContentLoaded",(function t(){document.removeEventListener("DOMContentLoaded",t),e()})):document.attachEvent("onreadystatechange",(function t(){"interactive"!=document.readyState&&"complete"!=document.readyState||(document.detachEvent("onreadystatechange",t),e())}))}((function(){function l(){var t;(t=-1!=v&&-1!=y||-1!=v&&-1!=g||-1!=y&&-1!=g)&&((t=v!=y&&v!=g&&y!=g)||(null===a&&(t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),a=!!t&&(536>parseInt(t[1],10)||536===parseInt(t[1],10)&&11>=parseInt(t[2],10))),t=a&&(v==x&&y==x&&g==x||v==b&&y==b&&g==b||v==w&&y==w&&g==w)),t=!t),t&&(S.parentNode&&S.parentNode.removeChild(S),clearTimeout(c),e(o))}var u=new i(s),m=new i(s),f=new i(s),v=-1,y=-1,g=-1,x=-1,b=-1,w=-1,S=document.createElement("div");S.dir="ltr",n(u,h(o,"sans-serif")),n(m,h(o,"serif")),n(f,h(o,"monospace")),S.appendChild(u.a),S.appendChild(m.a),S.appendChild(f.a),document.body.appendChild(S),x=u.a.offsetWidth,b=m.a.offsetWidth,w=f.a.offsetWidth,function e(){if((new Date).getTime()-p>=d)S.parentNode&&S.parentNode.removeChild(S),t(Error(d+"ms timeout exceeded"));else{var i=document.hidden;!0!==i&&void 0!==i||(v=u.a.offsetWidth,y=m.a.offsetWidth,g=f.a.offsetWidth,l()),c=setTimeout(e,50)}}(),r(u,(function(e){v=e,l()})),n(u,h(o,'"'+o.family+'",sans-serif')),r(m,(function(e){y=e,l()})),n(m,h(o,'"'+o.family+'",serif')),r(f,(function(e){g=e,l()})),n(f,h(o,'"'+o.family+'",monospace'))}))}))},e.exports=s}()},function(e,t,i){"use strict";i.r(t);var n=i(0);class o{constructor(e,t,i){this.h=e,this.min=n.Vector.clone(t),this.max=n.Vector.clone(i),this.size=n.Vector.create(Math.ceil((this.max.x-this.min.x)/this.h),Math.ceil((this.max.y-this.min.y)/this.h)),this.grid=[]}worldToGrid(e){return n.Vector.create(Math.floor(e.x/this.h),Math.floor(e.y/this.h))}gridToIndex(e){return e.y*this.size.x+e.x}update(e){for(let e=0;e<this.size.x*this.size.y;e++)this.grid[e]=[];for(let t of e){let e=this.worldToGrid(t.position),i=this.gridToIndex(e);this.grid[i].push(t)}}getNeighbors(e){let t=this.worldToGrid(n.Vector.create(e.position.x-this.h,e.position.y-this.h)),i=this.worldToGrid(n.Vector.create(e.position.x+this.h,e.position.y+this.h)),o=[];for(let r=t.x;r<=i.x;r++)for(let s=t.y;s<=i.y;s++){if(r<0||s<0||r>=this.size.x||s>=this.size.y)continue;let t=this.grid[this.gridToIndex(n.Vector.create(r,s))];for(let i of t){n.Vector.magnitudeSquared(n.Vector.sub(e.position,i.position))<this.h*this.h&&o.push(i)}}return o}}var r=i(1);class s{constructor(e,t){this.dimensions=new PIXI.Point(10,10),this.r=5,this.position=n.Vector.create(e.x,e.y),this.o=n.Vector.create(e.x,e.y),this.f=n.Vector.create(0,0),this.isNew=!0,this.velocity=t?n.Vector.clone(t):n.Vector.create(0,0),this.density=0,this.nearDensity=0,this.ticks=60}}class a{constructor(e,t,i,s=PIXI.Rectangle(.5*window.innerWidth,.5*window.innerHeight,window.innerWidth,window.innerHeight)){this.bodies=i,this.min=n.Vector.clone(e),this.max=n.Vector.clone(t),this.particles=[],this.nearParticlesCache=[],this.particlePositions=[],this.renderer=new PIXI.Graphics,this.particleCount=0,console.log(r),this.gravity=r.gravity,this.r=r.particle_radius,this.h=r.interaction_radius,this.stiffness=r.stiffness,this.nearStiffness=r.near_stiffness,this.restDensity=r.rest_density,this.sigma=r.sigma,this.beta=r.beta,this.PARTICLE_LIMIT=r.particle_limit,this.hash=new o(this.h,e,t),this.containerBounds=new PIXI.Rectangle(.5*window.innerWidth,.5*window.innerHeight,window.innerWidth,window.innerHeight)}update(){this.nearParticlesCache=[],this.clearOOB(),this.removeDeadParticles(),this.hash.update(this.particles);for(let e=0;e<this.particles.length;e++){let t=this.particles[e];t.position=n.Vector.add(t.position,t.f),t.f.x=0,t.f.y=0,t.nearDensity=0,t.density=0,t.isNew||(t.velocity=n.Vector.sub(t.position,t.o)),t.isNew=!1,t.velocity.y+=this.gravity,this.viscosityImpulses(e,1)}for(let e=0;e<this.particles.length;e++){let t=this.particles[e];t.o=n.Vector.clone(t.position),t.position=n.Vector.add(t.position,t.velocity),this.computeDensities(e),this.handleCollision(t)}this.doubleDensityRelaxation(1),this.updateParticlePositions()}clearOOB(){for(var e=0;e<this.particles.length;++e){let t=this.particles[e].position;(t.x<this.min.x||t.y<this.min.y||t.x>=this.max.x||t.y>=this.max.y)&&(this.particles.splice(e,1),this.particlePositions.splice(2*e,2),--e,--this.particleCount)}}viscosityImpulses(e,t){let i=this.particles[e],o=this.hash.getNeighbors(i);this.nearParticlesCache[e]=o;for(let e of o){let o=n.Vector.sub(i.position,e.position),r=n.Vector.dot(o,o);if(r<=0||r>this.h*this.h)continue;let s=Math.sqrt(r),a=n.Vector.normalise(o),l=1-s/this.h,c=n.Vector.sub(i.velocity,e.velocity),d=n.Vector.dot(c,a),u=0;d>0?(u=t*l*(this.sigma*d+this.beta*d*d)*.5,u>d&&(u=d)):(u=t*l*(this.sigma*d-this.beta*d*d)*.5,u<d&&(u=d));let p=n.Vector.mult(a,u);i.velocity=n.Vector.add(i.velocity,n.Vector.mult(p,-1)),e.velocity=n.Vector.add(e.velocity,n.Vector.mult(p,1))}}computeDensities(e){let t=this.nearParticlesCache[e],i=this.particles[e];for(let e of t){let t=n.Vector.sub(i.position,e.position),o=n.Vector.dot(t,t);if(o<=0||o>this.h*this.h)continue;let r=1-Math.sqrt(o)/this.h,s=r*r,a=s*r;i.density+=s,e.density+=s,i.nearDensity+=a,e.nearDensity+=a}}doubleDensityRelaxation(e){for(let t=0;t<this.particles.length;t++){let i=this.particles[t],o=this.stiffness*(i.density-this.restDensity),r=this.nearStiffness*i.nearDensity,s=this.nearParticlesCache[t];for(let t of s){let s=n.Vector.sub(i.position,t.position),a=n.Vector.dot(s,s);if(a<=0||a>this.h*this.h)continue;let l=Math.sqrt(a),c=1-l/this.h,d=e*e*(o*c+r*c*c)*.5,u=n.Vector.mult(s,d/l);i.f=n.Vector.add(i.f,n.Vector.mult(u,1)),t.f=n.Vector.add(t.f,n.Vector.mult(u,-1))}}}handleCollision(e){for(let t of this.bodies)this.boxCollision(e,t);this.boxCollision(e,this.containerBounds,!0)}boxCollision(e,t,i=!1){let o=-1;i&&(o=1);let r=e.position,s=n.Vector.create(t.x,t.y),a=n.Vector.sub(r,s),l=n.Vector.create(Math.abs(a.x),Math.abs(a.y)),c=n.Vector.create(.5*t.width,.5*t.height),d=n.Vector.sub(l,c),u=n.Vector.magnitude(n.Vector.create(Math.max(d.x,0),Math.max(d.y,0)))+Math.min(Math.max(d.x,d.y),0)+this.r*o;if(i&&u>=0||!i&&u<=0){let t=n.Vector.create(Math.min(c.x,Math.max(-c.x,a.x)),Math.min(c.y,Math.max(-c.y,a.y))),o=n.Vector.create(Math.sign(t.x-a.x),Math.sign(t.y-a.y));o=n.Vector.normalise(o);let r=n.Vector.mult(o,n.Vector.dot(e.velocity,o)),l=n.Vector.sub(e.velocity,r);r=n.Vector.mult(r,.5),e.velocity.x=r.x,e.velocity.y=r.y,e.f=n.Vector.add(e.f,n.Vector.neg(n.Vector.sub(l,n.Vector.mult(r,.01)))),e.position=i?n.Vector.add(s,t):n.Vector.add(e.position,n.Vector.mult(o,u))}}removeDeadParticles(){let e=this.particleCount-this.PARTICLE_LIMIT;e>0&&this.particles.splice(2,e)}updateParticlePositions(){this.particlePositions=[],this.particleCount=this.particles.length;for(let e of this.particles)this.particlePositions.push(e.position.x,e.position.y)}addParticle(e,t){let i=new s(e,t),o=new s(n.Vector.create(e.x+.1,e.y),t);this.particlePositions.push(i.position.x,i.position.y,o.position.x,o.position.y),this.particles.push(i,o),this.particleCount+=2}clearParticles(){this.particles=[],this.particlePositions=[],this.particleCount=0}}class l{constructor(e,t,i){const n=new PIXI.Point(5,10);this.textDisplay=new PIXI.Text(e,{fill:0,fontSize:32,fontFamily:"arcadeclassicregular"});const o=new PIXI.Rectangle(t.x,t.y,this.textDisplay.width+2*n.x,this.textDisplay.height+2*n.y);this.textDisplay.position.set(o.x+n.x,o.y+n.y),this.displayContainer=new PIXI.Container,this.buttonRenderer=new PIXI.Graphics,this.buttonRenderer.interactive=!0,this.buttonRenderer.buttonMode=!0,this.buttonRenderer.beginFill(16777215,1).drawRoundedRect(o.x,o.y,o.width,o.height).endFill(),this.buttonRenderer.on("pointerdown",i),this.displayContainer.addChild(this.buttonRenderer),this.displayContainer.addChild(this.textDisplay)}}class c extends PIXI.Filter{constructor(e,t){super("attribute vec2 aVertexPosition;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform vec4 inputSize;\r\nuniform vec4 outputFrame;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vInputSize;\r\nvarying vec4 vOutputFrame;\r\n\r\nvec4 filterVertexPosition( void ) {\r\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n\r\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\r\n}\r\n\r\nvec2 filterTextureCoord( void ) {\r\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n}\r\n\r\nvec2 boxCoord(in vec2 boxPosition) {\r\n    return boxPosition * inputSize.zw;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = filterVertexPosition();\r\n    vTextureCoord = filterTextureCoord();\r\n\r\n    vInputSize = inputSize;\r\n    vOutputFrame = outputFrame;\r\n}".replace(/size_replacement/g,`${t}`),"varying vec2 vTextureCoord;\r\nvarying vec4 vInputSize;\r\nvarying vec4 vOutputFrame;\r\n\r\nuniform sampler2D uSampler;\r\n\r\n// uniform vec2 particleVerts[size_replacement];\r\nuniform sampler2D position_sampler;\r\nuniform float particleRadius;\r\nuniform int numParticles;\r\nuniform float inv_position_texture_width;\r\nuniform int odd;\r\n\r\n#define MERGE_RADIUS 0.05\r\n\r\n\r\nfloat circleSDF(vec2 point, float radius){\r\n\tfloat line_resolition = 0.005;\t// controls density of the field lines\r\n\tfloat scaled_radius = line_resolition*radius;// scale down the radius to fit the resolution\r\n\r\n\tvec2 conv_factor = vInputSize.xy*line_resolition;\r\n\tvec2 position = (vTextureCoord - point)*conv_factor;\r\n\r\n\treturn length(position) - scaled_radius;\r\n\r\n}\r\n\r\n// rounds off edges between edges of shapes\r\nfloat round_merge(float shape1, float shape2, float radius){\r\n\tvec2 intersection_space = vec2(shape1 - radius, shape2 - radius);\r\n\tintersection_space = min(intersection_space, 0.0);\r\n\r\n\tfloat insideDistance = -length(intersection_space);\r\n\tfloat simpleUnion = min(shape1, shape2);\r\n\tfloat outsideDistance = max(simpleUnion, radius);\r\n\r\n\treturn  insideDistance + outsideDistance;\r\n}\r\n\r\nfloat sample_2_positions(int index){\r\n\t// sample the pixel\r\n\tvec4 sample =  texture2D(position_sampler, vec2(float(index) * inv_position_texture_width, 0.5));\r\n\r\n\t// compute signed distnaces\r\n\tfloat d1 = circleSDF(sample.rg, particleRadius);\r\n\tfloat d2 = circleSDF(sample.ba, particleRadius);\r\n\r\n\t// return closest distance\r\n\treturn round_merge(d1, d2, MERGE_RADIUS);\r\n\r\n\t// return min(d1, d2);\r\n}\r\n\r\n// returns minimum distance from texture coordinate to a surface\r\nfloat sdf_min() {\r\n\tfloat d = 1000000.0;\t\t\r\n    const int MAX_ITER = size_replacement;\r\n\t// int width = int(ceil(float(numParticles) * 0.5));\r\n\tint width = numParticles/2 + odd;\r\n\r\n\t// if ( odd == 1){\r\n\t// \tvec4 sample =  texture2D(position_sampler, vec2(1.0, 0.5));\r\n\t// \td = circleSDF(sample.rg, particleRadius);\r\n\t// \t--width;\r\n\t// }\r\n\r\n\tfor ( int i = 0; i < MAX_ITER; i++){\r\n\t\tif ( i >= width ) break;\r\n\r\n\t\tfloat td = sample_2_positions(i);\r\n\r\n\t\t// d = min(td, d);\r\n\t\td = round_merge(d,td,MERGE_RADIUS);\r\n\t}\r\n\r\n\treturn d; \r\n}\r\n\r\n// draw field of lines representing the signed distance field\r\nvoid main( void )\r\n{\r\n\tfloat d = sdf_min();\r\n    \r\n\t// coloring\r\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\r\n    col *= 1.0 - exp(-3.0*abs(d));\r\n\tcol *= 0.8 + 0.2*cos(150.0*d);\r\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\r\n\r\n\tvec4 sampleColor = texture2D(uSampler, vTextureCoord);\r\n\r\n\t// if ( sampleColor.r > 0.0)\r\n\t// \tgl_FragColor = sampleColor;\r\n\t// else\t\r\n\tgl_FragColor =vec4(col,1.0);\r\n\r\n\t// gl_FragColor = mix(sampleColor,vec4(col, 1.0), 0.5);\r\n}".replace(/size_replacement/g,`${t}`),{numParticles:0,particleRadius:e,MAX_PARTICLES:t,PositionTexture:[],inv_position_texture_width:0,odd:0})}}class d{constructor(e,t){this.max_particles=e,this.filterTexture=new PIXI.RenderTexture.create({width:e,height:1}),console.log("Max particles: ",e),this.particleFilter=t}updateParticles(e){const t=.5*e.length;if(e.length>0){let i=[],n=[1/window.innerWidth,1/window.innerHeight];for(let t=0;t<e.length;t+=2)i.push(e[t]*n[0],e[t+1]*n[1]);let o=t%2;o&&i.push(0,0);let r=.5*t+.5*o,s=Float32Array.from(i);this.filterTexture=new PIXI.Texture.fromBuffer(s,r,1),this.particleFilter.uniforms.inv_position_texture_width=1/r,this.particleFilter.uniforms.odd=o}else console.log("No particles to update!")}}class u{constructor(e,t,i){this.fillColor=3607434,this.lineColor=16777215,this.r=.5*i,this.x=e*i+this.r,this.y=t*i+this.r,this.hash=n.Vector.create(e,t),this.s=i,this.width=i,this.height=i,this.position=n.Vector.create(this.x,this.y),this.hidden=!1}drawRect(e){e.lineStyle(2,this.lineColor,1).beginFill(this.fillColor,1).drawRect(this.x-this.r,this.y-this.r,this.s,this.s).endFill()}}class p{constructor(e,t){this.stage=t,this.tiles=[],this.tilePositions=[],this.tileSize=32,this.terrainRenderer=new PIXI.Graphics,t.addChild(this.terrainRenderer),this.hash=new o(this.tileSize,n.Vector.create(0,0),n.Vector.create(window.innerWidth,window.innerHeight)),this.particleSystem=e,this.particleSystem.bodies=this.tiles}addTile(e,t=!0,i=!1){let n=this.hash.worldToGrid(e),o=!1;for(let e of this.tiles)e.hash.x==n.x&&e.hash.y==n.y&&(o=!0);o||this.addTileAtGrid(n,t)}addTileAtGrid(e,t=!0,i=!1){let n=new u(e.x,e.y,this.tileSize);t?n.drawRect(this.terrainRenderer):n.hidden=!0,this.tiles.push(n),this.tilePositions.push(n.x,n.y),i&&(this.stage.filters=[new SdfFilter(this.tilePositions,this.tileSize)])}eraseTile(e){let t=this.hash.worldToGrid(e);for(let e=0;e<this.tiles.length;e++){let i=this.tiles[e];if(!i.hidden&&i.hash.x==t.x&&i.hash.y==t.y){this.tiles.splice(e,1),this.terrainRenderer.clear();for(let e=1;e<this.tiles.length;e++)this.tiles[e].drawRect(this.terrainRenderer);return}}}clearTiles(){this.tiles=[],this.tilePositions=[],this.terrainRenderer.clear(),this.particleSystem.bodies=this.tiles}addParticle(e){this.particleSystem.addParticle(e)}clearParticles(){this.particleSystem.clearParticles()}clearAll(){this.clearTiles(),this.clearParticles();let e=new PIXI.Point(92,38);this.addParticle(e),this.addTile(e,!1)}}class h{constructor(e){this.sprite=(new PIXI.Graphics).beginFill(15790320).drawRoundedRect(0,0,50,50).endFill(),this.highLightRect=(new PIXI.Graphics).beginFill(7902905).drawRoundedRect(0,0,60,60).endFill(),this.highLightRect.visible=!1,this.callback=e,this.active=!1,this.position=this.sprite.position,this.sprite.interactive=!0,this.sprite.buttonMode=!0,this.sprite.on("pointerdown",e=>{this.active=!0,console.log("button press!!")})}}class m extends h{constructor(e,t){super(t,e),this.inconTile=new u(.5,.5,24).drawRect(this.sprite)}}class f extends h{constructor(e,t){super(t,e)}}class v extends h{constructor(e,t){super(t,e)}}class y{constructor(e,t){this.instancer=e,this.stage=e.stage,this.UI_Container=t,this.particleSystem=e.particleSystem,this.buttons=new Map([["Tile",new m(e,e=>{this.instancer.addTile(e)})],["Particle",new f(e,e=>{this.instancer.addParticle(e)})],["Eraser",new v(e,e=>{this.instancer.eraseTile(e)})]]);let i=0;this.buttons.forEach((e,t)=>{e.position.set(60*i+10,10),e.highLightRect.position.set(60*i+5,5),this.UI_Container.addChild(e.highLightRect,e.sprite),i++}),this.activeButton="Particle",this.buttons.get(this.activeButton).active=!0,console.log(this.buttons.get(this.activeButton)),this.callback=this.buttons.get(this.activeButton).callback}update(){let e=this.activeButton;this.buttons.forEach((t,i)=>{t.active&&this.activeButton!=i&&(e=i)}),this.buttons.get(this.activeButton).active=!1,this.buttons.get(this.activeButton).highLightRect.visible=!1,this.buttons.get(e).active=!0,this.buttons.get(e).highLightRect.visible=!0,this.activeButton=e,this.callback=this.buttons.get(this.activeButton).callback}}function g(e,t,i=!1,n="POST"){var o=new XMLHttpRequest;o.onreadystatechange=function(){4==this.readyState&&200==this.status&&e(this)},o.open(n,t,i),o.send()}var x=i(3);function b(e){let t=e.tiles,i=[];for(let e of t)i.push([e.hash.x,e.hash.y]);return i}function w(){var e=window.navigator.userAgent,t=window.navigator.platform,i=null;return-1!==["Macintosh","MacIntel","MacPPC","Mac68K"].indexOf(t)?i="Mac OS":-1!==["iPhone","iPad","iPod"].indexOf(t)?i="iOS":-1!==["Win32","Win64","Windows","WinCE"].indexOf(t)?i="Windows":/Android/.test(e)?i="Android":!i&&/Linux/.test(t)&&(i="Linux"),i}function S(){var e=navigator.userAgent;return e.indexOf("Firefox")>-1?"Mozilla Firefox":e.indexOf("SamsungBrowser")>-1?"Samsung Internet":e.indexOf("Opera")>-1||e.indexOf("OPR")>-1?"Opera":e.indexOf("Trident")>-1?"Microsoft Internet Explorer":e.indexOf("Edge")>-1?"Microsoft Edge":e.indexOf("Chrome")>-1?"Google Chrome or Chromium":e.indexOf("Safari")>-1?"Apple Safari":"unknown"}class C{constructor(e){this.app=e,this.updateLag=0,this.mapDimensions=new PIXI.Point(16,16),this.tileSize=32,this.frameCount=0,this.level_loaded=!1,this.particleContainer=new PIXI.Container,this.UI_Elements=new PIXI.Container,this.UI_Elements.alpha=.5,this.mouseDown=!1,this.cursor=this.app.renderer.plugins.interaction.mouse.global,"ontouchstart"in document.documentElement&&(this.cursor=new PIXI.Point),this.initEventListeners(),this.particleSystem=new a(n.Vector.create(-100,-100),n.Vector.create(window.innerWidth+100,window.innerHeight+100),[]),this.emitters=[],this.app.stage.addChild(this.particleContainer),this.instancer=new p(this.particleSystem,this.app.stage);let t=new PIXI.Point(92,38);this.instancer.addTile(t,!1),this.instancer.addParticle(t),this.particleFilter=new c(this.particleSystem.r,this.particleSystem.PARTICLE_LIMIT),this.sdfTexture=new d(this.particleSystem.PARTICLE_LIMIT,this.particleFilter),this.sdfTexture.updateParticles(this.particleSystem.particlePositions),this.particleContainer.filterArea=this.app.screen,this.particleContainer.filters=[this.particleFilter],this.initWorldBounds()}startApp(){this.initUI(),this.app.stage.addChild(this.particleSystem.renderer,this.UI_Elements),this.app.ticker.add(e=>this.update(e))}update(e){this.frameCount++,this.FixedUpdate(),this.toolbar.update(),this.rightMouseDown&&this.instancer.addTile(this.cursor)}FixedUpdate(){for(this.updateLag+=this.app.ticker.deltaMS;this.updateLag>=16.666;){this.updateLag-=16.666;for(let e of this.emitters)e.update();if(this.particleFilter.uniforms.position_sampler=this.sdfTexture.filterTexture,this.particleFilter.uniforms.numParticles=this.particleSystem.particleCount,this.sdfTexture.updateParticles(this.particleSystem.particlePositions),this.mouseDown){let e=!1;for(let t of this.UI_Elements.children)this.app.renderer.plugins.interaction.hitTest(this.cursor,t)&&(e=!0);e||this.toolbar.callback.call(this,this.cursor)}this.particleSystem.update()}}initWorldBounds(){var e;e=e=>{!function(e,t,i){let o=e.responseXML.getElementsByTagName("tile");for(let e=0;e<o.length;e++){let i=o[e].childNodes[0].nodeValue.split(" ");for(let e=0;e<i.length;e++)i[e]=parseInt(i[e]);let r=n.Vector.create(i[0],i[1]);2==r.x&&1==r.y||t.addTileAtGrid(r)}i.resetFilter(),new x("arcadeclassicregular").load().then(i.startApp.bind(i))}(e,this.instancer,this)},$.post("php/get_rand_level.php",{time:(new Date).toLocaleTimeString(),OS:w(),browser:S()},(function(t,i){console.log("Data: "+t+"\nStatus: "+i),g(e,"levels/"+t+".xml",!1)}))}updateUI(){if(this.ParticleCountDisplay.text=`PARTICLES: ${this.particleSystem.particleCount}`,this.frameCount%10==0){const e=Number.parseFloat(1/(.001*this.app.ticker.deltaMS)).toFixed(2);this.FPSDisplay.text=`FPS: ${e}`,this.frameCount=1}}initUI(){this.toolbar=new y(this.instancer,this.UI_Elements);window.innerWidth;this.clearButton=new l("CLEAR",new PIXI.Point(window.innerWidth-105,10),this.instancer.clearAll.bind(this.instancer)),this.saveButton=new l("SAVE",new PIXI.Point(window.innerWidth-190,10),()=>{var e=prompt("name your level, punk","blob co");e?(console.log("level name: ",e),$.post("php/add_level.php",{time:(new Date).toLocaleTimeString(),OS:w(),browser:S(),name:e,tiles:b(this.instancer)},(function(e,t){console.log("Data: "+e+"\nStatus: "+t)}))):console.log("User cancelled the prompt.")}),this.UI_Elements.addChild(this.clearButton.displayContainer,this.saveButton.displayContainer)}resetFilter(){this.particleFilter=new c(this.particleSystem.r,this.particleSystem.PARTICLE_LIMIT),this.sdfTexture=new d(this.particleSystem.PARTICLE_LIMIT,this.particleFilter),this.sdfTexture.updateParticles(this.particleSystem.particlePositions),this.particleContainer.filterArea=this.app.screen,this.particleContainer.filters=[this.particleFilter]}initEventListeners(){window.addEventListener("mousedown",e=>{switch(e.button){case 0:this.mouseDown=!0;break;case 2:this.rightMouseDown=!0}}),window.addEventListener("mouseup",e=>{switch(e.button){case 0:this.mouseDown=!1;break;case 2:this.rightMouseDown=!1}}),window.addEventListener("resize",this.onWindowResize.bind(this),!1),window.addEventListener("touchstart",e=>{this.mouseDown=!0,this.cursor.set(e.touches[0].clientX,e.touches[0].clientY)}),window.addEventListener("touchmove",e=>{this.cursor.set(e.touches[0].clientX,e.touches[0].clientY)}),window.addEventListener("touchend",()=>{this.mouseDown=!1}),document.getElementById("myCanvas").oncontextmenu=function(e){e.preventDefault()},window.addEventListener("keydown",e=>{32==e.keyCode&&this.resetFilter()})}onWindowResize(){const e=this.app.view.parentNode;this.app.renderer.resize(e.clientWidth,e.clientHeight)}}let P,A,I=PIXI.loader;I.resources;P=new PIXI.Application({width:window.innerWidth,height:window.innerHeight,antialias:!0,transparent:!1,resolution:1,backgroundColor:0,autoDensity:!0}),P.renderer.view.style.position="absolute",P.renderer.view.style.display="block",document.getElementById("myCanvas").appendChild(P.view),A=new C(P)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9tYXR0ZXItanMvYnVpbGQvbWF0dGVyLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9mb250ZmFjZW9ic2VydmVyL2ZvbnRmYWNlb2JzZXJ2ZXIuc3RhbmRhbG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9zaW11bGF0aW9uL3NwYXRpYWxIYXNoLmpzIiwid2VicGFjazovLy8uL3NpbXVsYXRpb24vcGFydGljbGUuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2J1dHRvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vZ3JhcGhpY3MvcGFydGljbGVGaWx0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vZ3JhcGhpY3Mvc2hhZGVycy9wYXJ0aWNsZS52ZXJ0Iiwid2VicGFjazovLy8uL2dyYXBoaWNzL3NoYWRlcnMvcGFydGljbGUuZnJhZyIsIndlYnBhY2s6Ly8vLi9zaW11bGF0aW9uL3RpbGVzLmpzIiwid2VicGFjazovLy8uL2FwcC9pbnN0YW5jZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL3Rvb2xiYXIuanMiLCJ3ZWJwYWNrOi8vLy4vbmV0d29yay94aHR0cC5qcyIsIndlYnBhY2s6Ly8vLi9uZXR3b3JrL3NlcmlhbGl6YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbmV0d29yay9nZXRPUy5qcyIsIndlYnBhY2s6Ly8vLi9zaW11bGF0aW9uL3NpbXVsYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbmV0d29yay9nZXRMZXZlbC5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvbXlMb2FkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbWFpbi5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImUiLCJhIiwiRXJyb3IiLCJjb2RlIiwibGVuZ3RoIiwiMSIsIl9pbmVydGlhU2NhbGUiLCJfbmV4dENvbGxpZGluZ0dyb3VwSWQiLCJfbmV4dE5vbkNvbGxpZGluZ0dyb3VwSWQiLCJfbmV4dENhdGVnb3J5IiwiaWQiLCJuZXh0SWQiLCJ0eXBlIiwibGFiZWwiLCJwYXJ0cyIsInBsdWdpbiIsImFuZ2xlIiwidmVydGljZXMiLCJmcm9tUGF0aCIsInBvc2l0aW9uIiwieCIsInkiLCJmb3JjZSIsInRvcnF1ZSIsInBvc2l0aW9uSW1wdWxzZSIsImNvbnN0cmFpbnRJbXB1bHNlIiwidG90YWxDb250YWN0cyIsInNwZWVkIiwiYW5ndWxhclNwZWVkIiwidmVsb2NpdHkiLCJhbmd1bGFyVmVsb2NpdHkiLCJpc1NlbnNvciIsImlzU3RhdGljIiwiaXNTbGVlcGluZyIsIm1vdGlvbiIsInNsZWVwVGhyZXNob2xkIiwiZGVuc2l0eSIsInJlc3RpdHV0aW9uIiwiZnJpY3Rpb24iLCJmcmljdGlvblN0YXRpYyIsImZyaWN0aW9uQWlyIiwiY29sbGlzaW9uRmlsdGVyIiwiY2F0ZWdvcnkiLCJtYXNrIiwiZ3JvdXAiLCJzbG9wIiwidGltZVNjYWxlIiwicmVuZGVyIiwidmlzaWJsZSIsIm9wYWNpdHkiLCJzcHJpdGUiLCJ4U2NhbGUiLCJ5U2NhbGUiLCJ4T2Zmc2V0IiwieU9mZnNldCIsImxpbmVXaWR0aCIsImV4dGVuZCIsIm5leHRHcm91cCIsIm5leHRDYXRlZ29yeSIsInNldCIsImJvdW5kcyIsInBvc2l0aW9uUHJldiIsImNsb25lIiwiYW5nbGVQcmV2IiwicGFyZW50Iiwicm90YXRlIiwiYXhlcyIsInVwZGF0ZSIsImFyZWEiLCJtYXNzIiwiaW5lcnRpYSIsImNob29zZSIsImZpbGxTdHlsZSIsInN0cm9rZVN0eWxlIiwibWluIiwibWF4Iiwic2V0U3RhdGljIiwic2V0TWFzcyIsInNldERlbnNpdHkiLCJzZXRJbmVydGlhIiwic2V0VmVydGljZXMiLCJzZXRQb3NpdGlvbiIsInNldEFuZ2xlIiwic2V0VmVsb2NpdHkiLCJzZXRBbmd1bGFyVmVsb2NpdHkiLCJzZXRQYXJ0cyIsIl9vcmlnaW5hbCIsImludmVyc2VNYXNzIiwiaW52ZXJzZUluZXJ0aWEiLCJib2R5IiwiZnJvbVZlcnRpY2VzIiwiY2VudHJlIiwidHJhbnNsYXRlIiwic2xpY2UiLCJwdXNoIiwiY29uY2F0IiwiY2xvY2t3aXNlU29ydCIsImh1bGwiLCJfdG90YWxQcm9wZXJ0aWVzIiwic3ViIiwicm90YXRlQWJvdXQiLCJtYWduaXR1ZGUiLCJNYXRoIiwiYWJzIiwiYWRkIiwiY29zIiwic2luIiwic2NhbGUiLCJ1IiwiY2lyY2xlUmFkaXVzIiwicG93IiwiZiIsImFwcGx5Rm9yY2UiLCJtdWx0IiwiZGl2IiwiMiIsImlzTW9kaWZpZWQiLCJib2RpZXMiLCJjb25zdHJhaW50cyIsImNvbXBvc2l0ZXMiLCJzZXRNb2RpZmllZCIsInRyaWdnZXIiLCJ3YXJuIiwiYWRkQm9keSIsImFkZENvbnN0cmFpbnQiLCJhZGRDb21wb3NpdGUiLCJjb25zdHJhaW50IiwicmVtb3ZlIiwicmVtb3ZlQm9keSIsInJlbW92ZUNvbnN0cmFpbnQiLCJyZW1vdmVDb21wb3NpdGUiLCJpbmRleE9mIiwicmVtb3ZlQ29tcG9zaXRlQXQiLCJzcGxpY2UiLCJyZW1vdmVCb2R5QXQiLCJyZW1vdmVDb25zdHJhaW50QXQiLCJjbGVhciIsImZpbHRlciIsImFsbEJvZGllcyIsImFsbENvbnN0cmFpbnRzIiwiYWxsQ29tcG9zaXRlcyIsInRvU3RyaW5nIiwibW92ZSIsInJlYmFzZSIsIjMiLCJncmF2aXR5IiwiNCIsInZlcnRleCIsIm5vcm1hbEltcHVsc2UiLCJ0YW5nZW50SW1wdWxzZSIsImluZGV4IiwiNSIsImNvbGxpc2lvbnMiLCJwYWlycyIsInRhYmxlIiwiY2FuQ29sbGlkZSIsIm92ZXJsYXBzIiwidiIsImciLCJpc0FjdGl2ZSIsImNvbGxpc2lvbiIsImNvbGxpZGVzIiwiY29sbGlkZWQiLCI2IiwiY29udHJvbGxlciIsImRldGVjdG9yIiwiYnVja2V0cyIsInBhaXJzTGlzdCIsImJ1Y2tldFdpZHRoIiwiYnVja2V0SGVpZ2h0Iiwid29ybGQiLCJfZ2V0UmVnaW9uIiwicmVnaW9uIiwiX3JlZ2lvblVuaW9uIiwic3RhcnRDb2wiLCJlbmRDb2wiLCJzdGFydFJvdyIsImVuZFJvdyIsIl9nZXRCdWNrZXRJZCIsIl9idWNrZXRSZW1vdmVCb2R5IiwiX2NyZWF0ZUJ1Y2tldCIsIl9idWNrZXRBZGRCb2R5IiwiX2NyZWF0ZUFjdGl2ZVBhaXJzTGlzdCIsIl9jcmVhdGVSZWdpb24iLCJmbG9vciIsImtleXMiLCI3IiwiYm9keUEiLCJib2R5QiIsInBhcmVudEEiLCJwYXJlbnRCIiwiY29udGFjdHMiLCJhY3RpdmVDb250YWN0cyIsInNlcGFyYXRpb24iLCJ0aW1lQ3JlYXRlZCIsInRpbWVVcGRhdGVkIiwic3VwcG9ydHMiLCJkZXB0aCIsInNldEFjdGl2ZSIsIjgiLCJfcGFpck1heElkbGVMaWZlIiwibGlzdCIsImNvbGxpc2lvblN0YXJ0IiwiY29sbGlzaW9uQWN0aXZlIiwiY29sbGlzaW9uRW5kIiwicmVtb3ZlT2xkIiwiOSIsInJheSIsInJlY3RhbmdsZSIsInBvaW50IiwiY29udGFpbnMiLCIxMCIsIl9yZXN0aW5nVGhyZXNoIiwiX3Jlc3RpbmdUaHJlc2hUYW5nZW50IiwiX3Bvc2l0aW9uRGFtcGVuIiwiX3Bvc2l0aW9uV2FybWluZyIsIl9mcmljdGlvbk5vcm1hbE11bHRpcGxpZXIiLCJwcmVTb2x2ZVBvc2l0aW9uIiwic29sdmVQb3NpdGlvbiIsIl90ZW1wIiwibm9ybWFsIiwicGVuZXRyYXRpb24iLCJkb3QiLCJwb3N0U29sdmVQb3NpdGlvbiIsInByZVNvbHZlVmVsb2NpdHkiLCJ0YW5nZW50IiwiY3Jvc3MiLCJzb2x2ZVZlbG9jaXR5IiwiaCIsImIiLCJ3IiwiUyIsIkMiLCJBIiwiUCIsIkIiLCJwZXJwIiwiTSIsImsiLCJJIiwiXyIsIlQiLCJSIiwic2lnbiIsIlYiLCJFIiwiY2xhbXAiLCJMIiwiRiIsIk8iLCJxIiwiVyIsIkQiLCJOIiwiMTEiLCJheGlzQm9keSIsImF4aXNOdW1iZXIiLCJfb3ZlcmxhcEF4ZXMiLCJyZXVzZWQiLCJvdmVybGFwIiwiYXhpcyIsIl9maW5kU3VwcG9ydHMiLCJuZWciLCJOdW1iZXIiLCJNQVhfVkFMVUUiLCJfcHJvamVjdFRvQXhpcyIsIjEyIiwiX3dhcm1pbmciLCJfdG9ycXVlRGFtcGVuIiwiX21pbkxlbmd0aCIsInBvaW50QSIsInBvaW50QiIsInN0aWZmbmVzcyIsImRhbXBpbmciLCJhbmd1bGFyU3RpZmZuZXNzIiwiYW5nbGVBIiwiYW5nbGVCIiwiYW5jaG9ycyIsInByZVNvbHZlQWxsIiwic29sdmVBbGwiLCJzb2x2ZSIsInBvc3RTb2x2ZUFsbCIsIjEzIiwibW91c2UiLCJjYW52YXMiLCJlbGVtZW50Iiwib24iLCJfdHJpZ2dlckV2ZW50cyIsImJ1dHRvbiIsInNvdXJjZUV2ZW50cyIsIm1vdXNlbW92ZSIsIm1vdXNlZG93biIsIm1vdXNldXAiLCJjbGVhclNvdXJjZUV2ZW50cyIsIjE0IiwiX25leHRJZCIsIl9zZWVkIiwiX25vd1N0YXJ0VGltZSIsIkRhdGUiLCJhcmd1bWVudHMiLCJjb25zdHJ1Y3RvciIsInZhbHVlcyIsInNwbGl0Iiwic2h1ZmZsZSIsInJhbmRvbSIsImlzRWxlbWVudCIsIkhUTUxFbGVtZW50Iiwibm9kZVR5cGUiLCJub2RlTmFtZSIsImlzQXJyYXkiLCJpc0Z1bmN0aW9uIiwiaXNQbGFpbk9iamVjdCIsImlzU3RyaW5nIiwibm93Iiwid2luZG93IiwicGVyZm9ybWFuY2UiLCJ3ZWJraXROb3ciLCJjb2xvclRvTnVtYmVyIiwicmVwbGFjZSIsImNoYXJBdCIsInBhcnNlSW50IiwibG9nTGV2ZWwiLCJsb2ciLCJjb25zb2xlIiwiYXBwbHkiLCJBcnJheSIsImluZm8iLCJtYXAiLCJ0b3BvbG9naWNhbFNvcnQiLCJfdG9wb2xvZ2ljYWxTb3J0IiwiY2hhaW4iLCJfY2hhaW5lZCIsImNoYWluUGF0aEJlZm9yZSIsImNoYWluUGF0aEFmdGVyIiwiX3JlcXVpcmVHbG9iYWwiLCJ0aGlzIiwiZ2xvYmFsIiwic2VsZiIsIjE1IiwicG9zaXRpb25JdGVyYXRpb25zIiwidmVsb2NpdHlJdGVyYXRpb25zIiwiY29uc3RyYWludEl0ZXJhdGlvbnMiLCJlbmFibGVTbGVlcGluZyIsImV2ZW50cyIsInRpbWluZyIsInRpbWVzdGFtcCIsImJyb2FkcGhhc2UiLCJlbmdpbmUiLCJtZXRyaWNzIiwiZXh0ZW5kZWQiLCJfYm9kaWVzQXBwbHlHcmF2aXR5IiwiX2JvZGllc1VwZGF0ZSIsImFmdGVyQ29sbGlzaW9ucyIsIl9ib2RpZXNDbGVhckZvcmNlcyIsIm1lcmdlIiwiMTYiLCJvZmYiLCJqb2luIiwic291cmNlIiwiMTciLCJ2ZXJzaW9uIiwidXNlcyIsInVzZWQiLCJ1c2UiLCJiZWZvcmUiLCJhZnRlciIsIjE4IiwiMTkiLCJkb2N1bWVudCIsImFic29sdXRlIiwibW91c2Vkb3duUG9zaXRpb24iLCJtb3VzZXVwUG9zaXRpb24iLCJvZmZzZXQiLCJ3aGVlbERlbHRhIiwicGl4ZWxSYXRpbyIsImdldEF0dHJpYnV0ZSIsIm1vdXNld2hlZWwiLCJfZ2V0UmVsYXRpdmVNb3VzZVBvc2l0aW9uIiwiY2hhbmdlZFRvdWNoZXMiLCJwcmV2ZW50RGVmYXVsdCIsImRldGFpbCIsInNldEVsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwic2V0T2Zmc2V0Iiwic2V0U2NhbGUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJkb2N1bWVudEVsZW1lbnQiLCJwYXJlbnROb2RlIiwicGFnZVhPZmZzZXQiLCJzY3JvbGxMZWZ0IiwicGFnZVlPZmZzZXQiLCJzY3JvbGxUb3AiLCJwYWdlWCIsImxlZnQiLCJwYWdlWSIsInRvcCIsImNsaWVudFdpZHRoIiwid2lkdGgiLCJjbGllbnRIZWlnaHQiLCJoZWlnaHQiLCIyMCIsIl9yZWdpc3RyeSIsInJlZ2lzdGVyIiwiaXNQbHVnaW4iLCJ2ZXJzaW9uUGFyc2UiLCJudW1iZXIiLCJyZXNvbHZlIiwiZGVwZW5kZW5jeVBhcnNlIiwicmFuZ2UiLCJpbnN0YWxsIiwiaXNVc2VkIiwiaXNGb3IiLCJmb3IiLCJ2ZXJzaW9uU2F0aXNmaWVzIiwiZGVwZW5kZW5jaWVzIiwiX3dhcm5lZCIsInRlc3QiLCJpc05hTiIsInN1YnN0ciIsImlzUmFuZ2UiLCJvcGVyYXRvciIsInByZXJlbGVhc2UiLCIyMSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb3pDYW5jZWxBbmltYXRpb25GcmFtZSIsIndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lIiwibXNDYW5jZWxBbmltYXRpb25GcmFtZSIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJmcHMiLCJjb3JyZWN0aW9uIiwiZGVsdGFTYW1wbGVTaXplIiwiY291bnRlclRpbWVzdGFtcCIsImZyYW1lQ291bnRlciIsImRlbHRhSGlzdG9yeSIsInRpbWVQcmV2IiwidGltZVNjYWxlUHJldiIsImZyYW1lUmVxdWVzdElkIiwiaXNGaXhlZCIsImVuYWJsZWQiLCJkZWx0YSIsImRlbHRhTWluIiwiZGVsdGFNYXgiLCJydW4iLCJ0aWNrIiwic3RvcCIsInN0YXJ0IiwiMjIiLCJfbW90aW9uV2FrZVRocmVzaG9sZCIsIl9tb3Rpb25TbGVlcFRocmVzaG9sZCIsIl9taW5CaWFzIiwic2xlZXBDb3VudGVyIiwiMjMiLCJjaGFtZmVyIiwicmFkaXVzIiwicXVhbGl0eSIsInF1YWxpdHlNaW4iLCJxdWFsaXR5TWF4IiwidHJhcGV6b2lkIiwiY2lyY2xlIiwiY2VpbCIsInBvbHlnb24iLCJQSSIsInRvRml4ZWQiLCJpc0NvbnZleCIsIm1ha2VDQ1ciLCJyZW1vdmVDb2xsaW5lYXJQb2ludHMiLCJxdWlja0RlY29tcCIsIm1hZ25pdHVkZVNxdWFyZWQiLCJpc0ludGVybmFsIiwiMjQiLCJzdGFjayIsIm1lc2giLCJweXJhbWlkIiwibmV3dG9uc0NyYWRsZSIsImNhciIsInNvZnRCb2R5IiwiMjUiLCJub3JtYWxpc2UiLCIyNiIsInNoaWZ0IiwiMjciLCJwYXRoVG9WZXJ0aWNlcyIsInBhdGhTZWdUeXBlQXNMZXR0ZXIiLCJ0b1VwcGVyQ2FzZSIsInBhdGhTZWdUeXBlIiwiX3N2Z1BhdGhUb0Fic29sdXRlIiwiZ2V0VG90YWxMZW5ndGgiLCJwYXRoU2VnTGlzdCIsIm51bWJlck9mSXRlbXMiLCJnZXRJdGVtIiwiZ2V0UGF0aFNlZ0F0TGVuZ3RoIiwiZ2V0UG9pbnRBdExlbmd0aCIsIngxIiwieDIiLCJ5MSIsInkyIiwicmVwbGFjZUl0ZW0iLCJjcmVhdGVTVkdQYXRoU2VnTW92ZXRvQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0xpbmV0b0FicyIsImNyZWF0ZVNWR1BhdGhTZWdMaW5ldG9Ib3Jpem9udGFsQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0FicyIsImNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhBYnMiLCJjcmVhdGVTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY0FicyIsImNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0FyY0FicyIsInIxIiwicjIiLCJsYXJnZUFyY0ZsYWciLCJzd2VlcEZsYWciLCIyOCIsInNxcnQiLCJjcm9zczMiLCJhdGFuMiIsIjI5IiwicGFyc2VGbG9hdCIsIm1lYW4iLCJhY29zIiwic29ydCIsInBvcCIsIjMwIiwiQm9keSIsIkNvbXBvc2l0ZSIsIldvcmxkIiwiQ29udGFjdCIsIkRldGVjdG9yIiwiR3JpZCIsIlBhaXJzIiwiUGFpciIsIlF1ZXJ5IiwiUmVzb2x2ZXIiLCJTQVQiLCJDb25zdHJhaW50IiwiTW91c2VDb25zdHJhaW50IiwiQ29tbW9uIiwiRW5naW5lIiwiRXZlbnRzIiwiTW91c2UiLCJSdW5uZXIiLCJTbGVlcGluZyIsIlBsdWdpbiIsIkJvZGllcyIsIkNvbXBvc2l0ZXMiLCJBeGVzIiwiQm91bmRzIiwiU3ZnIiwiVmVjdG9yIiwiVmVydGljZXMiLCJSZW5kZXIiLCJSZW5kZXJQaXhpIiwiMzEiLCJvcHRpb25zIiwiYmFja2dyb3VuZCIsIndpcmVmcmFtZUJhY2tncm91bmQiLCJoYXNCb3VuZHMiLCJ3aXJlZnJhbWVzIiwic2hvd1NsZWVwaW5nIiwic2hvd0RlYnVnIiwic2hvd0Jyb2FkcGhhc2UiLCJzaG93Qm91bmRzIiwic2hvd1ZlbG9jaXR5Iiwic2hvd0NvbGxpc2lvbnMiLCJzaG93U2VwYXJhdGlvbnMiLCJzaG93QXhlcyIsInNob3dQb3NpdGlvbnMiLCJzaG93QW5nbGVJbmRpY2F0b3IiLCJzaG93SWRzIiwic2hvd1NoYWRvd3MiLCJzaG93VmVydGV4TnVtYmVycyIsInNob3dDb252ZXhIdWxscyIsInNob3dJbnRlcm5hbEVkZ2VzIiwic2hvd01vdXNlUG9zaXRpb24iLCJjb250ZXh0IiwiZ2V0Q29udGV4dCIsInRleHR1cmVzIiwic2V0UGl4ZWxSYXRpbyIsImFwcGVuZENoaWxkIiwic2V0QXR0cmlidXRlIiwic3R5bGUiLCJsb29rQXQiLCJzdGFydFZpZXdUcmFuc2Zvcm0iLCJlbmRWaWV3VHJhbnNmb3JtIiwic2V0VHJhbnNmb3JtIiwiY3VycmVudEJhY2tncm91bmQiLCJnbG9iYWxDb21wb3NpdGVPcGVyYXRpb24iLCJmaWxsUmVjdCIsImJvZHlDb252ZXhIdWxscyIsImJvZHlXaXJlZnJhbWVzIiwiYm9keUJvdW5kcyIsImJvZHlBeGVzIiwiYm9keVBvc2l0aW9ucyIsImJvZHlWZWxvY2l0eSIsImJvZHlJZHMiLCJzZXBhcmF0aW9ucyIsInZlcnRleE51bWJlcnMiLCJtb3VzZVBvc2l0aW9uIiwiZ3JpZCIsImRlYnVnIiwiZGVidWdUaW1lc3RhbXAiLCJyb3VuZCIsImRlYnVnU3RyaW5nIiwiZm9udCIsImZpbGxUZXh0IiwiYmVnaW5QYXRoIiwiYXJjIiwiY2xvc2VQYXRoIiwibW92ZVRvIiwibGluZVRvIiwic3Ryb2tlIiwiZmlsbCIsImJvZHlTaGFkb3dzIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXRYIiwic2hhZG93T2Zmc2V0WSIsInNoYWRvd0JsdXIiLCJnbG9iYWxBbHBoYSIsInRleHR1cmUiLCJkcmF3SW1hZ2UiLCJyZWN0IiwiaW5zcGVjdG9yIiwic2VsZWN0ZWQiLCJkYXRhIiwic2V0TGluZURhc2giLCJzZWxlY3RTdGFydCIsInNlbGVjdEJvdW5kcyIsImNyZWF0ZUVsZW1lbnQiLCJvbmNvbnRleHRtZW51Iiwib25zZWxlY3RzdGFydCIsImRldmljZVBpeGVsUmF0aW8iLCJ3ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIiwibW96QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsIm1zQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsIm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIiwiYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsIkltYWdlIiwic3JjIiwiYmFja2dyb3VuZFNpemUiLCIzMiIsInJlbmRlcmVyIiwiY29udGFpbmVyIiwic3ByaXRlQ29udGFpbmVyIiwicGl4aU9wdGlvbnMiLCJ2aWV3IiwidHJhbnNwYXJlbnQiLCJhbnRpYWxpYXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJQSVhJIiwiV2ViR0xSZW5kZXJlciIsIkNvbnRhaW5lciIsInNwcml0ZXMiLCJwcmltaXRpdmVzIiwiYWRkQ2hpbGQiLCJjaGlsZHJlbiIsInJlbW92ZUNoaWxkIiwiYWRkQ2hpbGRBdCIsInNldEJhY2tncm91bmQiLCJTcHJpdGUiLCJHcmFwaGljcyIsImJlZ2luRmlsbCIsImxpbmVTdHlsZSIsImVuZEZpbGwiLCJyb3RhdGlvbiIsImluaXRpYWxBbmdsZSIsImFuY2hvciIsIlRleHR1cmUiLCJmcm9tSW1hZ2UiLCJGdW5jdGlvbiIsImF0dGFjaEV2ZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJjc3NUZXh0IiwieiIsIm9mZnNldFdpZHRoIiwic2Nyb2xsV2lkdGgiLCJmYW1pbHkiLCJ3ZWlnaHQiLCJzdHJldGNoIiwiSiIsImZvbnRzIiwiSyIsImxvYWQiLCJIIiwiZ2V0VGltZSIsIlByb21pc2UiLCJuYXZpZ2F0b3IiLCJ2ZW5kb3IiLCJleGVjIiwidXNlckFnZW50IiwiRyIsInRoZW4iLCJyYWNlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYWR5U3RhdGUiLCJkZXRhY2hFdmVudCIsImRpciIsImhpZGRlbiIsInNpemUiLCJncmlkUG9zaXRpb24iLCJwYXJ0aWNsZXMiLCJwYXJ0aWNsZSIsIndvcmxkVG9HcmlkIiwiZ3JpZFRvSW5kZXgiLCJiYk1pbiIsImJiTWF4IiwibmVhclBhcnRpY2xlcyIsImNlbGxQYXJ0aWNsZXMiLCJzcGF3blBvaW50IiwiZGltZW5zaW9ucyIsIlBvaW50IiwiaXNOZXciLCJuZWFyRGVuc2l0eSIsInRpY2tzIiwiUmVjdGFuZ2xlIiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwibmVhclBhcnRpY2xlc0NhY2hlIiwicGFydGljbGVQb3NpdGlvbnMiLCJwYXJ0aWNsZUNvdW50IiwicGFydGljbGVfcmFkaXVzIiwiaW50ZXJhY3Rpb25fcmFkaXVzIiwibmVhclN0aWZmbmVzcyIsIm5lYXJfc3RpZmZuZXNzIiwicmVzdERlbnNpdHkiLCJyZXN0X2RlbnNpdHkiLCJzaWdtYSIsImJldGEiLCJQQVJUSUNMRV9MSU1JVCIsInBhcnRpY2xlX2xpbWl0IiwiaGFzaCIsImNvbnRhaW5lckJvdW5kcyIsImNsZWFyT09CIiwicmVtb3ZlRGVhZFBhcnRpY2xlcyIsImlQYXJ0aWNsZSIsInZpc2Nvc2l0eUltcHVsc2VzIiwiY29tcHV0ZURlbnNpdGllcyIsImhhbmRsZUNvbGxpc2lvbiIsImRvdWJsZURlbnNpdHlSZWxheGF0aW9uIiwidXBkYXRlUGFydGljbGVQb3NpdGlvbnMiLCJnZXROZWlnaGJvcnMiLCJqUGFydGljbGUiLCJkcCIsIm5vcm1hbGl6ZWRfciIsIm9uZV9taW51c19xIiwidmlfbWludXNfdmoiLCJpX2RpdjIiLCJhYSIsImFhYSIsInByZXNzdXJlIiwibmVhclByZXNzdXJlIiwiZGEiLCJib3hDb2xsaXNpb24iLCJib3giLCJpc0NvbnRhaW5lciIsInhMb2NhbCIsInhBYnMiLCJzZCIsImNwTG9jYWwiLCJ2ZWxUYW5nZW50IiwidmVsTm9ybWFsIiwiZGVhZFBhcnRpY2xlcyIsIm5ld1BhcnRpY2xlMSIsIm5ld1BhcnRpY2xlMiIsIk15QnV0dG9uIiwidGV4dCIsImNhbGxiYWNrIiwicGFkZGluZyIsInRleHREaXNwbGF5IiwiVGV4dCIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsImRpc3BsYXlDb250YWluZXIiLCJidXR0b25SZW5kZXJlciIsImludGVyYWN0aXZlIiwiYnV0dG9uTW9kZSIsImRyYXdSb3VuZGVkUmVjdCIsIkZpbHRlciIsIk1BWF9QQVJUSUNMRVMiLCJzdXBlciIsIm51bVBhcnRpY2xlcyIsInBhcnRpY2xlUmFkaXVzIiwiUG9zaXRpb25UZXh0dXJlIiwiaW52X3Bvc2l0aW9uX3RleHR1cmVfd2lkdGgiLCJvZGQiLCJQb3NpdGlvblNhbXBsZXIiLCJtYXhfcGFydGljbGVzIiwicGFydGljbGVGaWx0ZXIiLCJmaWx0ZXJUZXh0dXJlIiwiUmVuZGVyVGV4dHVyZSIsInBhcnRpY2xlX3Bvc2l0aW9ucyIsIm5vcm1hbGl6ZWRfcG9zaXRpb25zIiwiaW52V2luZG93IiwiaXNPZGQiLCJidWZmZXIiLCJGbG9hdDMyQXJyYXkiLCJmcm9tIiwiZnJvbUJ1ZmZlciIsInVuaWZvcm1zIiwiZmlsbENvbG9yIiwibGluZUNvbG9yIiwiZ3JhcGhpY3MiLCJkcmF3UmVjdCIsInBhcnRpY2xlU3lzdGVtIiwic3RhZ2UiLCJ0aWxlcyIsInRpbGVQb3NpdGlvbnMiLCJ0aWxlU2l6ZSIsInRlcnJhaW5SZW5kZXJlciIsImN1cnNvciIsImRyYXdUaWxlIiwidXBkYXRlRmlsdGVyIiwiZ3JpZFBvcyIsImV4aXN0aW5nVGlsZSIsInRpbGUiLCJhZGRUaWxlQXRHcmlkIiwibmV3VGlsZSIsImZpbHRlcnMiLCJTZGZGaWx0ZXIiLCJqIiwiYWRkUGFydGljbGUiLCJjbGVhclBhcnRpY2xlcyIsImNsZWFyVGlsZXMiLCJhZGRUaWxlIiwiVG9vbEJ1dHRvbiIsImhpZ2hMaWdodFJlY3QiLCJhY3RpdmUiLCJldmVudCIsImluc3RhbmNlciIsImluY29uVGlsZSIsIlBhcnRpY2xlQnV0dG9uIiwiRXJhc2VyQnV0dG9uIiwiVG9vbGJhciIsIlVJX0NvbnRhaW5lciIsImJ1dHRvbnMiLCJNYXAiLCJlcmFzZVRpbGUiLCJmb3JFYWNoIiwiYWN0aXZlQnV0dG9uIiwibmV3QWN0aXZlIiwiTG9hZFhNTCIsInVybCIsImFzeW5jIiwibWV0aG9kIiwieGh0dHAiLCJYTUxIdHRwUmVxdWVzdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInN0YXR1cyIsIm9wZW4iLCJzZW5kIiwiRm9udEZhY2VPYnNlcnZlciIsInNlcmlhbGl6ZUxldmVsIiwidGlsZU91dHB1dCIsImdldE9TIiwicGxhdGZvcm0iLCJvcyIsImdldEJyb3dzZXIiLCJzVXNyQWciLCJhcHAiLCJ1cGRhdGVMYWciLCJtYXBEaW1lbnNpb25zIiwiZnJhbWVDb3VudCIsImxldmVsX2xvYWRlZCIsInBhcnRpY2xlQ29udGFpbmVyIiwiVUlfRWxlbWVudHMiLCJhbHBoYSIsIm1vdXNlRG93biIsInBsdWdpbnMiLCJpbnRlcmFjdGlvbiIsImluaXRFdmVudExpc3RlbmVycyIsImVtaXR0ZXJzIiwic2RmVGV4dHVyZSIsInVwZGF0ZVBhcnRpY2xlcyIsImZpbHRlckFyZWEiLCJzY3JlZW4iLCJpbml0V29ybGRCb3VuZHMiLCJpbml0VUkiLCJ0aWNrZXIiLCJGaXhlZFVwZGF0ZSIsInRvb2xiYXIiLCJyaWdodE1vdXNlRG93biIsImRlbHRhTVMiLCJlbWl0dGVyIiwicG9zaXRpb25fc2FtcGxlciIsInBvaW50X2luX3VpIiwiY2hpbGQiLCJoaXRUZXN0IiwieG1sIiwic2ltIiwicmVzcG9uc2VYTUwiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImNoaWxkTm9kZXMiLCJub2RlVmFsdWUiLCJyZXNldEZpbHRlciIsInN0YXJ0QXBwIiwicmVhZExldmVsIiwiJCIsInBvc3QiLCJ0aW1lIiwidG9Mb2NhbGVUaW1lU3RyaW5nIiwiT1MiLCJicm93c2VyIiwiUGFydGljbGVDb3VudERpc3BsYXkiLCJGUFNEaXNwbGF5IiwiY2xlYXJCdXR0b24iLCJjbGVhckFsbCIsInNhdmVCdXR0b24iLCJ0ZXh0X2lucHV0IiwicHJvbXB0Iiwib25XaW5kb3dSZXNpemUiLCJ0b3VjaGVzIiwiY2xpZW50WCIsImNsaWVudFkiLCJnZXRFbGVtZW50QnlJZCIsImtleUNvZGUiLCJyZXNpemUiLCJzaW11bGF0aW9uIiwibG9hZGVyIiwicmVzb3VyY2VzIiwiQXBwbGljYXRpb24iLCJyZXNvbHV0aW9uIiwiYXV0b0RlbnNpdHkiLCJkaXNwbGF5Il0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNBQVNSLEVBQVNTLEVBQU1DLEdBQzNDWixFQUFvQmEsRUFBRVgsRUFBU1MsSUFDbENHLE9BQU9DLGVBQWViLEVB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QUFTa1IsT0FBT3IxQixFQUFPNFUsWUFBYTVVLEVBQU84VSxlRTFTNUQsSUNFSSxFQUNBd2dCLEVESEFDLEVBQVM1USxLQUFLNFEsT0FDRkEsRUFBT0MsVUNZckIsRUFBTSxJQUFJN1EsS0FBSzhRLFlBQVksQ0FDekI1Z0IsTUFBT25GLE9BQU9tWixXQUNkOVQsT0FBUXJGLE9BQU9vWixZQUNmckUsV0FBVyxFQUNYRCxhQUFhLEVBQ2JrUixXQUFZLEVBQ1poUixnQkFBaUIsRUFDakJpUixhQUFhLElBSWYsRUFBSXhSLFNBQVNJLEtBQUtoRSxNQUFNcGpCLFNBQVcsV0FDbkMsRUFBSWduQixTQUFTSSxLQUFLaEUsTUFBTXFWLFFBQVUsUUFFbEM1aUIsU0FBU21pQixlQUFlLFlBQVk5VSxZQUFZLEVBQUlrRSxNQUVwRCtRLEVBQWEsSUFBSSxFQUFXIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA0KTtcbiIsIi8qKlxuKiBtYXR0ZXItanMgMC4xNC4yIGJ5IEBsaWFicnUgMjAxOC0wNi0xMVxuKiBodHRwOi8vYnJtLmlvL21hdHRlci1qcy9cbiogTGljZW5zZSBNSVRcbiovXG4hZnVuY3Rpb24oZSl7aWYoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUpbW9kdWxlLmV4cG9ydHM9ZSgpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxlKTtlbHNle3ZhciB0O3Q9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLHQuTWF0dGVyPWUoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4sbyl7ZnVuY3Rpb24gaShzLGEpe2lmKCFuW3NdKXtpZighdFtzXSl7dmFyIGw9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighYSYmbClyZXR1cm4gbChzLCEwKTtpZihyKXJldHVybiByKHMsITApO3ZhciBjPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrcytcIidcIik7dGhyb3cgYy5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGN9dmFyIGQ9bltzXT17ZXhwb3J0czp7fX07dFtzXVswXS5jYWxsKGQuZXhwb3J0cyxmdW5jdGlvbihlKXtyZXR1cm4gaSh0W3NdWzFdW2VdfHxlKX0sZCxkLmV4cG9ydHMsZSx0LG4sbyl9cmV0dXJuIG5bc10uZXhwb3J0c31mb3IodmFyIHI9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxzPTA7czxvLmxlbmd0aDtzKyspaShvW3NdKTtyZXR1cm4gaX1yZXR1cm4gZX0oKSh7MTpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vO3ZhciBpPWUoXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiKSxyPWUoXCIuLi9nZW9tZXRyeS9WZWN0b3JcIikscz1lKFwiLi4vY29yZS9TbGVlcGluZ1wiKSxhPShlKFwiLi4vcmVuZGVyL1JlbmRlclwiKSxlKFwiLi4vY29yZS9Db21tb25cIikpLGw9ZShcIi4uL2dlb21ldHJ5L0JvdW5kc1wiKSxjPWUoXCIuLi9nZW9tZXRyeS9BeGVzXCIpOyFmdW5jdGlvbigpe28uX2luZXJ0aWFTY2FsZT00LFxuby5fbmV4dENvbGxpZGluZ0dyb3VwSWQ9MSxvLl9uZXh0Tm9uQ29sbGlkaW5nR3JvdXBJZD0tMSxvLl9uZXh0Q2F0ZWdvcnk9MSxvLmNyZWF0ZT1mdW5jdGlvbih0KXt2YXIgbj17aWQ6YS5uZXh0SWQoKSx0eXBlOlwiYm9keVwiLGxhYmVsOlwiQm9keVwiLHBhcnRzOltdLHBsdWdpbjp7fSxhbmdsZTowLHZlcnRpY2VzOmkuZnJvbVBhdGgoXCJMIDAgMCBMIDQwIDAgTCA0MCA0MCBMIDAgNDBcIikscG9zaXRpb246e3g6MCx5OjB9LGZvcmNlOnt4OjAseTowfSx0b3JxdWU6MCxwb3NpdGlvbkltcHVsc2U6e3g6MCx5OjB9LGNvbnN0cmFpbnRJbXB1bHNlOnt4OjAseTowLGFuZ2xlOjB9LHRvdGFsQ29udGFjdHM6MCxzcGVlZDowLGFuZ3VsYXJTcGVlZDowLHZlbG9jaXR5Ont4OjAseTowfSxhbmd1bGFyVmVsb2NpdHk6MCxpc1NlbnNvcjohMSxpc1N0YXRpYzohMSxpc1NsZWVwaW5nOiExLG1vdGlvbjowLHNsZWVwVGhyZXNob2xkOjYwLGRlbnNpdHk6LjAwMSxyZXN0aXR1dGlvbjowLGZyaWN0aW9uOi4xLGZyaWN0aW9uU3RhdGljOi41LGZyaWN0aW9uQWlyOi4wMSxjb2xsaXNpb25GaWx0ZXI6e2NhdGVnb3J5OjEsbWFzazo0Mjk0OTY3Mjk1LGdyb3VwOjB9LHNsb3A6LjA1LHRpbWVTY2FsZToxLHJlbmRlcjp7dmlzaWJsZTohMCxvcGFjaXR5OjEsc3ByaXRlOnt4U2NhbGU6MSx5U2NhbGU6MSx4T2Zmc2V0OjAseU9mZnNldDowfSxsaW5lV2lkdGg6MH19LG89YS5leHRlbmQobix0KTtyZXR1cm4gZShvLHQpLG99LG8ubmV4dEdyb3VwPWZ1bmN0aW9uKGUpe3JldHVybiBlP28uX25leHROb25Db2xsaWRpbmdHcm91cElkLS06by5fbmV4dENvbGxpZGluZ0dyb3VwSWQrK30sby5uZXh0Q2F0ZWdvcnk9ZnVuY3Rpb24oKXtyZXR1cm4gby5fbmV4dENhdGVnb3J5PW8uX25leHRDYXRlZ29yeTw8MSxvLl9uZXh0Q2F0ZWdvcnl9O3ZhciBlPWZ1bmN0aW9uKGUsdCl7dD10fHx7fSxvLnNldChlLHtib3VuZHM6ZS5ib3VuZHN8fGwuY3JlYXRlKGUudmVydGljZXMpLFxucG9zaXRpb25QcmV2OmUucG9zaXRpb25QcmV2fHxyLmNsb25lKGUucG9zaXRpb24pLGFuZ2xlUHJldjplLmFuZ2xlUHJldnx8ZS5hbmdsZSx2ZXJ0aWNlczplLnZlcnRpY2VzLHBhcnRzOmUucGFydHN8fFtlXSxpc1N0YXRpYzplLmlzU3RhdGljLGlzU2xlZXBpbmc6ZS5pc1NsZWVwaW5nLHBhcmVudDplLnBhcmVudHx8ZX0pLGkucm90YXRlKGUudmVydGljZXMsZS5hbmdsZSxlLnBvc2l0aW9uKSxjLnJvdGF0ZShlLmF4ZXMsZS5hbmdsZSksbC51cGRhdGUoZS5ib3VuZHMsZS52ZXJ0aWNlcyxlLnZlbG9jaXR5KSxvLnNldChlLHtheGVzOnQuYXhlc3x8ZS5heGVzLGFyZWE6dC5hcmVhfHxlLmFyZWEsbWFzczp0Lm1hc3N8fGUubWFzcyxpbmVydGlhOnQuaW5lcnRpYXx8ZS5pbmVydGlhfSk7dmFyIG49ZS5pc1N0YXRpYz9cIiMyZTJiNDRcIjphLmNob29zZShbXCIjMDA2QkE2XCIsXCIjMDQ5NkZGXCIsXCIjRkZCQzQyXCIsXCIjRDgxMTU5XCIsXCIjOEYyRDU2XCJdKTtlLnJlbmRlci5maWxsU3R5bGU9ZS5yZW5kZXIuZmlsbFN0eWxlfHxuLGUucmVuZGVyLnN0cm9rZVN0eWxlPWUucmVuZGVyLnN0cm9rZVN0eWxlfHxcIiMwMDBcIixlLnJlbmRlci5zcHJpdGUueE9mZnNldCs9LShlLmJvdW5kcy5taW4ueC1lLnBvc2l0aW9uLngpLyhlLmJvdW5kcy5tYXgueC1lLmJvdW5kcy5taW4ueCksZS5yZW5kZXIuc3ByaXRlLnlPZmZzZXQrPS0oZS5ib3VuZHMubWluLnktZS5wb3NpdGlvbi55KS8oZS5ib3VuZHMubWF4LnktZS5ib3VuZHMubWluLnkpfTtvLnNldD1mdW5jdGlvbihlLHQsbil7dmFyIGk7XCJzdHJpbmdcIj09dHlwZW9mIHQmJihpPXQsdD17fSx0W2ldPW4pO2ZvcihpIGluIHQpaWYobj10W2ldLHQuaGFzT3duUHJvcGVydHkoaSkpc3dpdGNoKGkpe2Nhc2VcImlzU3RhdGljXCI6by5zZXRTdGF0aWMoZSxuKTticmVhaztjYXNlXCJpc1NsZWVwaW5nXCI6cy5zZXQoZSxuKTticmVhaztjYXNlXCJtYXNzXCI6by5zZXRNYXNzKGUsbik7YnJlYWs7Y2FzZVwiZGVuc2l0eVwiOm8uc2V0RGVuc2l0eShlLG4pXG47YnJlYWs7Y2FzZVwiaW5lcnRpYVwiOm8uc2V0SW5lcnRpYShlLG4pO2JyZWFrO2Nhc2VcInZlcnRpY2VzXCI6by5zZXRWZXJ0aWNlcyhlLG4pO2JyZWFrO2Nhc2VcInBvc2l0aW9uXCI6by5zZXRQb3NpdGlvbihlLG4pO2JyZWFrO2Nhc2VcImFuZ2xlXCI6by5zZXRBbmdsZShlLG4pO2JyZWFrO2Nhc2VcInZlbG9jaXR5XCI6by5zZXRWZWxvY2l0eShlLG4pO2JyZWFrO2Nhc2VcImFuZ3VsYXJWZWxvY2l0eVwiOm8uc2V0QW5ndWxhclZlbG9jaXR5KGUsbik7YnJlYWs7Y2FzZVwicGFydHNcIjpvLnNldFBhcnRzKGUsbik7YnJlYWs7ZGVmYXVsdDplW2ldPW59fSxvLnNldFN0YXRpYz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0wO248ZS5wYXJ0cy5sZW5ndGg7bisrKXt2YXIgbz1lLnBhcnRzW25dO28uaXNTdGF0aWM9dCx0PyhvLl9vcmlnaW5hbD17cmVzdGl0dXRpb246by5yZXN0aXR1dGlvbixmcmljdGlvbjpvLmZyaWN0aW9uLG1hc3M6by5tYXNzLGluZXJ0aWE6by5pbmVydGlhLGRlbnNpdHk6by5kZW5zaXR5LGludmVyc2VNYXNzOm8uaW52ZXJzZU1hc3MsaW52ZXJzZUluZXJ0aWE6by5pbnZlcnNlSW5lcnRpYX0sby5yZXN0aXR1dGlvbj0wLG8uZnJpY3Rpb249MSxvLm1hc3M9by5pbmVydGlhPW8uZGVuc2l0eT0xLzAsby5pbnZlcnNlTWFzcz1vLmludmVyc2VJbmVydGlhPTAsby5wb3NpdGlvblByZXYueD1vLnBvc2l0aW9uLngsby5wb3NpdGlvblByZXYueT1vLnBvc2l0aW9uLnksby5hbmdsZVByZXY9by5hbmdsZSxvLmFuZ3VsYXJWZWxvY2l0eT0wLG8uc3BlZWQ9MCxvLmFuZ3VsYXJTcGVlZD0wLG8ubW90aW9uPTApOm8uX29yaWdpbmFsJiYoby5yZXN0aXR1dGlvbj1vLl9vcmlnaW5hbC5yZXN0aXR1dGlvbixvLmZyaWN0aW9uPW8uX29yaWdpbmFsLmZyaWN0aW9uLG8ubWFzcz1vLl9vcmlnaW5hbC5tYXNzLG8uaW5lcnRpYT1vLl9vcmlnaW5hbC5pbmVydGlhLG8uZGVuc2l0eT1vLl9vcmlnaW5hbC5kZW5zaXR5LFxuby5pbnZlcnNlTWFzcz1vLl9vcmlnaW5hbC5pbnZlcnNlTWFzcyxvLmludmVyc2VJbmVydGlhPW8uX29yaWdpbmFsLmludmVyc2VJbmVydGlhLGRlbGV0ZSBvLl9vcmlnaW5hbCl9fSxvLnNldE1hc3M9ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmluZXJ0aWEvKGUubWFzcy82KTtlLmluZXJ0aWE9bioodC82KSxlLmludmVyc2VJbmVydGlhPTEvZS5pbmVydGlhLGUubWFzcz10LGUuaW52ZXJzZU1hc3M9MS9lLm1hc3MsZS5kZW5zaXR5PWUubWFzcy9lLmFyZWF9LG8uc2V0RGVuc2l0eT1mdW5jdGlvbihlLHQpe28uc2V0TWFzcyhlLHQqZS5hcmVhKSxlLmRlbnNpdHk9dH0sby5zZXRJbmVydGlhPWZ1bmN0aW9uKGUsdCl7ZS5pbmVydGlhPXQsZS5pbnZlcnNlSW5lcnRpYT0xL2UuaW5lcnRpYX0sby5zZXRWZXJ0aWNlcz1mdW5jdGlvbihlLHQpe3RbMF0uYm9keT09PWU/ZS52ZXJ0aWNlcz10OmUudmVydGljZXM9aS5jcmVhdGUodCxlKSxlLmF4ZXM9Yy5mcm9tVmVydGljZXMoZS52ZXJ0aWNlcyksZS5hcmVhPWkuYXJlYShlLnZlcnRpY2VzKSxvLnNldE1hc3MoZSxlLmRlbnNpdHkqZS5hcmVhKTt2YXIgbj1pLmNlbnRyZShlLnZlcnRpY2VzKTtpLnRyYW5zbGF0ZShlLnZlcnRpY2VzLG4sLTEpLG8uc2V0SW5lcnRpYShlLG8uX2luZXJ0aWFTY2FsZSppLmluZXJ0aWEoZS52ZXJ0aWNlcyxlLm1hc3MpKSxpLnRyYW5zbGF0ZShlLnZlcnRpY2VzLGUucG9zaXRpb24pLGwudXBkYXRlKGUuYm91bmRzLGUudmVydGljZXMsZS52ZWxvY2l0eSl9LG8uc2V0UGFydHM9ZnVuY3Rpb24oZSx0LG4pe3ZhciByO2Zvcih0PXQuc2xpY2UoMCksZS5wYXJ0cy5sZW5ndGg9MCxlLnBhcnRzLnB1c2goZSksZS5wYXJlbnQ9ZSxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBzPXRbcl07cyE9PWUmJihzLnBhcmVudD1lLGUucGFydHMucHVzaChzKSl9aWYoMSE9PWUucGFydHMubGVuZ3RoKXtpZihuPXZvaWQgMD09PW58fG4pe3ZhciBhPVtdXG47Zm9yKHI9MDtyPHQubGVuZ3RoO3IrKylhPWEuY29uY2F0KHRbcl0udmVydGljZXMpO2kuY2xvY2t3aXNlU29ydChhKTt2YXIgbD1pLmh1bGwoYSksYz1pLmNlbnRyZShsKTtvLnNldFZlcnRpY2VzKGUsbCksaS50cmFuc2xhdGUoZS52ZXJ0aWNlcyxjKX12YXIgZD1vLl90b3RhbFByb3BlcnRpZXMoZSk7ZS5hcmVhPWQuYXJlYSxlLnBhcmVudD1lLGUucG9zaXRpb24ueD1kLmNlbnRyZS54LGUucG9zaXRpb24ueT1kLmNlbnRyZS55LGUucG9zaXRpb25QcmV2Lng9ZC5jZW50cmUueCxlLnBvc2l0aW9uUHJldi55PWQuY2VudHJlLnksby5zZXRNYXNzKGUsZC5tYXNzKSxvLnNldEluZXJ0aWEoZSxkLmluZXJ0aWEpLG8uc2V0UG9zaXRpb24oZSxkLmNlbnRyZSl9fSxvLnNldFBvc2l0aW9uPWZ1bmN0aW9uKGUsdCl7dmFyIG49ci5zdWIodCxlLnBvc2l0aW9uKTtlLnBvc2l0aW9uUHJldi54Kz1uLngsZS5wb3NpdGlvblByZXYueSs9bi55O2Zvcih2YXIgbz0wO288ZS5wYXJ0cy5sZW5ndGg7bysrKXt2YXIgcz1lLnBhcnRzW29dO3MucG9zaXRpb24ueCs9bi54LHMucG9zaXRpb24ueSs9bi55LGkudHJhbnNsYXRlKHMudmVydGljZXMsbiksbC51cGRhdGUocy5ib3VuZHMscy52ZXJ0aWNlcyxlLnZlbG9jaXR5KX19LG8uc2V0QW5nbGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj10LWUuYW5nbGU7ZS5hbmdsZVByZXYrPW47Zm9yKHZhciBvPTA7bzxlLnBhcnRzLmxlbmd0aDtvKyspe3ZhciBzPWUucGFydHNbb107cy5hbmdsZSs9bixpLnJvdGF0ZShzLnZlcnRpY2VzLG4sZS5wb3NpdGlvbiksYy5yb3RhdGUocy5heGVzLG4pLGwudXBkYXRlKHMuYm91bmRzLHMudmVydGljZXMsZS52ZWxvY2l0eSksbz4wJiZyLnJvdGF0ZUFib3V0KHMucG9zaXRpb24sbixlLnBvc2l0aW9uLHMucG9zaXRpb24pfX0sby5zZXRWZWxvY2l0eT1mdW5jdGlvbihlLHQpe2UucG9zaXRpb25QcmV2Lng9ZS5wb3NpdGlvbi54LXQueCxlLnBvc2l0aW9uUHJldi55PWUucG9zaXRpb24ueS10LnksXG5lLnZlbG9jaXR5Lng9dC54LGUudmVsb2NpdHkueT10LnksZS5zcGVlZD1yLm1hZ25pdHVkZShlLnZlbG9jaXR5KX0sby5zZXRBbmd1bGFyVmVsb2NpdHk9ZnVuY3Rpb24oZSx0KXtlLmFuZ2xlUHJldj1lLmFuZ2xlLXQsZS5hbmd1bGFyVmVsb2NpdHk9dCxlLmFuZ3VsYXJTcGVlZD1NYXRoLmFicyhlLmFuZ3VsYXJWZWxvY2l0eSl9LG8udHJhbnNsYXRlPWZ1bmN0aW9uKGUsdCl7by5zZXRQb3NpdGlvbihlLHIuYWRkKGUucG9zaXRpb24sdCkpfSxvLnJvdGF0ZT1mdW5jdGlvbihlLHQsbil7aWYobil7dmFyIGk9TWF0aC5jb3ModCkscj1NYXRoLnNpbih0KSxzPWUucG9zaXRpb24ueC1uLngsYT1lLnBvc2l0aW9uLnktbi55O28uc2V0UG9zaXRpb24oZSx7eDpuLngrKHMqaS1hKnIpLHk6bi55KyhzKnIrYSppKX0pLG8uc2V0QW5nbGUoZSxlLmFuZ2xlK3QpfWVsc2Ugby5zZXRBbmdsZShlLGUuYW5nbGUrdCl9LG8uc2NhbGU9ZnVuY3Rpb24oZSx0LG4scil7dmFyIHM9MCxhPTA7cj1yfHxlLnBvc2l0aW9uO2Zvcih2YXIgZD0wO2Q8ZS5wYXJ0cy5sZW5ndGg7ZCsrKXt2YXIgdT1lLnBhcnRzW2RdO2kuc2NhbGUodS52ZXJ0aWNlcyx0LG4sciksdS5heGVzPWMuZnJvbVZlcnRpY2VzKHUudmVydGljZXMpLHUuYXJlYT1pLmFyZWEodS52ZXJ0aWNlcyksby5zZXRNYXNzKHUsZS5kZW5zaXR5KnUuYXJlYSksaS50cmFuc2xhdGUodS52ZXJ0aWNlcyx7eDotdS5wb3NpdGlvbi54LHk6LXUucG9zaXRpb24ueX0pLG8uc2V0SW5lcnRpYSh1LG8uX2luZXJ0aWFTY2FsZSppLmluZXJ0aWEodS52ZXJ0aWNlcyx1Lm1hc3MpKSxpLnRyYW5zbGF0ZSh1LnZlcnRpY2VzLHt4OnUucG9zaXRpb24ueCx5OnUucG9zaXRpb24ueX0pLGQ+MCYmKHMrPXUuYXJlYSxhKz11LmluZXJ0aWEpLHUucG9zaXRpb24ueD1yLngrKHUucG9zaXRpb24ueC1yLngpKnQsdS5wb3NpdGlvbi55PXIueSsodS5wb3NpdGlvbi55LXIueSkqbixsLnVwZGF0ZSh1LmJvdW5kcyx1LnZlcnRpY2VzLGUudmVsb2NpdHkpXG59ZS5wYXJ0cy5sZW5ndGg+MSYmKGUuYXJlYT1zLGUuaXNTdGF0aWN8fChvLnNldE1hc3MoZSxlLmRlbnNpdHkqcyksby5zZXRJbmVydGlhKGUsYSkpKSxlLmNpcmNsZVJhZGl1cyYmKHQ9PT1uP2UuY2lyY2xlUmFkaXVzKj10OmUuY2lyY2xlUmFkaXVzPW51bGwpfSxvLnVwZGF0ZT1mdW5jdGlvbihlLHQsbixvKXt2YXIgcz1NYXRoLnBvdyh0Km4qZS50aW1lU2NhbGUsMiksYT0xLWUuZnJpY3Rpb25BaXIqbiplLnRpbWVTY2FsZSxkPWUucG9zaXRpb24ueC1lLnBvc2l0aW9uUHJldi54LHU9ZS5wb3NpdGlvbi55LWUucG9zaXRpb25QcmV2Lnk7ZS52ZWxvY2l0eS54PWQqYSpvK2UuZm9yY2UueC9lLm1hc3MqcyxlLnZlbG9jaXR5Lnk9dSphKm8rZS5mb3JjZS55L2UubWFzcypzLGUucG9zaXRpb25QcmV2Lng9ZS5wb3NpdGlvbi54LGUucG9zaXRpb25QcmV2Lnk9ZS5wb3NpdGlvbi55LGUucG9zaXRpb24ueCs9ZS52ZWxvY2l0eS54LGUucG9zaXRpb24ueSs9ZS52ZWxvY2l0eS55LGUuYW5ndWxhclZlbG9jaXR5PShlLmFuZ2xlLWUuYW5nbGVQcmV2KSphKm8rZS50b3JxdWUvZS5pbmVydGlhKnMsZS5hbmdsZVByZXY9ZS5hbmdsZSxlLmFuZ2xlKz1lLmFuZ3VsYXJWZWxvY2l0eSxlLnNwZWVkPXIubWFnbml0dWRlKGUudmVsb2NpdHkpLGUuYW5ndWxhclNwZWVkPU1hdGguYWJzKGUuYW5ndWxhclZlbG9jaXR5KTtmb3IodmFyIHA9MDtwPGUucGFydHMubGVuZ3RoO3ArKyl7dmFyIGY9ZS5wYXJ0c1twXTtpLnRyYW5zbGF0ZShmLnZlcnRpY2VzLGUudmVsb2NpdHkpLHA+MCYmKGYucG9zaXRpb24ueCs9ZS52ZWxvY2l0eS54LGYucG9zaXRpb24ueSs9ZS52ZWxvY2l0eS55KSwwIT09ZS5hbmd1bGFyVmVsb2NpdHkmJihpLnJvdGF0ZShmLnZlcnRpY2VzLGUuYW5ndWxhclZlbG9jaXR5LGUucG9zaXRpb24pLGMucm90YXRlKGYuYXhlcyxlLmFuZ3VsYXJWZWxvY2l0eSksXG5wPjAmJnIucm90YXRlQWJvdXQoZi5wb3NpdGlvbixlLmFuZ3VsYXJWZWxvY2l0eSxlLnBvc2l0aW9uLGYucG9zaXRpb24pKSxsLnVwZGF0ZShmLmJvdW5kcyxmLnZlcnRpY2VzLGUudmVsb2NpdHkpfX0sby5hcHBseUZvcmNlPWZ1bmN0aW9uKGUsdCxuKXtlLmZvcmNlLngrPW4ueCxlLmZvcmNlLnkrPW4ueTt2YXIgbz17eDp0LngtZS5wb3NpdGlvbi54LHk6dC55LWUucG9zaXRpb24ueX07ZS50b3JxdWUrPW8ueCpuLnktby55Km4ueH0sby5fdG90YWxQcm9wZXJ0aWVzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD17bWFzczowLGFyZWE6MCxpbmVydGlhOjAsY2VudHJlOnt4OjAseTowfX0sbj0xPT09ZS5wYXJ0cy5sZW5ndGg/MDoxO248ZS5wYXJ0cy5sZW5ndGg7bisrKXt2YXIgbz1lLnBhcnRzW25dLGk9by5tYXNzIT09MS8wP28ubWFzczoxO3QubWFzcys9aSx0LmFyZWErPW8uYXJlYSx0LmluZXJ0aWErPW8uaW5lcnRpYSx0LmNlbnRyZT1yLmFkZCh0LmNlbnRyZSxyLm11bHQoby5wb3NpdGlvbixpKSl9cmV0dXJuIHQuY2VudHJlPXIuZGl2KHQuY2VudHJlLHQubWFzcyksdH19KCl9LHtcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL1NsZWVwaW5nXCI6MjIsXCIuLi9nZW9tZXRyeS9BeGVzXCI6MjUsXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIjoyNixcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4LFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIjoyOSxcIi4uL3JlbmRlci9SZW5kZXJcIjozMX1dLDI6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi4vY29yZS9FdmVudHNcIikscj1lKFwiLi4vY29yZS9Db21tb25cIikscz1lKFwiLi4vZ2VvbWV0cnkvQm91bmRzXCIpLGE9ZShcIi4vQm9keVwiKTshZnVuY3Rpb24oKXtvLmNyZWF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gci5leHRlbmQoe2lkOnIubmV4dElkKCksdHlwZTpcImNvbXBvc2l0ZVwiLHBhcmVudDpudWxsLGlzTW9kaWZpZWQ6ITEsYm9kaWVzOltdLGNvbnN0cmFpbnRzOltdLGNvbXBvc2l0ZXM6W10sXG5sYWJlbDpcIkNvbXBvc2l0ZVwiLHBsdWdpbjp7fX0sZSl9LG8uc2V0TW9kaWZpZWQ9ZnVuY3Rpb24oZSx0LG4saSl7aWYoZS5pc01vZGlmaWVkPXQsbiYmZS5wYXJlbnQmJm8uc2V0TW9kaWZpZWQoZS5wYXJlbnQsdCxuLGkpLGkpZm9yKHZhciByPTA7cjxlLmNvbXBvc2l0ZXMubGVuZ3RoO3IrKyl7dmFyIHM9ZS5jb21wb3NpdGVzW3JdO28uc2V0TW9kaWZpZWQocyx0LG4saSl9fSxvLmFkZD1mdW5jdGlvbihlLHQpe3ZhciBuPVtdLmNvbmNhdCh0KTtpLnRyaWdnZXIoZSxcImJlZm9yZUFkZFwiLHtvYmplY3Q6dH0pO2Zvcih2YXIgcz0wO3M8bi5sZW5ndGg7cysrKXt2YXIgYT1uW3NdO3N3aXRjaChhLnR5cGUpe2Nhc2VcImJvZHlcIjppZihhLnBhcmVudCE9PWEpe3Iud2FybihcIkNvbXBvc2l0ZS5hZGQ6IHNraXBwZWQgYWRkaW5nIGEgY29tcG91bmQgYm9keSBwYXJ0ICh5b3UgbXVzdCBhZGQgaXRzIHBhcmVudCBpbnN0ZWFkKVwiKTticmVha31vLmFkZEJvZHkoZSxhKTticmVhaztjYXNlXCJjb25zdHJhaW50XCI6by5hZGRDb25zdHJhaW50KGUsYSk7YnJlYWs7Y2FzZVwiY29tcG9zaXRlXCI6by5hZGRDb21wb3NpdGUoZSxhKTticmVhaztjYXNlXCJtb3VzZUNvbnN0cmFpbnRcIjpvLmFkZENvbnN0cmFpbnQoZSxhLmNvbnN0cmFpbnQpfX1yZXR1cm4gaS50cmlnZ2VyKGUsXCJhZnRlckFkZFwiLHtvYmplY3Q6dH0pLGV9LG8ucmVtb3ZlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1bXS5jb25jYXQodCk7aS50cmlnZ2VyKGUsXCJiZWZvcmVSZW1vdmVcIix7b2JqZWN0OnR9KTtmb3IodmFyIHM9MDtzPHIubGVuZ3RoO3MrKyl7dmFyIGE9cltzXTtzd2l0Y2goYS50eXBlKXtjYXNlXCJib2R5XCI6by5yZW1vdmVCb2R5KGUsYSxuKTticmVhaztjYXNlXCJjb25zdHJhaW50XCI6by5yZW1vdmVDb25zdHJhaW50KGUsYSxuKTticmVhaztjYXNlXCJjb21wb3NpdGVcIjpvLnJlbW92ZUNvbXBvc2l0ZShlLGEsbik7YnJlYWs7Y2FzZVwibW91c2VDb25zdHJhaW50XCI6XG5vLnJlbW92ZUNvbnN0cmFpbnQoZSxhLmNvbnN0cmFpbnQpfX1yZXR1cm4gaS50cmlnZ2VyKGUsXCJhZnRlclJlbW92ZVwiLHtvYmplY3Q6dH0pLGV9LG8uYWRkQ29tcG9zaXRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29tcG9zaXRlcy5wdXNoKHQpLHQucGFyZW50PWUsby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSxlfSxvLnJlbW92ZUNvbXBvc2l0ZT1mdW5jdGlvbihlLHQsbil7dmFyIGk9ci5pbmRleE9mKGUuY29tcG9zaXRlcyx0KTtpZigtMSE9PWkmJihvLnJlbW92ZUNvbXBvc2l0ZUF0KGUsaSksby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSksbilmb3IodmFyIHM9MDtzPGUuY29tcG9zaXRlcy5sZW5ndGg7cysrKW8ucmVtb3ZlQ29tcG9zaXRlKGUuY29tcG9zaXRlc1tzXSx0LCEwKTtyZXR1cm4gZX0sby5yZW1vdmVDb21wb3NpdGVBdD1mdW5jdGlvbihlLHQpe3JldHVybiBlLmNvbXBvc2l0ZXMuc3BsaWNlKHQsMSksby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSxlfSxvLmFkZEJvZHk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5ib2RpZXMucHVzaCh0KSxvLnNldE1vZGlmaWVkKGUsITAsITAsITEpLGV9LG8ucmVtb3ZlQm9keT1mdW5jdGlvbihlLHQsbil7dmFyIGk9ci5pbmRleE9mKGUuYm9kaWVzLHQpO2lmKC0xIT09aSYmKG8ucmVtb3ZlQm9keUF0KGUsaSksby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSksbilmb3IodmFyIHM9MDtzPGUuY29tcG9zaXRlcy5sZW5ndGg7cysrKW8ucmVtb3ZlQm9keShlLmNvbXBvc2l0ZXNbc10sdCwhMCk7cmV0dXJuIGV9LG8ucmVtb3ZlQm9keUF0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuYm9kaWVzLnNwbGljZSh0LDEpLG8uc2V0TW9kaWZpZWQoZSwhMCwhMCwhMSksZX0sby5hZGRDb25zdHJhaW50PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uc3RyYWludHMucHVzaCh0KSxvLnNldE1vZGlmaWVkKGUsITAsITAsITEpLGV9LG8ucmVtb3ZlQ29uc3RyYWludD1mdW5jdGlvbihlLHQsbil7XG52YXIgaT1yLmluZGV4T2YoZS5jb25zdHJhaW50cyx0KTtpZigtMSE9PWkmJm8ucmVtb3ZlQ29uc3RyYWludEF0KGUsaSksbilmb3IodmFyIHM9MDtzPGUuY29tcG9zaXRlcy5sZW5ndGg7cysrKW8ucmVtb3ZlQ29uc3RyYWludChlLmNvbXBvc2l0ZXNbc10sdCwhMCk7cmV0dXJuIGV9LG8ucmVtb3ZlQ29uc3RyYWludEF0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uc3RyYWludHMuc3BsaWNlKHQsMSksby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSxlfSxvLmNsZWFyPWZ1bmN0aW9uKGUsdCxuKXtpZihuKWZvcih2YXIgaT0wO2k8ZS5jb21wb3NpdGVzLmxlbmd0aDtpKyspby5jbGVhcihlLmNvbXBvc2l0ZXNbaV0sdCwhMCk7cmV0dXJuIHQ/ZS5ib2RpZXM9ZS5ib2RpZXMuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmlzU3RhdGljfSk6ZS5ib2RpZXMubGVuZ3RoPTAsZS5jb25zdHJhaW50cy5sZW5ndGg9MCxlLmNvbXBvc2l0ZXMubGVuZ3RoPTAsby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSxlfSxvLmFsbEJvZGllcz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10uY29uY2F0KGUuYm9kaWVzKSxuPTA7bjxlLmNvbXBvc2l0ZXMubGVuZ3RoO24rKyl0PXQuY29uY2F0KG8uYWxsQm9kaWVzKGUuY29tcG9zaXRlc1tuXSkpO3JldHVybiB0fSxvLmFsbENvbnN0cmFpbnRzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXS5jb25jYXQoZS5jb25zdHJhaW50cyksbj0wO248ZS5jb21wb3NpdGVzLmxlbmd0aDtuKyspdD10LmNvbmNhdChvLmFsbENvbnN0cmFpbnRzKGUuY29tcG9zaXRlc1tuXSkpO3JldHVybiB0fSxvLmFsbENvbXBvc2l0ZXM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLmNvbmNhdChlLmNvbXBvc2l0ZXMpLG49MDtuPGUuY29tcG9zaXRlcy5sZW5ndGg7bisrKXQ9dC5jb25jYXQoby5hbGxDb21wb3NpdGVzKGUuY29tcG9zaXRlc1tuXSkpO3JldHVybiB0fSxvLmdldD1mdW5jdGlvbihlLHQsbil7dmFyIGkscjtzd2l0Y2gobil7Y2FzZVwiYm9keVwiOlxuaT1vLmFsbEJvZGllcyhlKTticmVhaztjYXNlXCJjb25zdHJhaW50XCI6aT1vLmFsbENvbnN0cmFpbnRzKGUpO2JyZWFrO2Nhc2VcImNvbXBvc2l0ZVwiOmk9by5hbGxDb21wb3NpdGVzKGUpLmNvbmNhdChlKX1yZXR1cm4gaT8ocj1pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5pZC50b1N0cmluZygpPT09dC50b1N0cmluZygpfSksMD09PXIubGVuZ3RoP251bGw6clswXSk6bnVsbH0sby5tb3ZlPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gby5yZW1vdmUoZSx0KSxvLmFkZChuLHQpLGV9LG8ucmViYXNlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1vLmFsbEJvZGllcyhlKS5jb25jYXQoby5hbGxDb25zdHJhaW50cyhlKSkuY29uY2F0KG8uYWxsQ29tcG9zaXRlcyhlKSksbj0wO248dC5sZW5ndGg7bisrKXRbbl0uaWQ9ci5uZXh0SWQoKTtyZXR1cm4gby5zZXRNb2RpZmllZChlLCEwLCEwLCExKSxlfSxvLnRyYW5zbGF0ZT1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciBpPW4/by5hbGxCb2RpZXMoZSk6ZS5ib2RpZXMscj0wO3I8aS5sZW5ndGg7cisrKWEudHJhbnNsYXRlKGlbcl0sdCk7cmV0dXJuIG8uc2V0TW9kaWZpZWQoZSwhMCwhMCwhMSksZX0sby5yb3RhdGU9ZnVuY3Rpb24oZSx0LG4saSl7Zm9yKHZhciByPU1hdGguY29zKHQpLHM9TWF0aC5zaW4odCksbD1pP28uYWxsQm9kaWVzKGUpOmUuYm9kaWVzLGM9MDtjPGwubGVuZ3RoO2MrKyl7dmFyIGQ9bFtjXSx1PWQucG9zaXRpb24ueC1uLngscD1kLnBvc2l0aW9uLnktbi55O2Euc2V0UG9zaXRpb24oZCx7eDpuLngrKHUqci1wKnMpLHk6bi55Kyh1KnMrcCpyKX0pLGEucm90YXRlKGQsdCl9cmV0dXJuIG8uc2V0TW9kaWZpZWQoZSwhMCwhMCwhMSksZX0sby5zY2FsZT1mdW5jdGlvbihlLHQsbixpLHIpe2Zvcih2YXIgcz1yP28uYWxsQm9kaWVzKGUpOmUuYm9kaWVzLGw9MDtsPHMubGVuZ3RoO2wrKyl7dmFyIGM9c1tsXSxkPWMucG9zaXRpb24ueC1pLngsdT1jLnBvc2l0aW9uLnktaS55XG47YS5zZXRQb3NpdGlvbihjLHt4OmkueCtkKnQseTppLnkrdSpufSksYS5zY2FsZShjLHQsbil9cmV0dXJuIG8uc2V0TW9kaWZpZWQoZSwhMCwhMCwhMSksZX0sby5ib3VuZHM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW8uYWxsQm9kaWVzKGUpLG49W10saT0wO2k8dC5sZW5ndGg7aSs9MSl7dmFyIHI9dFtpXTtuLnB1c2goci5ib3VuZHMubWluLHIuYm91bmRzLm1heCl9cmV0dXJuIHMuY3JlYXRlKG4pfX0oKX0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2NvcmUvRXZlbnRzXCI6MTYsXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIjoyNixcIi4vQm9keVwiOjF9XSwzOltmdW5jdGlvbihlLHQsbil7dmFyIG89e307dC5leHBvcnRzPW87dmFyIGk9ZShcIi4vQ29tcG9zaXRlXCIpLHI9KGUoXCIuLi9jb25zdHJhaW50L0NvbnN0cmFpbnRcIiksZShcIi4uL2NvcmUvQ29tbW9uXCIpKTshZnVuY3Rpb24oKXtvLmNyZWF0ZT1mdW5jdGlvbihlKXt2YXIgdD1pLmNyZWF0ZSgpLG49e2xhYmVsOlwiV29ybGRcIixncmF2aXR5Ont4OjAseToxLHNjYWxlOi4wMDF9LGJvdW5kczp7bWluOnt4Oi0xLzAseTotMS8wfSxtYXg6e3g6MS8wLHk6MS8wfX19O3JldHVybiByLmV4dGVuZCh0LG4sZSl9fSgpfSx7XCIuLi9jb25zdHJhaW50L0NvbnN0cmFpbnRcIjoxMixcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuL0NvbXBvc2l0ZVwiOjJ9XSw0OltmdW5jdGlvbihlLHQsbil7dmFyIG89e307dC5leHBvcnRzPW8sZnVuY3Rpb24oKXtvLmNyZWF0ZT1mdW5jdGlvbihlKXtyZXR1cm57aWQ6by5pZChlKSx2ZXJ0ZXg6ZSxub3JtYWxJbXB1bHNlOjAsdGFuZ2VudEltcHVsc2U6MH19LG8uaWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuYm9keS5pZCtcIl9cIitlLmluZGV4fX0oKX0se31dLDU6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9TQVRcIikscj1lKFwiLi9QYWlyXCIpLHM9ZShcIi4uL2dlb21ldHJ5L0JvdW5kc1wiKTshZnVuY3Rpb24oKXtvLmNvbGxpc2lvbnM9ZnVuY3Rpb24oZSx0KXtcbmZvcih2YXIgbj1bXSxhPXQucGFpcnMudGFibGUsbD0wO2w8ZS5sZW5ndGg7bCsrKXt2YXIgYz1lW2xdWzBdLGQ9ZVtsXVsxXTtpZigoIWMuaXNTdGF0aWMmJiFjLmlzU2xlZXBpbmd8fCFkLmlzU3RhdGljJiYhZC5pc1NsZWVwaW5nKSYmKG8uY2FuQ29sbGlkZShjLmNvbGxpc2lvbkZpbHRlcixkLmNvbGxpc2lvbkZpbHRlcikmJnMub3ZlcmxhcHMoYy5ib3VuZHMsZC5ib3VuZHMpKSlmb3IodmFyIHU9Yy5wYXJ0cy5sZW5ndGg+MT8xOjA7dTxjLnBhcnRzLmxlbmd0aDt1KyspZm9yKHZhciBwPWMucGFydHNbdV0sZj1kLnBhcnRzLmxlbmd0aD4xPzE6MDtmPGQucGFydHMubGVuZ3RoO2YrKyl7dmFyIG09ZC5wYXJ0c1tmXTtpZihwPT09YyYmbT09PWR8fHMub3ZlcmxhcHMocC5ib3VuZHMsbS5ib3VuZHMpKXt2YXIgdix5PXIuaWQocCxtKSxnPWFbeV07dj1nJiZnLmlzQWN0aXZlP2cuY29sbGlzaW9uOm51bGw7dmFyIHg9aS5jb2xsaWRlcyhwLG0sdik7eC5jb2xsaWRlZCYmbi5wdXNoKHgpfX19cmV0dXJuIG59LG8uY2FuQ29sbGlkZT1mdW5jdGlvbihlLHQpe3JldHVybiBlLmdyb3VwPT09dC5ncm91cCYmMCE9PWUuZ3JvdXA/ZS5ncm91cD4wOjAhPShlLm1hc2smdC5jYXRlZ29yeSkmJjAhPSh0Lm1hc2smZS5jYXRlZ29yeSl9fSgpfSx7XCIuLi9nZW9tZXRyeS9Cb3VuZHNcIjoyNixcIi4vUGFpclwiOjcsXCIuL1NBVFwiOjExfV0sNjpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vO3ZhciBpPWUoXCIuL1BhaXJcIikscj1lKFwiLi9EZXRlY3RvclwiKSxzPWUoXCIuLi9jb3JlL0NvbW1vblwiKTshZnVuY3Rpb24oKXtvLmNyZWF0ZT1mdW5jdGlvbihlKXt2YXIgdD17Y29udHJvbGxlcjpvLGRldGVjdG9yOnIuY29sbGlzaW9ucyxidWNrZXRzOnt9LHBhaXJzOnt9LHBhaXJzTGlzdDpbXSxidWNrZXRXaWR0aDo0OCxidWNrZXRIZWlnaHQ6NDh9O3JldHVybiBzLmV4dGVuZCh0LGUpfSxvLnVwZGF0ZT1mdW5jdGlvbihlLHQsbixpKXtcbnZhciByLHMsYSxsLGMsZD1uLndvcmxkLHU9ZS5idWNrZXRzLHA9ITE7Zm9yKHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGY9dFtyXTtpZigoIWYuaXNTbGVlcGluZ3x8aSkmJiEoZi5ib3VuZHMubWF4Lng8ZC5ib3VuZHMubWluLnh8fGYuYm91bmRzLm1pbi54PmQuYm91bmRzLm1heC54fHxmLmJvdW5kcy5tYXgueTxkLmJvdW5kcy5taW4ueXx8Zi5ib3VuZHMubWluLnk+ZC5ib3VuZHMubWF4LnkpKXt2YXIgbT1vLl9nZXRSZWdpb24oZSxmKTtpZighZi5yZWdpb258fG0uaWQhPT1mLnJlZ2lvbi5pZHx8aSl7Zi5yZWdpb24mJiFpfHwoZi5yZWdpb249bSk7dmFyIHY9by5fcmVnaW9uVW5pb24obSxmLnJlZ2lvbik7Zm9yKHM9di5zdGFydENvbDtzPD12LmVuZENvbDtzKyspZm9yKGE9di5zdGFydFJvdzthPD12LmVuZFJvdzthKyspe2M9by5fZ2V0QnVja2V0SWQocyxhKSxsPXVbY107dmFyIHk9cz49bS5zdGFydENvbCYmczw9bS5lbmRDb2wmJmE+PW0uc3RhcnRSb3cmJmE8PW0uZW5kUm93LGc9cz49Zi5yZWdpb24uc3RhcnRDb2wmJnM8PWYucmVnaW9uLmVuZENvbCYmYT49Zi5yZWdpb24uc3RhcnRSb3cmJmE8PWYucmVnaW9uLmVuZFJvdzsheSYmZyYmZyYmbCYmby5fYnVja2V0UmVtb3ZlQm9keShlLGwsZiksKGYucmVnaW9uPT09bXx8eSYmIWd8fGkpJiYobHx8KGw9by5fY3JlYXRlQnVja2V0KHUsYykpLG8uX2J1Y2tldEFkZEJvZHkoZSxsLGYpKX1mLnJlZ2lvbj1tLHA9ITB9fX1wJiYoZS5wYWlyc0xpc3Q9by5fY3JlYXRlQWN0aXZlUGFpcnNMaXN0KGUpKX0sby5jbGVhcj1mdW5jdGlvbihlKXtlLmJ1Y2tldHM9e30sZS5wYWlycz17fSxlLnBhaXJzTGlzdD1bXX0sby5fcmVnaW9uVW5pb249ZnVuY3Rpb24oZSx0KXt2YXIgbj1NYXRoLm1pbihlLnN0YXJ0Q29sLHQuc3RhcnRDb2wpLGk9TWF0aC5tYXgoZS5lbmRDb2wsdC5lbmRDb2wpLHI9TWF0aC5taW4oZS5zdGFydFJvdyx0LnN0YXJ0Um93KSxzPU1hdGgubWF4KGUuZW5kUm93LHQuZW5kUm93KVxuO3JldHVybiBvLl9jcmVhdGVSZWdpb24obixpLHIscyl9LG8uX2dldFJlZ2lvbj1mdW5jdGlvbihlLHQpe3ZhciBuPXQuYm91bmRzLGk9TWF0aC5mbG9vcihuLm1pbi54L2UuYnVja2V0V2lkdGgpLHI9TWF0aC5mbG9vcihuLm1heC54L2UuYnVja2V0V2lkdGgpLHM9TWF0aC5mbG9vcihuLm1pbi55L2UuYnVja2V0SGVpZ2h0KSxhPU1hdGguZmxvb3Iobi5tYXgueS9lLmJ1Y2tldEhlaWdodCk7cmV0dXJuIG8uX2NyZWF0ZVJlZ2lvbihpLHIscyxhKX0sby5fY3JlYXRlUmVnaW9uPWZ1bmN0aW9uKGUsdCxuLG8pe3JldHVybntpZDplK1wiLFwiK3QrXCIsXCIrbitcIixcIitvLHN0YXJ0Q29sOmUsZW5kQ29sOnQsc3RhcnRSb3c6bixlbmRSb3c6b319LG8uX2dldEJ1Y2tldElkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJDXCIrZStcIlJcIit0fSxvLl9jcmVhdGVCdWNrZXQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVt0XT1bXX0sby5fYnVja2V0QWRkQm9keT1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciBvPTA7bzx0Lmxlbmd0aDtvKyspe3ZhciByPXRbb107aWYoIShuLmlkPT09ci5pZHx8bi5pc1N0YXRpYyYmci5pc1N0YXRpYykpe3ZhciBzPWkuaWQobixyKSxhPWUucGFpcnNbc107YT9hWzJdKz0xOmUucGFpcnNbc109W24sciwxXX19dC5wdXNoKG4pfSxvLl9idWNrZXRSZW1vdmVCb2R5PWZ1bmN0aW9uKGUsdCxuKXt0LnNwbGljZShzLmluZGV4T2YodCxuKSwxKTtmb3IodmFyIG89MDtvPHQubGVuZ3RoO28rKyl7dmFyIHI9dFtvXSxhPWkuaWQobixyKSxsPWUucGFpcnNbYV07bCYmKGxbMl0tPTEpfX0sby5fY3JlYXRlQWN0aXZlUGFpcnNMaXN0PWZ1bmN0aW9uKGUpe3ZhciB0LG4sbz1bXTt0PXMua2V5cyhlLnBhaXJzKTtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyluPWUucGFpcnNbdFtpXV0sblsyXT4wP28ucHVzaChuKTpkZWxldGUgZS5wYWlyc1t0W2ldXTtyZXR1cm4gb319KCl9LHtcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuL0RldGVjdG9yXCI6NSxcIi4vUGFpclwiOjd9XSxcbjc6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9Db250YWN0XCIpOyFmdW5jdGlvbigpe28uY3JlYXRlPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5ib2R5QSxpPWUuYm9keUIscj1lLnBhcmVudEEscz1lLnBhcmVudEIsYT17aWQ6by5pZChuLGkpLGJvZHlBOm4sYm9keUI6aSxjb250YWN0czp7fSxhY3RpdmVDb250YWN0czpbXSxzZXBhcmF0aW9uOjAsaXNBY3RpdmU6ITAsaXNTZW5zb3I6bi5pc1NlbnNvcnx8aS5pc1NlbnNvcix0aW1lQ3JlYXRlZDp0LHRpbWVVcGRhdGVkOnQsaW52ZXJzZU1hc3M6ci5pbnZlcnNlTWFzcytzLmludmVyc2VNYXNzLGZyaWN0aW9uOk1hdGgubWluKHIuZnJpY3Rpb24scy5mcmljdGlvbiksZnJpY3Rpb25TdGF0aWM6TWF0aC5tYXgoci5mcmljdGlvblN0YXRpYyxzLmZyaWN0aW9uU3RhdGljKSxyZXN0aXR1dGlvbjpNYXRoLm1heChyLnJlc3RpdHV0aW9uLHMucmVzdGl0dXRpb24pLHNsb3A6TWF0aC5tYXgoci5zbG9wLHMuc2xvcCl9O3JldHVybiBvLnVwZGF0ZShhLGUsdCksYX0sby51cGRhdGU9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPWUuY29udGFjdHMscz10LnN1cHBvcnRzLGE9ZS5hY3RpdmVDb250YWN0cyxsPXQucGFyZW50QSxjPXQucGFyZW50QjtpZihlLmNvbGxpc2lvbj10LGUuaW52ZXJzZU1hc3M9bC5pbnZlcnNlTWFzcytjLmludmVyc2VNYXNzLGUuZnJpY3Rpb249TWF0aC5taW4obC5mcmljdGlvbixjLmZyaWN0aW9uKSxlLmZyaWN0aW9uU3RhdGljPU1hdGgubWF4KGwuZnJpY3Rpb25TdGF0aWMsYy5mcmljdGlvblN0YXRpYyksZS5yZXN0aXR1dGlvbj1NYXRoLm1heChsLnJlc3RpdHV0aW9uLGMucmVzdGl0dXRpb24pLGUuc2xvcD1NYXRoLm1heChsLnNsb3AsYy5zbG9wKSxhLmxlbmd0aD0wLHQuY29sbGlkZWQpe2Zvcih2YXIgZD0wO2Q8cy5sZW5ndGg7ZCsrKXt2YXIgdT1zW2RdLHA9aS5pZCh1KSxmPXJbcF07Zj9hLnB1c2goZik6YS5wdXNoKHJbcF09aS5jcmVhdGUodSkpfVxuZS5zZXBhcmF0aW9uPXQuZGVwdGgsby5zZXRBY3RpdmUoZSwhMCxuKX1lbHNlITA9PT1lLmlzQWN0aXZlJiZvLnNldEFjdGl2ZShlLCExLG4pfSxvLnNldEFjdGl2ZT1mdW5jdGlvbihlLHQsbil7dD8oZS5pc0FjdGl2ZT0hMCxlLnRpbWVVcGRhdGVkPW4pOihlLmlzQWN0aXZlPSExLGUuYWN0aXZlQ29udGFjdHMubGVuZ3RoPTApfSxvLmlkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuaWQ8dC5pZD9cIkFcIitlLmlkK1wiQlwiK3QuaWQ6XCJBXCIrdC5pZCtcIkJcIitlLmlkfX0oKX0se1wiLi9Db250YWN0XCI6NH1dLDg6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9QYWlyXCIpLHI9ZShcIi4uL2NvcmUvQ29tbW9uXCIpOyFmdW5jdGlvbigpe28uX3BhaXJNYXhJZGxlTGlmZT0xZTMsby5jcmVhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHIuZXh0ZW5kKHt0YWJsZTp7fSxsaXN0OltdLGNvbGxpc2lvblN0YXJ0OltdLGNvbGxpc2lvbkFjdGl2ZTpbXSxjb2xsaXNpb25FbmQ6W119LGUpfSxvLnVwZGF0ZT1mdW5jdGlvbihlLHQsbil7dmFyIG8scyxhLGwsYz1lLmxpc3QsZD1lLnRhYmxlLHU9ZS5jb2xsaXNpb25TdGFydCxwPWUuY29sbGlzaW9uRW5kLGY9ZS5jb2xsaXNpb25BY3RpdmUsbT1bXTtmb3IodS5sZW5ndGg9MCxwLmxlbmd0aD0wLGYubGVuZ3RoPTAsbD0wO2w8dC5sZW5ndGg7bCsrKW89dFtsXSxvLmNvbGxpZGVkJiYocz1pLmlkKG8uYm9keUEsby5ib2R5QiksbS5wdXNoKHMpLGE9ZFtzXSxhPyhhLmlzQWN0aXZlP2YucHVzaChhKTp1LnB1c2goYSksaS51cGRhdGUoYSxvLG4pKTooYT1pLmNyZWF0ZShvLG4pLGRbc109YSx1LnB1c2goYSksYy5wdXNoKGEpKSk7Zm9yKGw9MDtsPGMubGVuZ3RoO2wrKylhPWNbbF0sYS5pc0FjdGl2ZSYmLTE9PT1yLmluZGV4T2YobSxhLmlkKSYmKGkuc2V0QWN0aXZlKGEsITEsbikscC5wdXNoKGEpKX0sby5yZW1vdmVPbGQ9ZnVuY3Rpb24oZSx0KXtcbnZhciBuLGkscixzLGE9ZS5saXN0LGw9ZS50YWJsZSxjPVtdO2ZvcihzPTA7czxhLmxlbmd0aDtzKyspbj1hW3NdLGk9bi5jb2xsaXNpb24saS5ib2R5QS5pc1NsZWVwaW5nfHxpLmJvZHlCLmlzU2xlZXBpbmc/bi50aW1lVXBkYXRlZD10OnQtbi50aW1lVXBkYXRlZD5vLl9wYWlyTWF4SWRsZUxpZmUmJmMucHVzaChzKTtmb3Iocz0wO3M8Yy5sZW5ndGg7cysrKXI9Y1tzXS1zLG49YVtyXSxkZWxldGUgbFtuLmlkXSxhLnNwbGljZShyLDEpfSxvLmNsZWFyPWZ1bmN0aW9uKGUpe3JldHVybiBlLnRhYmxlPXt9LGUubGlzdC5sZW5ndGg9MCxlLmNvbGxpc2lvblN0YXJ0Lmxlbmd0aD0wLGUuY29sbGlzaW9uQWN0aXZlLmxlbmd0aD0wLGUuY29sbGlzaW9uRW5kLmxlbmd0aD0wLGV9fSgpfSx7XCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi9QYWlyXCI6N31dLDk6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCIpLHI9ZShcIi4vU0FUXCIpLHM9ZShcIi4uL2dlb21ldHJ5L0JvdW5kc1wiKSxhPWUoXCIuLi9mYWN0b3J5L0JvZGllc1wiKSxsPWUoXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiKTshZnVuY3Rpb24oKXtvLmNvbGxpZGVzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPVtdLG89MDtvPHQubGVuZ3RoO28rKyl7dmFyIGk9dFtvXTtpZihzLm92ZXJsYXBzKGkuYm91bmRzLGUuYm91bmRzKSlmb3IodmFyIGE9MT09PWkucGFydHMubGVuZ3RoPzA6MTthPGkucGFydHMubGVuZ3RoO2ErKyl7dmFyIGw9aS5wYXJ0c1thXTtpZihzLm92ZXJsYXBzKGwuYm91bmRzLGUuYm91bmRzKSl7dmFyIGM9ci5jb2xsaWRlcyhsLGUpO2lmKGMuY29sbGlkZWQpe24ucHVzaChjKTticmVha319fX1yZXR1cm4gbn0sby5yYXk9ZnVuY3Rpb24oZSx0LG4scil7cj1yfHwxZS0xMDBcbjtmb3IodmFyIHM9aS5hbmdsZSh0LG4pLGw9aS5tYWduaXR1ZGUoaS5zdWIodCxuKSksYz0uNSoobi54K3QueCksZD0uNSoobi55K3QueSksdT1hLnJlY3RhbmdsZShjLGQsbCxyLHthbmdsZTpzfSkscD1vLmNvbGxpZGVzKHUsZSksZj0wO2Y8cC5sZW5ndGg7Zis9MSl7dmFyIG09cFtmXTttLmJvZHk9bS5ib2R5Qj1tLmJvZHlBfXJldHVybiBwfSxvLnJlZ2lvbj1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciBvPVtdLGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIHI9ZVtpXSxhPXMub3ZlcmxhcHMoci5ib3VuZHMsdCk7KGEmJiFufHwhYSYmbikmJm8ucHVzaChyKX1yZXR1cm4gb30sby5wb2ludD1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1bXSxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBpPWVbb107aWYocy5jb250YWlucyhpLmJvdW5kcyx0KSlmb3IodmFyIHI9MT09PWkucGFydHMubGVuZ3RoPzA6MTtyPGkucGFydHMubGVuZ3RoO3IrKyl7dmFyIGE9aS5wYXJ0c1tyXTtpZihzLmNvbnRhaW5zKGEuYm91bmRzLHQpJiZsLmNvbnRhaW5zKGEudmVydGljZXMsdCkpe24ucHVzaChpKTticmVha319fXJldHVybiBufX0oKX0se1wiLi4vZmFjdG9yeS9Cb2RpZXNcIjoyMyxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6MjgsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5LFwiLi9TQVRcIjoxMX1dLDEwOltmdW5jdGlvbihlLHQsbil7dmFyIG89e307dC5leHBvcnRzPW87dmFyIGk9ZShcIi4uL2dlb21ldHJ5L1ZlcnRpY2VzXCIpLHI9ZShcIi4uL2dlb21ldHJ5L1ZlY3RvclwiKSxzPWUoXCIuLi9jb3JlL0NvbW1vblwiKSxhPWUoXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIik7IWZ1bmN0aW9uKCl7by5fcmVzdGluZ1RocmVzaD00LG8uX3Jlc3RpbmdUaHJlc2hUYW5nZW50PTYsby5fcG9zaXRpb25EYW1wZW49Ljksby5fcG9zaXRpb25XYXJtaW5nPS44LG8uX2ZyaWN0aW9uTm9ybWFsTXVsdGlwbGllcj01LG8ucHJlU29sdmVQb3NpdGlvbj1mdW5jdGlvbihlKXtcbnZhciB0LG4sbztmb3IodD0wO3Q8ZS5sZW5ndGg7dCsrKW49ZVt0XSxuLmlzQWN0aXZlJiYobz1uLmFjdGl2ZUNvbnRhY3RzLmxlbmd0aCxuLmNvbGxpc2lvbi5wYXJlbnRBLnRvdGFsQ29udGFjdHMrPW8sbi5jb2xsaXNpb24ucGFyZW50Qi50b3RhbENvbnRhY3RzKz1vKX0sby5zb2x2ZVBvc2l0aW9uPWZ1bmN0aW9uKGUsdCl7dmFyIG4saSxzLGEsbCxjLGQsdSxwLGY9ci5fdGVtcFswXSxtPXIuX3RlbXBbMV0sdj1yLl90ZW1wWzJdLHk9ci5fdGVtcFszXTtmb3Iobj0wO248ZS5sZW5ndGg7bisrKWk9ZVtuXSxpLmlzQWN0aXZlJiYhaS5pc1NlbnNvciYmKHM9aS5jb2xsaXNpb24sYT1zLnBhcmVudEEsbD1zLnBhcmVudEIsYz1zLm5vcm1hbCxkPXIuc3ViKHIuYWRkKGwucG9zaXRpb25JbXB1bHNlLGwucG9zaXRpb24sZiksci5hZGQoYS5wb3NpdGlvbkltcHVsc2Usci5zdWIobC5wb3NpdGlvbixzLnBlbmV0cmF0aW9uLG0pLHYpLHkpLGkuc2VwYXJhdGlvbj1yLmRvdChjLGQpKTtmb3Iobj0wO248ZS5sZW5ndGg7bisrKWk9ZVtuXSxpLmlzQWN0aXZlJiYhaS5pc1NlbnNvciYmKHM9aS5jb2xsaXNpb24sYT1zLnBhcmVudEEsbD1zLnBhcmVudEIsYz1zLm5vcm1hbCxwPShpLnNlcGFyYXRpb24taS5zbG9wKSp0LChhLmlzU3RhdGljfHxsLmlzU3RhdGljKSYmKHAqPTIpLGEuaXNTdGF0aWN8fGEuaXNTbGVlcGluZ3x8KHU9by5fcG9zaXRpb25EYW1wZW4vYS50b3RhbENvbnRhY3RzLGEucG9zaXRpb25JbXB1bHNlLngrPWMueCpwKnUsYS5wb3NpdGlvbkltcHVsc2UueSs9Yy55KnAqdSksbC5pc1N0YXRpY3x8bC5pc1NsZWVwaW5nfHwodT1vLl9wb3NpdGlvbkRhbXBlbi9sLnRvdGFsQ29udGFjdHMsbC5wb3NpdGlvbkltcHVsc2UueC09Yy54KnAqdSxsLnBvc2l0aW9uSW1wdWxzZS55LT1jLnkqcCp1KSl9LG8ucG9zdFNvbHZlUG9zaXRpb249ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe3ZhciBuPWVbdF1cbjtpZihuLnRvdGFsQ29udGFjdHM9MCwwIT09bi5wb3NpdGlvbkltcHVsc2UueHx8MCE9PW4ucG9zaXRpb25JbXB1bHNlLnkpe2Zvcih2YXIgcz0wO3M8bi5wYXJ0cy5sZW5ndGg7cysrKXt2YXIgbD1uLnBhcnRzW3NdO2kudHJhbnNsYXRlKGwudmVydGljZXMsbi5wb3NpdGlvbkltcHVsc2UpLGEudXBkYXRlKGwuYm91bmRzLGwudmVydGljZXMsbi52ZWxvY2l0eSksbC5wb3NpdGlvbi54Kz1uLnBvc2l0aW9uSW1wdWxzZS54LGwucG9zaXRpb24ueSs9bi5wb3NpdGlvbkltcHVsc2UueX1uLnBvc2l0aW9uUHJldi54Kz1uLnBvc2l0aW9uSW1wdWxzZS54LG4ucG9zaXRpb25QcmV2LnkrPW4ucG9zaXRpb25JbXB1bHNlLnksci5kb3Qobi5wb3NpdGlvbkltcHVsc2Usbi52ZWxvY2l0eSk8MD8obi5wb3NpdGlvbkltcHVsc2UueD0wLG4ucG9zaXRpb25JbXB1bHNlLnk9MCk6KG4ucG9zaXRpb25JbXB1bHNlLngqPW8uX3Bvc2l0aW9uV2FybWluZyxuLnBvc2l0aW9uSW1wdWxzZS55Kj1vLl9wb3NpdGlvbldhcm1pbmcpfX19LG8ucHJlU29sdmVWZWxvY2l0eT1mdW5jdGlvbihlKXt2YXIgdCxuLG8saSxzLGEsbCxjLGQsdSxwLGYsbSx2LHk9ci5fdGVtcFswXSxnPXIuX3RlbXBbMV07Zm9yKHQ9MDt0PGUubGVuZ3RoO3QrKylpZihvPWVbdF0sby5pc0FjdGl2ZSYmIW8uaXNTZW5zb3IpZm9yKGk9by5hY3RpdmVDb250YWN0cyxzPW8uY29sbGlzaW9uLGE9cy5wYXJlbnRBLGw9cy5wYXJlbnRCLGM9cy5ub3JtYWwsZD1zLnRhbmdlbnQsbj0wO248aS5sZW5ndGg7bisrKXU9aVtuXSxwPXUudmVydGV4LGY9dS5ub3JtYWxJbXB1bHNlLG09dS50YW5nZW50SW1wdWxzZSwwPT09ZiYmMD09PW18fCh5Lng9Yy54KmYrZC54Km0seS55PWMueSpmK2QueSptLGEuaXNTdGF0aWN8fGEuaXNTbGVlcGluZ3x8KHY9ci5zdWIocCxhLnBvc2l0aW9uLGcpLGEucG9zaXRpb25QcmV2LngrPXkueCphLmludmVyc2VNYXNzLGEucG9zaXRpb25QcmV2LnkrPXkueSphLmludmVyc2VNYXNzLFxuYS5hbmdsZVByZXYrPXIuY3Jvc3Modix5KSphLmludmVyc2VJbmVydGlhKSxsLmlzU3RhdGljfHxsLmlzU2xlZXBpbmd8fCh2PXIuc3ViKHAsbC5wb3NpdGlvbixnKSxsLnBvc2l0aW9uUHJldi54LT15LngqbC5pbnZlcnNlTWFzcyxsLnBvc2l0aW9uUHJldi55LT15LnkqbC5pbnZlcnNlTWFzcyxsLmFuZ2xlUHJldi09ci5jcm9zcyh2LHkpKmwuaW52ZXJzZUluZXJ0aWEpKX0sby5zb2x2ZVZlbG9jaXR5PWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXQqdCxpPXIuX3RlbXBbMF0sYT1yLl90ZW1wWzFdLGw9ci5fdGVtcFsyXSxjPXIuX3RlbXBbM10sZD1yLl90ZW1wWzRdLHU9ci5fdGVtcFs1XSxwPTA7cDxlLmxlbmd0aDtwKyspe3ZhciBmPWVbcF07aWYoZi5pc0FjdGl2ZSYmIWYuaXNTZW5zb3Ipe3ZhciBtPWYuY29sbGlzaW9uLHY9bS5wYXJlbnRBLHk9bS5wYXJlbnRCLGc9bS5ub3JtYWwseD1tLnRhbmdlbnQsaD1mLmFjdGl2ZUNvbnRhY3RzLGI9MS9oLmxlbmd0aDt2LnZlbG9jaXR5Lng9di5wb3NpdGlvbi54LXYucG9zaXRpb25QcmV2Lngsdi52ZWxvY2l0eS55PXYucG9zaXRpb24ueS12LnBvc2l0aW9uUHJldi55LHkudmVsb2NpdHkueD15LnBvc2l0aW9uLngteS5wb3NpdGlvblByZXYueCx5LnZlbG9jaXR5Lnk9eS5wb3NpdGlvbi55LXkucG9zaXRpb25QcmV2Lnksdi5hbmd1bGFyVmVsb2NpdHk9di5hbmdsZS12LmFuZ2xlUHJldix5LmFuZ3VsYXJWZWxvY2l0eT15LmFuZ2xlLXkuYW5nbGVQcmV2O2Zvcih2YXIgdz0wO3c8aC5sZW5ndGg7dysrKXtcbnZhciBTPWhbd10sQz1TLnZlcnRleCxBPXIuc3ViKEMsdi5wb3NpdGlvbixhKSxQPXIuc3ViKEMseS5wb3NpdGlvbixsKSxCPXIuYWRkKHYudmVsb2NpdHksci5tdWx0KHIucGVycChBKSx2LmFuZ3VsYXJWZWxvY2l0eSksYyksTT1yLmFkZCh5LnZlbG9jaXR5LHIubXVsdChyLnBlcnAoUCkseS5hbmd1bGFyVmVsb2NpdHkpLGQpLGs9ci5zdWIoQixNLHUpLEk9ci5kb3QoZyxrKSxfPXIuZG90KHgsayksVD1NYXRoLmFicyhfKSxSPXMuc2lnbihfKSxWPSgxK2YucmVzdGl0dXRpb24pKkksRT1zLmNsYW1wKGYuc2VwYXJhdGlvbitJLDAsMSkqby5fZnJpY3Rpb25Ob3JtYWxNdWx0aXBsaWVyLEw9XyxGPTEvMDtUPmYuZnJpY3Rpb24qZi5mcmljdGlvblN0YXRpYypFKm4mJihGPVQsTD1zLmNsYW1wKGYuZnJpY3Rpb24qUipuLC1GLEYpKTt2YXIgTz1yLmNyb3NzKEEsZykscT1yLmNyb3NzKFAsZyksVz1iLyh2LmludmVyc2VNYXNzK3kuaW52ZXJzZU1hc3Mrdi5pbnZlcnNlSW5lcnRpYSpPKk8reS5pbnZlcnNlSW5lcnRpYSpxKnEpO2lmKFYqPVcsTCo9VyxJPDAmJkkqST5vLl9yZXN0aW5nVGhyZXNoKm4pUy5ub3JtYWxJbXB1bHNlPTA7ZWxzZXt2YXIgRD1TLm5vcm1hbEltcHVsc2U7Uy5ub3JtYWxJbXB1bHNlPU1hdGgubWluKFMubm9ybWFsSW1wdWxzZStWLDApLFY9Uy5ub3JtYWxJbXB1bHNlLUR9aWYoXypfPm8uX3Jlc3RpbmdUaHJlc2hUYW5nZW50Km4pUy50YW5nZW50SW1wdWxzZT0wO2Vsc2V7dmFyIE49Uy50YW5nZW50SW1wdWxzZTtTLnRhbmdlbnRJbXB1bHNlPXMuY2xhbXAoUy50YW5nZW50SW1wdWxzZStMLC1GLEYpLEw9Uy50YW5nZW50SW1wdWxzZS1OfWkueD1nLngqVit4LngqTCxpLnk9Zy55KlYreC55Kkwsdi5pc1N0YXRpY3x8di5pc1NsZWVwaW5nfHwodi5wb3NpdGlvblByZXYueCs9aS54KnYuaW52ZXJzZU1hc3Msdi5wb3NpdGlvblByZXYueSs9aS55KnYuaW52ZXJzZU1hc3MsXG52LmFuZ2xlUHJldis9ci5jcm9zcyhBLGkpKnYuaW52ZXJzZUluZXJ0aWEpLHkuaXNTdGF0aWN8fHkuaXNTbGVlcGluZ3x8KHkucG9zaXRpb25QcmV2LngtPWkueCp5LmludmVyc2VNYXNzLHkucG9zaXRpb25QcmV2LnktPWkueSp5LmludmVyc2VNYXNzLHkuYW5nbGVQcmV2LT1yLmNyb3NzKFAsaSkqeS5pbnZlcnNlSW5lcnRpYSl9fX19fSgpfSx7XCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9WZWN0b3JcIjoyOCxcIi4uL2dlb21ldHJ5L1ZlcnRpY2VzXCI6Mjl9XSwxMTpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vO3ZhciBpPWUoXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiKSxyPWUoXCIuLi9nZW9tZXRyeS9WZWN0b3JcIik7IWZ1bmN0aW9uKCl7by5jb2xsaWRlcz1mdW5jdGlvbihlLHQsbil7dmFyIHMsYSxsLGMsZD0hMTtpZihuKXt2YXIgdT1lLnBhcmVudCxwPXQucGFyZW50LGY9dS5zcGVlZCp1LnNwZWVkK3UuYW5ndWxhclNwZWVkKnUuYW5ndWxhclNwZWVkK3Auc3BlZWQqcC5zcGVlZCtwLmFuZ3VsYXJTcGVlZCpwLmFuZ3VsYXJTcGVlZDtkPW4mJm4uY29sbGlkZWQmJmY8LjIsYz1ufWVsc2UgYz17Y29sbGlkZWQ6ITEsYm9keUE6ZSxib2R5Qjp0fTtpZihuJiZkKXt2YXIgbT1jLmF4aXNCb2R5LHY9bT09PWU/dDplLHk9W20uYXhlc1tuLmF4aXNOdW1iZXJdXTtpZihsPW8uX292ZXJsYXBBeGVzKG0udmVydGljZXMsdi52ZXJ0aWNlcyx5KSxjLnJldXNlZD0hMCxsLm92ZXJsYXA8PTApcmV0dXJuIGMuY29sbGlkZWQ9ITEsY31lbHNle2lmKHM9by5fb3ZlcmxhcEF4ZXMoZS52ZXJ0aWNlcyx0LnZlcnRpY2VzLGUuYXhlcykscy5vdmVybGFwPD0wKXJldHVybiBjLmNvbGxpZGVkPSExLGM7aWYoYT1vLl9vdmVybGFwQXhlcyh0LnZlcnRpY2VzLGUudmVydGljZXMsdC5heGVzKSxhLm92ZXJsYXA8PTApcmV0dXJuIGMuY29sbGlkZWQ9ITEsYztzLm92ZXJsYXA8YS5vdmVybGFwPyhsPXMsXG5jLmF4aXNCb2R5PWUpOihsPWEsYy5heGlzQm9keT10KSxjLmF4aXNOdW1iZXI9bC5heGlzTnVtYmVyfWMuYm9keUE9ZS5pZDx0LmlkP2U6dCxjLmJvZHlCPWUuaWQ8dC5pZD90OmUsYy5jb2xsaWRlZD0hMCxjLmRlcHRoPWwub3ZlcmxhcCxjLnBhcmVudEE9Yy5ib2R5QS5wYXJlbnQsYy5wYXJlbnRCPWMuYm9keUIucGFyZW50LGU9Yy5ib2R5QSx0PWMuYm9keUIsci5kb3QobC5heGlzLHIuc3ViKHQucG9zaXRpb24sZS5wb3NpdGlvbikpPDA/Yy5ub3JtYWw9e3g6bC5heGlzLngseTpsLmF4aXMueX06Yy5ub3JtYWw9e3g6LWwuYXhpcy54LHk6LWwuYXhpcy55fSxjLnRhbmdlbnQ9ci5wZXJwKGMubm9ybWFsKSxjLnBlbmV0cmF0aW9uPWMucGVuZXRyYXRpb258fHt9LGMucGVuZXRyYXRpb24ueD1jLm5vcm1hbC54KmMuZGVwdGgsYy5wZW5ldHJhdGlvbi55PWMubm9ybWFsLnkqYy5kZXB0aDt2YXIgZz1vLl9maW5kU3VwcG9ydHMoZSx0LGMubm9ybWFsKSx4PVtdO2lmKGkuY29udGFpbnMoZS52ZXJ0aWNlcyxnWzBdKSYmeC5wdXNoKGdbMF0pLGkuY29udGFpbnMoZS52ZXJ0aWNlcyxnWzFdKSYmeC5wdXNoKGdbMV0pLHgubGVuZ3RoPDIpe3ZhciBoPW8uX2ZpbmRTdXBwb3J0cyh0LGUsci5uZWcoYy5ub3JtYWwpKTtpLmNvbnRhaW5zKHQudmVydGljZXMsaFswXSkmJngucHVzaChoWzBdKSx4Lmxlbmd0aDwyJiZpLmNvbnRhaW5zKHQudmVydGljZXMsaFsxXSkmJngucHVzaChoWzFdKX1yZXR1cm4geC5sZW5ndGg8MSYmKHg9W2dbMF1dKSxjLnN1cHBvcnRzPXgsY30sby5fb3ZlcmxhcEF4ZXM9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgaSxzLGE9ci5fdGVtcFswXSxsPXIuX3RlbXBbMV0sYz17b3ZlcmxhcDpOdW1iZXIuTUFYX1ZBTFVFfSxkPTA7ZDxuLmxlbmd0aDtkKyspe2lmKHM9bltkXSxvLl9wcm9qZWN0VG9BeGlzKGEsZSxzKSxvLl9wcm9qZWN0VG9BeGlzKGwsdCxzKSxcbihpPU1hdGgubWluKGEubWF4LWwubWluLGwubWF4LWEubWluKSk8PTApcmV0dXJuIGMub3ZlcmxhcD1pLGM7aTxjLm92ZXJsYXAmJihjLm92ZXJsYXA9aSxjLmF4aXM9cyxjLmF4aXNOdW1iZXI9ZCl9cmV0dXJuIGN9LG8uX3Byb2plY3RUb0F4aXM9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgbz1yLmRvdCh0WzBdLG4pLGk9byxzPTE7czx0Lmxlbmd0aDtzKz0xKXt2YXIgYT1yLmRvdCh0W3NdLG4pO2E+aT9pPWE6YTxvJiYobz1hKX1lLm1pbj1vLGUubWF4PWl9LG8uX2ZpbmRTdXBwb3J0cz1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciBvLGkscyxhLGw9TnVtYmVyLk1BWF9WQUxVRSxjPXIuX3RlbXBbMF0sZD10LnZlcnRpY2VzLHU9ZS5wb3NpdGlvbixwPTA7cDxkLmxlbmd0aDtwKyspaT1kW3BdLGMueD1pLngtdS54LGMueT1pLnktdS55LChvPS1yLmRvdChuLGMpKTxsJiYobD1vLHM9aSk7cmV0dXJuIGk9ZFtzLmluZGV4LTE+PTA/cy5pbmRleC0xOmQubGVuZ3RoLTFdLGMueD1pLngtdS54LGMueT1pLnktdS55LGw9LXIuZG90KG4sYyksYT1pLGk9ZFsocy5pbmRleCsxKSVkLmxlbmd0aF0sYy54PWkueC11LngsYy55PWkueS11Lnksbz0tci5kb3QobixjKSxvPGwmJihhPWkpLFtzLGFdfX0oKX0se1wiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6MjgsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5fV0sMTI6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIikscj1lKFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCIpLHM9ZShcIi4uL2NvcmUvU2xlZXBpbmdcIiksYT1lKFwiLi4vZ2VvbWV0cnkvQm91bmRzXCIpLGw9ZShcIi4uL2dlb21ldHJ5L0F4ZXNcIiksYz1lKFwiLi4vY29yZS9Db21tb25cIik7IWZ1bmN0aW9uKCl7by5fd2FybWluZz0uNCxvLl90b3JxdWVEYW1wZW49MSxvLl9taW5MZW5ndGg9MWUtNixvLmNyZWF0ZT1mdW5jdGlvbihlKXt2YXIgdD1lO3QuYm9keUEmJiF0LnBvaW50QSYmKHQucG9pbnRBPXt4OjAseTowfSksXG50LmJvZHlCJiYhdC5wb2ludEImJih0LnBvaW50Qj17eDowLHk6MH0pO3ZhciBuPXQuYm9keUE/ci5hZGQodC5ib2R5QS5wb3NpdGlvbix0LnBvaW50QSk6dC5wb2ludEEsbz10LmJvZHlCP3IuYWRkKHQuYm9keUIucG9zaXRpb24sdC5wb2ludEIpOnQucG9pbnRCLGk9ci5tYWduaXR1ZGUoci5zdWIobixvKSk7dC5sZW5ndGg9dm9pZCAwIT09dC5sZW5ndGg/dC5sZW5ndGg6aSx0LmlkPXQuaWR8fGMubmV4dElkKCksdC5sYWJlbD10LmxhYmVsfHxcIkNvbnN0cmFpbnRcIix0LnR5cGU9XCJjb25zdHJhaW50XCIsdC5zdGlmZm5lc3M9dC5zdGlmZm5lc3N8fCh0Lmxlbmd0aD4wPzE6LjcpLHQuZGFtcGluZz10LmRhbXBpbmd8fDAsdC5hbmd1bGFyU3RpZmZuZXNzPXQuYW5ndWxhclN0aWZmbmVzc3x8MCx0LmFuZ2xlQT10LmJvZHlBP3QuYm9keUEuYW5nbGU6dC5hbmdsZUEsdC5hbmdsZUI9dC5ib2R5Qj90LmJvZHlCLmFuZ2xlOnQuYW5nbGVCLHQucGx1Z2luPXt9O3ZhciBzPXt2aXNpYmxlOiEwLGxpbmVXaWR0aDoyLHN0cm9rZVN0eWxlOlwiI2ZmZmZmZlwiLHR5cGU6XCJsaW5lXCIsYW5jaG9yczohMH07cmV0dXJuIDA9PT10Lmxlbmd0aCYmdC5zdGlmZm5lc3M+LjE/KHMudHlwZT1cInBpblwiLHMuYW5jaG9ycz0hMSk6dC5zdGlmZm5lc3M8LjkmJihzLnR5cGU9XCJzcHJpbmdcIiksdC5yZW5kZXI9Yy5leHRlbmQocyx0LnJlbmRlciksdH0sby5wcmVTb2x2ZUFsbD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrPTEpe3ZhciBuPWVbdF0sbz1uLmNvbnN0cmFpbnRJbXB1bHNlO24uaXNTdGF0aWN8fDA9PT1vLngmJjA9PT1vLnkmJjA9PT1vLmFuZ2xlfHwobi5wb3NpdGlvbi54Kz1vLngsbi5wb3NpdGlvbi55Kz1vLnksbi5hbmdsZSs9by5hbmdsZSl9fSxvLnNvbHZlQWxsPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKz0xKXtcbnZhciBpPWVbbl0scj0haS5ib2R5QXx8aS5ib2R5QSYmaS5ib2R5QS5pc1N0YXRpYyxzPSFpLmJvZHlCfHxpLmJvZHlCJiZpLmJvZHlCLmlzU3RhdGljOyhyfHxzKSYmby5zb2x2ZShlW25dLHQpfWZvcihuPTA7bjxlLmxlbmd0aDtuKz0xKWk9ZVtuXSxyPSFpLmJvZHlBfHxpLmJvZHlBJiZpLmJvZHlBLmlzU3RhdGljLHM9IWkuYm9keUJ8fGkuYm9keUImJmkuYm9keUIuaXNTdGF0aWMscnx8c3x8by5zb2x2ZShlW25dLHQpfSxvLnNvbHZlPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5ib2R5QSxpPWUuYm9keUIscz1lLnBvaW50QSxhPWUucG9pbnRCO2lmKG58fGkpe24mJiFuLmlzU3RhdGljJiYoci5yb3RhdGUocyxuLmFuZ2xlLWUuYW5nbGVBLHMpLGUuYW5nbGVBPW4uYW5nbGUpLGkmJiFpLmlzU3RhdGljJiYoci5yb3RhdGUoYSxpLmFuZ2xlLWUuYW5nbGVCLGEpLGUuYW5nbGVCPWkuYW5nbGUpO3ZhciBsPXMsYz1hO2lmKG4mJihsPXIuYWRkKG4ucG9zaXRpb24scykpLGkmJihjPXIuYWRkKGkucG9zaXRpb24sYSkpLGwmJmMpe3ZhciBkPXIuc3ViKGwsYyksdT1yLm1hZ25pdHVkZShkKTt1PG8uX21pbkxlbmd0aCYmKHU9by5fbWluTGVuZ3RoKTt2YXIgcCxmLG0sdix5LGc9KHUtZS5sZW5ndGgpL3UseD1lLnN0aWZmbmVzczwxP2Uuc3RpZmZuZXNzKnQ6ZS5zdGlmZm5lc3MsaD1yLm11bHQoZCxnKngpLGI9KG4/bi5pbnZlcnNlTWFzczowKSsoaT9pLmludmVyc2VNYXNzOjApLHc9KG4/bi5pbnZlcnNlSW5lcnRpYTowKSsoaT9pLmludmVyc2VJbmVydGlhOjApLFM9Yit3O2lmKGUuZGFtcGluZyl7dmFyIEM9ci5jcmVhdGUoKTttPXIuZGl2KGQsdSkseT1yLnN1YihpJiZyLnN1YihpLnBvc2l0aW9uLGkucG9zaXRpb25QcmV2KXx8QyxuJiZyLnN1YihuLnBvc2l0aW9uLG4ucG9zaXRpb25QcmV2KXx8Qyksdj1yLmRvdChtLHkpfW4mJiFuLmlzU3RhdGljJiYoZj1uLmludmVyc2VNYXNzL2Isbi5jb25zdHJhaW50SW1wdWxzZS54LT1oLngqZixcbm4uY29uc3RyYWludEltcHVsc2UueS09aC55KmYsbi5wb3NpdGlvbi54LT1oLngqZixuLnBvc2l0aW9uLnktPWgueSpmLGUuZGFtcGluZyYmKG4ucG9zaXRpb25QcmV2LngtPWUuZGFtcGluZyptLngqdipmLG4ucG9zaXRpb25QcmV2LnktPWUuZGFtcGluZyptLnkqdipmKSxwPXIuY3Jvc3MocyxoKS9TKm8uX3RvcnF1ZURhbXBlbipuLmludmVyc2VJbmVydGlhKigxLWUuYW5ndWxhclN0aWZmbmVzcyksbi5jb25zdHJhaW50SW1wdWxzZS5hbmdsZS09cCxuLmFuZ2xlLT1wKSxpJiYhaS5pc1N0YXRpYyYmKGY9aS5pbnZlcnNlTWFzcy9iLGkuY29uc3RyYWludEltcHVsc2UueCs9aC54KmYsaS5jb25zdHJhaW50SW1wdWxzZS55Kz1oLnkqZixpLnBvc2l0aW9uLngrPWgueCpmLGkucG9zaXRpb24ueSs9aC55KmYsZS5kYW1waW5nJiYoaS5wb3NpdGlvblByZXYueCs9ZS5kYW1waW5nKm0ueCp2KmYsaS5wb3NpdGlvblByZXYueSs9ZS5kYW1waW5nKm0ueSp2KmYpLHA9ci5jcm9zcyhhLGgpL1Mqby5fdG9ycXVlRGFtcGVuKmkuaW52ZXJzZUluZXJ0aWEqKDEtZS5hbmd1bGFyU3RpZmZuZXNzKSxpLmNvbnN0cmFpbnRJbXB1bHNlLmFuZ2xlKz1wLGkuYW5nbGUrPXApfX19LG8ucG9zdFNvbHZlQWxsPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKXt2YXIgbj1lW3RdLGM9bi5jb25zdHJhaW50SW1wdWxzZTtpZighKG4uaXNTdGF0aWN8fDA9PT1jLngmJjA9PT1jLnkmJjA9PT1jLmFuZ2xlKSl7cy5zZXQobiwhMSk7Zm9yKHZhciBkPTA7ZDxuLnBhcnRzLmxlbmd0aDtkKyspe3ZhciB1PW4ucGFydHNbZF07aS50cmFuc2xhdGUodS52ZXJ0aWNlcyxjKSxkPjAmJih1LnBvc2l0aW9uLngrPWMueCx1LnBvc2l0aW9uLnkrPWMueSksMCE9PWMuYW5nbGUmJihpLnJvdGF0ZSh1LnZlcnRpY2VzLGMuYW5nbGUsbi5wb3NpdGlvbiksbC5yb3RhdGUodS5heGVzLGMuYW5nbGUpLFxuZD4wJiZyLnJvdGF0ZUFib3V0KHUucG9zaXRpb24sYy5hbmdsZSxuLnBvc2l0aW9uLHUucG9zaXRpb24pKSxhLnVwZGF0ZSh1LmJvdW5kcyx1LnZlcnRpY2VzLG4udmVsb2NpdHkpfWMuYW5nbGUqPW8uX3dhcm1pbmcsYy54Kj1vLl93YXJtaW5nLGMueSo9by5fd2FybWluZ319fX0oKX0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2NvcmUvU2xlZXBpbmdcIjoyMixcIi4uL2dlb21ldHJ5L0F4ZXNcIjoyNSxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6MjgsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5fV0sMTM6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIikscj1lKFwiLi4vY29yZS9TbGVlcGluZ1wiKSxzPWUoXCIuLi9jb3JlL01vdXNlXCIpLGE9ZShcIi4uL2NvcmUvRXZlbnRzXCIpLGw9ZShcIi4uL2NvbGxpc2lvbi9EZXRlY3RvclwiKSxjPWUoXCIuL0NvbnN0cmFpbnRcIiksZD1lKFwiLi4vYm9keS9Db21wb3NpdGVcIiksdT1lKFwiLi4vY29yZS9Db21tb25cIikscD1lKFwiLi4vZ2VvbWV0cnkvQm91bmRzXCIpOyFmdW5jdGlvbigpe28uY3JlYXRlPWZ1bmN0aW9uKGUsdCl7dmFyIG49KGU/ZS5tb3VzZTpudWxsKXx8KHQ/dC5tb3VzZTpudWxsKTtufHwoZSYmZS5yZW5kZXImJmUucmVuZGVyLmNhbnZhcz9uPXMuY3JlYXRlKGUucmVuZGVyLmNhbnZhcyk6dCYmdC5lbGVtZW50P249cy5jcmVhdGUodC5lbGVtZW50KToobj1zLmNyZWF0ZSgpLHUud2FybihcIk1vdXNlQ29uc3RyYWludC5jcmVhdGU6IG9wdGlvbnMubW91c2Ugd2FzIHVuZGVmaW5lZCwgb3B0aW9ucy5lbGVtZW50IHdhcyB1bmRlZmluZWQsIG1heSBub3QgZnVuY3Rpb24gYXMgZXhwZWN0ZWRcIikpKTt2YXIgaT1jLmNyZWF0ZSh7bGFiZWw6XCJNb3VzZSBDb25zdHJhaW50XCIscG9pbnRBOm4ucG9zaXRpb24scG9pbnRCOnt4OjAseTowfSxsZW5ndGg6LjAxLHN0aWZmbmVzczouMSxhbmd1bGFyU3RpZmZuZXNzOjEsXG5yZW5kZXI6e3N0cm9rZVN0eWxlOlwiIzkwRUU5MFwiLGxpbmVXaWR0aDozfX0pLHI9e3R5cGU6XCJtb3VzZUNvbnN0cmFpbnRcIixtb3VzZTpuLGVsZW1lbnQ6bnVsbCxib2R5Om51bGwsY29uc3RyYWludDppLGNvbGxpc2lvbkZpbHRlcjp7Y2F0ZWdvcnk6MSxtYXNrOjQyOTQ5NjcyOTUsZ3JvdXA6MH19LGw9dS5leHRlbmQocix0KTtyZXR1cm4gYS5vbihlLFwiYmVmb3JlVXBkYXRlXCIsZnVuY3Rpb24oKXt2YXIgdD1kLmFsbEJvZGllcyhlLndvcmxkKTtvLnVwZGF0ZShsLHQpLG8uX3RyaWdnZXJFdmVudHMobCl9KSxsfSxvLnVwZGF0ZT1mdW5jdGlvbihlLHQpe3ZhciBuPWUubW91c2Usbz1lLmNvbnN0cmFpbnQscz1lLmJvZHk7aWYoMD09PW4uYnV0dG9uKXtpZihvLmJvZHlCKXIuc2V0KG8uYm9keUIsITEpLG8ucG9pbnRBPW4ucG9zaXRpb247ZWxzZSBmb3IodmFyIGM9MDtjPHQubGVuZ3RoO2MrKylpZihzPXRbY10scC5jb250YWlucyhzLmJvdW5kcyxuLnBvc2l0aW9uKSYmbC5jYW5Db2xsaWRlKHMuY29sbGlzaW9uRmlsdGVyLGUuY29sbGlzaW9uRmlsdGVyKSlmb3IodmFyIGQ9cy5wYXJ0cy5sZW5ndGg+MT8xOjA7ZDxzLnBhcnRzLmxlbmd0aDtkKyspe3ZhciB1PXMucGFydHNbZF07aWYoaS5jb250YWlucyh1LnZlcnRpY2VzLG4ucG9zaXRpb24pKXtvLnBvaW50QT1uLnBvc2l0aW9uLG8uYm9keUI9ZS5ib2R5PXMsby5wb2ludEI9e3g6bi5wb3NpdGlvbi54LXMucG9zaXRpb24ueCx5Om4ucG9zaXRpb24ueS1zLnBvc2l0aW9uLnl9LG8uYW5nbGVCPXMuYW5nbGUsci5zZXQocywhMSksYS50cmlnZ2VyKGUsXCJzdGFydGRyYWdcIix7bW91c2U6bixib2R5OnN9KTticmVha319fWVsc2Ugby5ib2R5Qj1lLmJvZHk9bnVsbCxvLnBvaW50Qj1udWxsLHMmJmEudHJpZ2dlcihlLFwiZW5kZHJhZ1wiLHttb3VzZTpuLGJvZHk6c30pfSxvLl90cmlnZ2VyRXZlbnRzPWZ1bmN0aW9uKGUpe3ZhciB0PWUubW91c2Usbj10LnNvdXJjZUV2ZW50c1xuO24ubW91c2Vtb3ZlJiZhLnRyaWdnZXIoZSxcIm1vdXNlbW92ZVwiLHttb3VzZTp0fSksbi5tb3VzZWRvd24mJmEudHJpZ2dlcihlLFwibW91c2Vkb3duXCIse21vdXNlOnR9KSxuLm1vdXNldXAmJmEudHJpZ2dlcihlLFwibW91c2V1cFwiLHttb3VzZTp0fSkscy5jbGVhclNvdXJjZUV2ZW50cyh0KX19KCl9LHtcIi4uL2JvZHkvQ29tcG9zaXRlXCI6MixcIi4uL2NvbGxpc2lvbi9EZXRlY3RvclwiOjUsXCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi4vY29yZS9FdmVudHNcIjoxNixcIi4uL2NvcmUvTW91c2VcIjoxOSxcIi4uL2NvcmUvU2xlZXBpbmdcIjoyMixcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIjoyOSxcIi4vQ29uc3RyYWludFwiOjEyfV0sMTQ6W2Z1bmN0aW9uKGUsdCxuKXsoZnVuY3Rpb24obil7dmFyIG89e307dC5leHBvcnRzPW8sZnVuY3Rpb24oKXtvLl9uZXh0SWQ9MCxvLl9zZWVkPTAsby5fbm93U3RhcnRUaW1lPStuZXcgRGF0ZSxvLmV4dGVuZD1mdW5jdGlvbihlLHQpe3ZhciBuLGk7XCJib29sZWFuXCI9PXR5cGVvZiB0PyhuPTIsaT10KToobj0xLGk9ITApO2Zvcih2YXIgcj1uO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3ZhciBzPWFyZ3VtZW50c1tyXTtpZihzKWZvcih2YXIgYSBpbiBzKWkmJnNbYV0mJnNbYV0uY29uc3RydWN0b3I9PT1PYmplY3Q/ZVthXSYmZVthXS5jb25zdHJ1Y3RvciE9PU9iamVjdD9lW2FdPXNbYV06KGVbYV09ZVthXXx8e30sby5leHRlbmQoZVthXSxpLHNbYV0pKTplW2FdPXNbYV19cmV0dXJuIGV9LG8uY2xvbmU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5leHRlbmQoe30sdCxlKX0sby5rZXlzPWZ1bmN0aW9uKGUpe2lmKE9iamVjdC5rZXlzKXJldHVybiBPYmplY3Qua2V5cyhlKTt2YXIgdD1bXTtmb3IodmFyIG4gaW4gZSl0LnB1c2gobik7cmV0dXJuIHR9LG8udmFsdWVzPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKE9iamVjdC5rZXlzKXtcbmZvcih2YXIgbj1PYmplY3Qua2V5cyhlKSxvPTA7bzxuLmxlbmd0aDtvKyspdC5wdXNoKGVbbltvXV0pO3JldHVybiB0fWZvcih2YXIgaSBpbiBlKXQucHVzaChlW2ldKTtyZXR1cm4gdH0sby5nZXQ9ZnVuY3Rpb24oZSx0LG4sbyl7dD10LnNwbGl0KFwiLlwiKS5zbGljZShuLG8pO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSs9MSllPWVbdFtpXV07cmV0dXJuIGV9LG8uc2V0PWZ1bmN0aW9uKGUsdCxuLGkscil7dmFyIHM9dC5zcGxpdChcIi5cIikuc2xpY2UoaSxyKTtyZXR1cm4gby5nZXQoZSx0LDAsLTEpW3Nbcy5sZW5ndGgtMV1dPW4sbn0sby5zaHVmZmxlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmxlbmd0aC0xO3Q+MDt0LS0pe3ZhciBuPU1hdGguZmxvb3Ioby5yYW5kb20oKSoodCsxKSksaT1lW3RdO2VbdF09ZVtuXSxlW25dPWl9cmV0dXJuIGV9LG8uY2hvb3NlPWZ1bmN0aW9uKGUpe3JldHVybiBlW01hdGguZmxvb3Ioby5yYW5kb20oKSplLmxlbmd0aCldfSxvLmlzRWxlbWVudD1mdW5jdGlvbihlKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgSFRNTEVsZW1lbnQ/ZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50OiEhKGUmJmUubm9kZVR5cGUmJmUubm9kZU5hbWUpfSxvLmlzQXJyYXk9ZnVuY3Rpb24oZSl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpfSxvLmlzRnVuY3Rpb249ZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZX0sby5pc1BsYWluT2JqZWN0PWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmNvbnN0cnVjdG9yPT09T2JqZWN0fSxvLmlzU3RyaW5nPWZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBTdHJpbmddXCI9PT10b1N0cmluZy5jYWxsKGUpfSxvLmNsYW1wPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZTx0P3Q6ZT5uP246ZX0sby5zaWduPWZ1bmN0aW9uKGUpe3JldHVybiBlPDA/LTE6MX0sby5ub3c9ZnVuY3Rpb24oKXtcbmlmKHdpbmRvdy5wZXJmb3JtYW5jZSl7aWYod2luZG93LnBlcmZvcm1hbmNlLm5vdylyZXR1cm4gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpO2lmKHdpbmRvdy5wZXJmb3JtYW5jZS53ZWJraXROb3cpcmV0dXJuIHdpbmRvdy5wZXJmb3JtYW5jZS53ZWJraXROb3coKX1yZXR1cm4gbmV3IERhdGUtby5fbm93U3RhcnRUaW1lfSxvLnJhbmRvbT1mdW5jdGlvbihlLG4pe3JldHVybiBlPXZvaWQgMCE9PWU/ZTowLG49dm9pZCAwIT09bj9uOjEsZSt0KCkqKG4tZSl9O3ZhciB0PWZ1bmN0aW9uKCl7cmV0dXJuIG8uX3NlZWQ9KDkzMDEqby5fc2VlZCs0OTI5NyklMjMzMjgwLG8uX3NlZWQvMjMzMjgwfTtvLmNvbG9yVG9OdW1iZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZS5yZXBsYWNlKFwiI1wiLFwiXCIpLDM9PWUubGVuZ3RoJiYoZT1lLmNoYXJBdCgwKStlLmNoYXJBdCgwKStlLmNoYXJBdCgxKStlLmNoYXJBdCgxKStlLmNoYXJBdCgyKStlLmNoYXJBdCgyKSkscGFyc2VJbnQoZSwxNil9LG8ubG9nTGV2ZWw9MSxvLmxvZz1mdW5jdGlvbigpe2NvbnNvbGUmJm8ubG9nTGV2ZWw+MCYmby5sb2dMZXZlbDw9MyYmY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSxbXCJtYXR0ZXItanM6XCJdLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSl9LG8uaW5mbz1mdW5jdGlvbigpe2NvbnNvbGUmJm8ubG9nTGV2ZWw+MCYmby5sb2dMZXZlbDw9MiYmY29uc29sZS5pbmZvLmFwcGx5KGNvbnNvbGUsW1wibWF0dGVyLWpzOlwiXS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSkpfSxvLndhcm49ZnVuY3Rpb24oKXtjb25zb2xlJiZvLmxvZ0xldmVsPjAmJm8ubG9nTGV2ZWw8PTMmJmNvbnNvbGUud2Fybi5hcHBseShjb25zb2xlLFtcIm1hdHRlci1qczpcIl0uY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpKX0sby5uZXh0SWQ9ZnVuY3Rpb24oKXtyZXR1cm4gby5fbmV4dElkKyt9LFxuby5pbmRleE9mPWZ1bmN0aW9uKGUsdCl7aWYoZS5pbmRleE9mKXJldHVybiBlLmluZGV4T2YodCk7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspaWYoZVtuXT09PXQpcmV0dXJuIG47cmV0dXJuLTF9LG8ubWFwPWZ1bmN0aW9uKGUsdCl7aWYoZS5tYXApcmV0dXJuIGUubWFwKHQpO2Zvcih2YXIgbj1bXSxvPTA7bzxlLmxlbmd0aDtvKz0xKW4ucHVzaCh0KGVbb10pKTtyZXR1cm4gbn0sby50b3BvbG9naWNhbFNvcnQ9ZnVuY3Rpb24oZSl7dmFyIHQ9W10sbj1bXSxpPVtdO2Zvcih2YXIgciBpbiBlKW5bcl18fGlbcl18fG8uX3RvcG9sb2dpY2FsU29ydChyLG4saSxlLHQpO3JldHVybiB0fSxvLl90b3BvbG9naWNhbFNvcnQ9ZnVuY3Rpb24oZSx0LG4saSxyKXt2YXIgcz1pW2VdfHxbXTtuW2VdPSEwO2Zvcih2YXIgYT0wO2E8cy5sZW5ndGg7YSs9MSl7dmFyIGw9c1thXTtuW2xdfHwodFtsXXx8by5fdG9wb2xvZ2ljYWxTb3J0KGwsdCxuLGkscikpfW5bZV09ITEsdFtlXT0hMCxyLnB1c2goZSl9LG8uY2hhaW49ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kz0xKXt2YXIgbj1hcmd1bWVudHNbdF07bi5fY2hhaW5lZD9lLnB1c2guYXBwbHkoZSxuLl9jaGFpbmVkKTplLnB1c2gobil9dmFyIG89ZnVuY3Rpb24oKXtmb3IodmFyIHQsbj1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCksbz0wLGk9YXJndW1lbnRzLmxlbmd0aDtvPGk7bysrKW5bb109YXJndW1lbnRzW29dO2ZvcihvPTA7bzxlLmxlbmd0aDtvKz0xKXt2YXIgcj1lW29dLmFwcGx5KHQsbik7dm9pZCAwIT09ciYmKHQ9cil9cmV0dXJuIHR9O3JldHVybiBvLl9jaGFpbmVkPWUsb30sby5jaGFpblBhdGhCZWZvcmU9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBvLnNldChlLHQsby5jaGFpbihuLG8uZ2V0KGUsdCkpKX0sby5jaGFpblBhdGhBZnRlcj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG8uc2V0KGUsdCxvLmNoYWluKG8uZ2V0KGUsdCksbikpfSxcbm8uX3JlcXVpcmVHbG9iYWw9ZnVuY3Rpb24odCxvKXtyZXR1cm4oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3dbdF06dm9pZCAwIT09bj9uW3RdOm51bGwpfHxlKG8pfX0oKX0pLmNhbGwodGhpcyxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9KX0se31dLDE1OltmdW5jdGlvbihlLHQsbil7dmFyIG89e307dC5leHBvcnRzPW87dmFyIGk9ZShcIi4uL2JvZHkvV29ybGRcIikscj1lKFwiLi9TbGVlcGluZ1wiKSxzPWUoXCIuLi9jb2xsaXNpb24vUmVzb2x2ZXJcIiksYT1lKFwiLi4vcmVuZGVyL1JlbmRlclwiKSxsPWUoXCIuLi9jb2xsaXNpb24vUGFpcnNcIiksYz0oZShcIi4vTWV0cmljc1wiKSxlKFwiLi4vY29sbGlzaW9uL0dyaWRcIikpLGQ9ZShcIi4vRXZlbnRzXCIpLHU9ZShcIi4uL2JvZHkvQ29tcG9zaXRlXCIpLHA9ZShcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiKSxmPWUoXCIuL0NvbW1vblwiKSxtPWUoXCIuLi9ib2R5L0JvZHlcIik7IWZ1bmN0aW9uKCl7by5jcmVhdGU9ZnVuY3Rpb24oZSx0KXt0PWYuaXNFbGVtZW50KGUpP3Q6ZSxlPWYuaXNFbGVtZW50KGUpP2U6bnVsbCx0PXR8fHt9LChlfHx0LnJlbmRlcikmJmYud2FybihcIkVuZ2luZS5jcmVhdGU6IGVuZ2luZS5yZW5kZXIgaXMgZGVwcmVjYXRlZCAoc2VlIGRvY3MpXCIpO3ZhciBuPXtwb3NpdGlvbkl0ZXJhdGlvbnM6Nix2ZWxvY2l0eUl0ZXJhdGlvbnM6NCxjb25zdHJhaW50SXRlcmF0aW9uczoyLGVuYWJsZVNsZWVwaW5nOiExLGV2ZW50czpbXSxwbHVnaW46e30sdGltaW5nOnt0aW1lc3RhbXA6MCx0aW1lU2NhbGU6MX0sYnJvYWRwaGFzZTp7Y29udHJvbGxlcjpjfX0sbz1mLmV4dGVuZChuLHQpO2lmKGV8fG8ucmVuZGVyKXt2YXIgcj17ZWxlbWVudDplLGNvbnRyb2xsZXI6YX07by5yZW5kZXI9Zi5leHRlbmQocixvLnJlbmRlcil9XG5yZXR1cm4gby5yZW5kZXImJm8ucmVuZGVyLmNvbnRyb2xsZXImJihvLnJlbmRlcj1vLnJlbmRlci5jb250cm9sbGVyLmNyZWF0ZShvLnJlbmRlcikpLG8ucmVuZGVyJiYoby5yZW5kZXIuZW5naW5lPW8pLG8ud29ybGQ9dC53b3JsZHx8aS5jcmVhdGUoby53b3JsZCksby5wYWlycz1sLmNyZWF0ZSgpLG8uYnJvYWRwaGFzZT1vLmJyb2FkcGhhc2UuY29udHJvbGxlci5jcmVhdGUoby5icm9hZHBoYXNlKSxvLm1ldHJpY3M9by5tZXRyaWNzfHx7ZXh0ZW5kZWQ6ITF9LG99LG8udXBkYXRlPWZ1bmN0aW9uKGUsdCxuKXt0PXR8fDFlMy82MCxuPW58fDE7dmFyIGksYT1lLndvcmxkLGM9ZS50aW1pbmcsZj1lLmJyb2FkcGhhc2UsbT1bXTtjLnRpbWVzdGFtcCs9dCpjLnRpbWVTY2FsZTt2YXIgdj17dGltZXN0YW1wOmMudGltZXN0YW1wfTtkLnRyaWdnZXIoZSxcImJlZm9yZVVwZGF0ZVwiLHYpO3ZhciB5PXUuYWxsQm9kaWVzKGEpLGc9dS5hbGxDb25zdHJhaW50cyhhKTtmb3IoZS5lbmFibGVTbGVlcGluZyYmci51cGRhdGUoeSxjLnRpbWVTY2FsZSksby5fYm9kaWVzQXBwbHlHcmF2aXR5KHksYS5ncmF2aXR5KSxvLl9ib2RpZXNVcGRhdGUoeSx0LGMudGltZVNjYWxlLG4sYS5ib3VuZHMpLHAucHJlU29sdmVBbGwoeSksaT0wO2k8ZS5jb25zdHJhaW50SXRlcmF0aW9ucztpKyspcC5zb2x2ZUFsbChnLGMudGltZVNjYWxlKTtwLnBvc3RTb2x2ZUFsbCh5KSxmLmNvbnRyb2xsZXI/KGEuaXNNb2RpZmllZCYmZi5jb250cm9sbGVyLmNsZWFyKGYpLGYuY29udHJvbGxlci51cGRhdGUoZix5LGUsYS5pc01vZGlmaWVkKSxtPWYucGFpcnNMaXN0KTptPXksYS5pc01vZGlmaWVkJiZ1LnNldE1vZGlmaWVkKGEsITEsITEsITApO3ZhciB4PWYuZGV0ZWN0b3IobSxlKSxoPWUucGFpcnMsYj1jLnRpbWVzdGFtcDtmb3IobC51cGRhdGUoaCx4LGIpLGwucmVtb3ZlT2xkKGgsYiksZS5lbmFibGVTbGVlcGluZyYmci5hZnRlckNvbGxpc2lvbnMoaC5saXN0LGMudGltZVNjYWxlKSxcbmguY29sbGlzaW9uU3RhcnQubGVuZ3RoPjAmJmQudHJpZ2dlcihlLFwiY29sbGlzaW9uU3RhcnRcIix7cGFpcnM6aC5jb2xsaXNpb25TdGFydH0pLHMucHJlU29sdmVQb3NpdGlvbihoLmxpc3QpLGk9MDtpPGUucG9zaXRpb25JdGVyYXRpb25zO2krKylzLnNvbHZlUG9zaXRpb24oaC5saXN0LGMudGltZVNjYWxlKTtmb3Iocy5wb3N0U29sdmVQb3NpdGlvbih5KSxwLnByZVNvbHZlQWxsKHkpLGk9MDtpPGUuY29uc3RyYWludEl0ZXJhdGlvbnM7aSsrKXAuc29sdmVBbGwoZyxjLnRpbWVTY2FsZSk7Zm9yKHAucG9zdFNvbHZlQWxsKHkpLHMucHJlU29sdmVWZWxvY2l0eShoLmxpc3QpLGk9MDtpPGUudmVsb2NpdHlJdGVyYXRpb25zO2krKylzLnNvbHZlVmVsb2NpdHkoaC5saXN0LGMudGltZVNjYWxlKTtyZXR1cm4gaC5jb2xsaXNpb25BY3RpdmUubGVuZ3RoPjAmJmQudHJpZ2dlcihlLFwiY29sbGlzaW9uQWN0aXZlXCIse3BhaXJzOmguY29sbGlzaW9uQWN0aXZlfSksaC5jb2xsaXNpb25FbmQubGVuZ3RoPjAmJmQudHJpZ2dlcihlLFwiY29sbGlzaW9uRW5kXCIse3BhaXJzOmguY29sbGlzaW9uRW5kfSksby5fYm9kaWVzQ2xlYXJGb3JjZXMoeSksZC50cmlnZ2VyKGUsXCJhZnRlclVwZGF0ZVwiLHYpLGV9LG8ubWVyZ2U9ZnVuY3Rpb24oZSx0KXtpZihmLmV4dGVuZChlLHQpLHQud29ybGQpe2Uud29ybGQ9dC53b3JsZCxvLmNsZWFyKGUpO2Zvcih2YXIgbj11LmFsbEJvZGllcyhlLndvcmxkKSxpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciBzPW5baV07ci5zZXQocywhMSkscy5pZD1mLm5leHRJZCgpfX19LG8uY2xlYXI9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS53b3JsZDtsLmNsZWFyKGUucGFpcnMpO3ZhciBuPWUuYnJvYWRwaGFzZTtpZihuLmNvbnRyb2xsZXIpe3ZhciBvPXUuYWxsQm9kaWVzKHQpO24uY29udHJvbGxlci5jbGVhcihuKSxuLmNvbnRyb2xsZXIudXBkYXRlKG4sbyxlLCEwKX19LG8uX2JvZGllc0NsZWFyRm9yY2VzPWZ1bmN0aW9uKGUpe1xuZm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe3ZhciBuPWVbdF07bi5mb3JjZS54PTAsbi5mb3JjZS55PTAsbi50b3JxdWU9MH19LG8uX2JvZGllc0FwcGx5R3Jhdml0eT1mdW5jdGlvbihlLHQpe3ZhciBuPXZvaWQgMCE9PXQuc2NhbGU/dC5zY2FsZTouMDAxO2lmKCgwIT09dC54fHwwIT09dC55KSYmMCE9PW4pZm9yKHZhciBvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBpPWVbb107aS5pc1N0YXRpY3x8aS5pc1NsZWVwaW5nfHwoaS5mb3JjZS55Kz1pLm1hc3MqdC55Km4saS5mb3JjZS54Kz1pLm1hc3MqdC54Km4pfX0sby5fYm9kaWVzVXBkYXRlPWZ1bmN0aW9uKGUsdCxuLG8saSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBzPWVbcl07cy5pc1N0YXRpY3x8cy5pc1NsZWVwaW5nfHxtLnVwZGF0ZShzLHQsbixvKX19fSgpfSx7XCIuLi9ib2R5L0JvZHlcIjoxLFwiLi4vYm9keS9Db21wb3NpdGVcIjoyLFwiLi4vYm9keS9Xb3JsZFwiOjMsXCIuLi9jb2xsaXNpb24vR3JpZFwiOjYsXCIuLi9jb2xsaXNpb24vUGFpcnNcIjo4LFwiLi4vY29sbGlzaW9uL1Jlc29sdmVyXCI6MTAsXCIuLi9jb25zdHJhaW50L0NvbnN0cmFpbnRcIjoxMixcIi4uL3JlbmRlci9SZW5kZXJcIjozMSxcIi4vQ29tbW9uXCI6MTQsXCIuL0V2ZW50c1wiOjE2LFwiLi9NZXRyaWNzXCI6MTgsXCIuL1NsZWVwaW5nXCI6MjJ9XSwxNjpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vO3ZhciBpPWUoXCIuL0NvbW1vblwiKTshZnVuY3Rpb24oKXtvLm9uPWZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIG8saT10LnNwbGl0KFwiIFwiKSxyPTA7cjxpLmxlbmd0aDtyKyspbz1pW3JdLGUuZXZlbnRzPWUuZXZlbnRzfHx7fSxlLmV2ZW50c1tvXT1lLmV2ZW50c1tvXXx8W10sZS5ldmVudHNbb10ucHVzaChuKTtyZXR1cm4gbn0sby5vZmY9ZnVuY3Rpb24oZSx0LG4pe2lmKCF0KXJldHVybiB2b2lkKGUuZXZlbnRzPXt9KTtcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYobj10LHQ9aS5rZXlzKGUuZXZlbnRzKS5qb2luKFwiIFwiKSlcbjtmb3IodmFyIG89dC5zcGxpdChcIiBcIikscj0wO3I8by5sZW5ndGg7cisrKXt2YXIgcz1lLmV2ZW50c1tvW3JdXSxhPVtdO2lmKG4mJnMpZm9yKHZhciBsPTA7bDxzLmxlbmd0aDtsKyspc1tsXSE9PW4mJmEucHVzaChzW2xdKTtlLmV2ZW50c1tvW3JdXT1hfX0sby50cmlnZ2VyPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbyxyLHMsYTtpZihlLmV2ZW50cyl7bnx8KG49e30pLG89dC5zcGxpdChcIiBcIik7Zm9yKHZhciBsPTA7bDxvLmxlbmd0aDtsKyspaWYocj1vW2xdLHM9ZS5ldmVudHNbcl0pe2E9aS5jbG9uZShuLCExKSxhLm5hbWU9cixhLnNvdXJjZT1lO2Zvcih2YXIgYz0wO2M8cy5sZW5ndGg7YysrKXNbY10uYXBwbHkoZSxbYV0pfX19fSgpfSx7XCIuL0NvbW1vblwiOjE0fV0sMTc6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9QbHVnaW5cIikscj1lKFwiLi9Db21tb25cIik7IWZ1bmN0aW9uKCl7by5uYW1lPVwibWF0dGVyLWpzXCIsby52ZXJzaW9uPVwiMC4xNC4yXCIsby51c2VzPVtdLG8udXNlZD1bXSxvLnVzZT1mdW5jdGlvbigpe2kudXNlKG8sQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSl9LG8uYmVmb3JlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9ZS5yZXBsYWNlKC9eTWF0dGVyLi8sXCJcIiksci5jaGFpblBhdGhCZWZvcmUobyxlLHQpfSxvLmFmdGVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9ZS5yZXBsYWNlKC9eTWF0dGVyLi8sXCJcIiksci5jaGFpblBhdGhBZnRlcihvLGUsdCl9fSgpfSx7XCIuL0NvbW1vblwiOjE0LFwiLi9QbHVnaW5cIjoyMH1dLDE4OltmdW5jdGlvbihlLHQsbil7fSx7XCIuLi9ib2R5L0NvbXBvc2l0ZVwiOjIsXCIuL0NvbW1vblwiOjE0fV0sMTk6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi4vY29yZS9Db21tb25cIik7IWZ1bmN0aW9uKCl7by5jcmVhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9e31cbjtyZXR1cm4gZXx8aS5sb2coXCJNb3VzZS5jcmVhdGU6IGVsZW1lbnQgd2FzIHVuZGVmaW5lZCwgZGVmYXVsdGluZyB0byBkb2N1bWVudC5ib2R5XCIsXCJ3YXJuXCIpLHQuZWxlbWVudD1lfHxkb2N1bWVudC5ib2R5LHQuYWJzb2x1dGU9e3g6MCx5OjB9LHQucG9zaXRpb249e3g6MCx5OjB9LHQubW91c2Vkb3duUG9zaXRpb249e3g6MCx5OjB9LHQubW91c2V1cFBvc2l0aW9uPXt4OjAseTowfSx0Lm9mZnNldD17eDowLHk6MH0sdC5zY2FsZT17eDoxLHk6MX0sdC53aGVlbERlbHRhPTAsdC5idXR0b249LTEsdC5waXhlbFJhdGlvPXQuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBpeGVsLXJhdGlvXCIpfHwxLHQuc291cmNlRXZlbnRzPXttb3VzZW1vdmU6bnVsbCxtb3VzZWRvd246bnVsbCxtb3VzZXVwOm51bGwsbW91c2V3aGVlbDpudWxsfSx0Lm1vdXNlbW92ZT1mdW5jdGlvbihlKXt2YXIgbj1vLl9nZXRSZWxhdGl2ZU1vdXNlUG9zaXRpb24oZSx0LmVsZW1lbnQsdC5waXhlbFJhdGlvKTtlLmNoYW5nZWRUb3VjaGVzJiYodC5idXR0b249MCxlLnByZXZlbnREZWZhdWx0KCkpLHQuYWJzb2x1dGUueD1uLngsdC5hYnNvbHV0ZS55PW4ueSx0LnBvc2l0aW9uLng9dC5hYnNvbHV0ZS54KnQuc2NhbGUueCt0Lm9mZnNldC54LHQucG9zaXRpb24ueT10LmFic29sdXRlLnkqdC5zY2FsZS55K3Qub2Zmc2V0LnksdC5zb3VyY2VFdmVudHMubW91c2Vtb3ZlPWV9LHQubW91c2Vkb3duPWZ1bmN0aW9uKGUpe3ZhciBuPW8uX2dldFJlbGF0aXZlTW91c2VQb3NpdGlvbihlLHQuZWxlbWVudCx0LnBpeGVsUmF0aW8pO2UuY2hhbmdlZFRvdWNoZXM/KHQuYnV0dG9uPTAsZS5wcmV2ZW50RGVmYXVsdCgpKTp0LmJ1dHRvbj1lLmJ1dHRvbix0LmFic29sdXRlLng9bi54LHQuYWJzb2x1dGUueT1uLnksdC5wb3NpdGlvbi54PXQuYWJzb2x1dGUueCp0LnNjYWxlLngrdC5vZmZzZXQueCx0LnBvc2l0aW9uLnk9dC5hYnNvbHV0ZS55KnQuc2NhbGUueSt0Lm9mZnNldC55LFxudC5tb3VzZWRvd25Qb3NpdGlvbi54PXQucG9zaXRpb24ueCx0Lm1vdXNlZG93blBvc2l0aW9uLnk9dC5wb3NpdGlvbi55LHQuc291cmNlRXZlbnRzLm1vdXNlZG93bj1lfSx0Lm1vdXNldXA9ZnVuY3Rpb24oZSl7dmFyIG49by5fZ2V0UmVsYXRpdmVNb3VzZVBvc2l0aW9uKGUsdC5lbGVtZW50LHQucGl4ZWxSYXRpbyk7ZS5jaGFuZ2VkVG91Y2hlcyYmZS5wcmV2ZW50RGVmYXVsdCgpLHQuYnV0dG9uPS0xLHQuYWJzb2x1dGUueD1uLngsdC5hYnNvbHV0ZS55PW4ueSx0LnBvc2l0aW9uLng9dC5hYnNvbHV0ZS54KnQuc2NhbGUueCt0Lm9mZnNldC54LHQucG9zaXRpb24ueT10LmFic29sdXRlLnkqdC5zY2FsZS55K3Qub2Zmc2V0LnksdC5tb3VzZXVwUG9zaXRpb24ueD10LnBvc2l0aW9uLngsdC5tb3VzZXVwUG9zaXRpb24ueT10LnBvc2l0aW9uLnksdC5zb3VyY2VFdmVudHMubW91c2V1cD1lfSx0Lm1vdXNld2hlZWw9ZnVuY3Rpb24oZSl7dC53aGVlbERlbHRhPU1hdGgubWF4KC0xLE1hdGgubWluKDEsZS53aGVlbERlbHRhfHwtZS5kZXRhaWwpKSxlLnByZXZlbnREZWZhdWx0KCl9LG8uc2V0RWxlbWVudCh0LHQuZWxlbWVudCksdH0sby5zZXRFbGVtZW50PWZ1bmN0aW9uKGUsdCl7ZS5lbGVtZW50PXQsdC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsZS5tb3VzZW1vdmUpLHQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGUubW91c2Vkb3duKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsZS5tb3VzZXVwKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXdoZWVsXCIsZS5tb3VzZXdoZWVsKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Nb3VzZVNjcm9sbFwiLGUubW91c2V3aGVlbCksdC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsZS5tb3VzZW1vdmUpLHQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixlLm1vdXNlZG93biksdC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIixlLm1vdXNldXApfSxcbm8uY2xlYXJTb3VyY2VFdmVudHM9ZnVuY3Rpb24oZSl7ZS5zb3VyY2VFdmVudHMubW91c2Vtb3ZlPW51bGwsZS5zb3VyY2VFdmVudHMubW91c2Vkb3duPW51bGwsZS5zb3VyY2VFdmVudHMubW91c2V1cD1udWxsLGUuc291cmNlRXZlbnRzLm1vdXNld2hlZWw9bnVsbCxlLndoZWVsRGVsdGE9MH0sby5zZXRPZmZzZXQ9ZnVuY3Rpb24oZSx0KXtlLm9mZnNldC54PXQueCxlLm9mZnNldC55PXQueSxlLnBvc2l0aW9uLng9ZS5hYnNvbHV0ZS54KmUuc2NhbGUueCtlLm9mZnNldC54LGUucG9zaXRpb24ueT1lLmFic29sdXRlLnkqZS5zY2FsZS55K2Uub2Zmc2V0Lnl9LG8uc2V0U2NhbGU9ZnVuY3Rpb24oZSx0KXtlLnNjYWxlLng9dC54LGUuc2NhbGUueT10LnksZS5wb3NpdGlvbi54PWUuYWJzb2x1dGUueCplLnNjYWxlLngrZS5vZmZzZXQueCxlLnBvc2l0aW9uLnk9ZS5hYnNvbHV0ZS55KmUuc2NhbGUueStlLm9mZnNldC55fSxvLl9nZXRSZWxhdGl2ZU1vdXNlUG9zaXRpb249ZnVuY3Rpb24oZSx0LG4pe3ZhciBvLGkscj10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fHxkb2N1bWVudC5ib2R5LnBhcmVudE5vZGV8fGRvY3VtZW50LmJvZHksYT12b2lkIDAhPT13aW5kb3cucGFnZVhPZmZzZXQ/d2luZG93LnBhZ2VYT2Zmc2V0OnMuc2Nyb2xsTGVmdCxsPXZvaWQgMCE9PXdpbmRvdy5wYWdlWU9mZnNldD93aW5kb3cucGFnZVlPZmZzZXQ6cy5zY3JvbGxUb3AsYz1lLmNoYW5nZWRUb3VjaGVzO3JldHVybiBjPyhvPWNbMF0ucGFnZVgtci5sZWZ0LWEsaT1jWzBdLnBhZ2VZLXIudG9wLWwpOihvPWUucGFnZVgtci5sZWZ0LWEsaT1lLnBhZ2VZLXIudG9wLWwpLHt4Om8vKHQuY2xpZW50V2lkdGgvKHQud2lkdGh8fHQuY2xpZW50V2lkdGgpKm4pLHk6aS8odC5jbGllbnRIZWlnaHQvKHQuaGVpZ2h0fHx0LmNsaWVudEhlaWdodCkqbil9fX0oKX0se1wiLi4vY29yZS9Db21tb25cIjoxNH1dLDIwOltmdW5jdGlvbihlLHQsbil7XG52YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9Db21tb25cIik7IWZ1bmN0aW9uKCl7by5fcmVnaXN0cnk9e30sby5yZWdpc3Rlcj1mdW5jdGlvbihlKXtpZihvLmlzUGx1Z2luKGUpfHxpLndhcm4oXCJQbHVnaW4ucmVnaXN0ZXI6XCIsby50b1N0cmluZyhlKSxcImRvZXMgbm90IGltcGxlbWVudCBhbGwgcmVxdWlyZWQgZmllbGRzLlwiKSxlLm5hbWUgaW4gby5fcmVnaXN0cnkpe3ZhciB0PW8uX3JlZ2lzdHJ5W2UubmFtZV0sbj1vLnZlcnNpb25QYXJzZShlLnZlcnNpb24pLm51bWJlcixyPW8udmVyc2lvblBhcnNlKHQudmVyc2lvbikubnVtYmVyO24+cj8oaS53YXJuKFwiUGx1Z2luLnJlZ2lzdGVyOlwiLG8udG9TdHJpbmcodCksXCJ3YXMgdXBncmFkZWQgdG9cIixvLnRvU3RyaW5nKGUpKSxvLl9yZWdpc3RyeVtlLm5hbWVdPWUpOm48cj9pLndhcm4oXCJQbHVnaW4ucmVnaXN0ZXI6XCIsby50b1N0cmluZyh0KSxcImNhbiBub3QgYmUgZG93bmdyYWRlZCB0b1wiLG8udG9TdHJpbmcoZSkpOmUhPT10JiZpLndhcm4oXCJQbHVnaW4ucmVnaXN0ZXI6XCIsby50b1N0cmluZyhlKSxcImlzIGFscmVhZHkgcmVnaXN0ZXJlZCB0byBkaWZmZXJlbnQgcGx1Z2luIG9iamVjdFwiKX1lbHNlIG8uX3JlZ2lzdHJ5W2UubmFtZV09ZTtyZXR1cm4gZX0sby5yZXNvbHZlPWZ1bmN0aW9uKGUpe3JldHVybiBvLl9yZWdpc3RyeVtvLmRlcGVuZGVuY3lQYXJzZShlKS5uYW1lXX0sby50b1N0cmluZz1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT9lOihlLm5hbWV8fFwiYW5vbnltb3VzXCIpK1wiQFwiKyhlLnZlcnNpb258fGUucmFuZ2V8fFwiMC4wLjBcIil9LG8uaXNQbHVnaW49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUubmFtZSYmZS52ZXJzaW9uJiZlLmluc3RhbGx9LG8uaXNVc2VkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUudXNlZC5pbmRleE9mKHQpPi0xfSxvLmlzRm9yPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5mb3ImJm8uZGVwZW5kZW5jeVBhcnNlKGUuZm9yKVxuO3JldHVybiFlLmZvcnx8dC5uYW1lPT09bi5uYW1lJiZvLnZlcnNpb25TYXRpc2ZpZXModC52ZXJzaW9uLG4ucmFuZ2UpfSxvLnVzZT1mdW5jdGlvbihlLHQpe2lmKGUudXNlcz0oZS51c2VzfHxbXSkuY29uY2F0KHR8fFtdKSwwPT09ZS51c2VzLmxlbmd0aClyZXR1cm4gdm9pZCBpLndhcm4oXCJQbHVnaW4udXNlOlwiLG8udG9TdHJpbmcoZSksXCJkb2VzIG5vdCBzcGVjaWZ5IGFueSBkZXBlbmRlbmNpZXMgdG8gaW5zdGFsbC5cIik7Zm9yKHZhciBuPW8uZGVwZW5kZW5jaWVzKGUpLHI9aS50b3BvbG9naWNhbFNvcnQobikscz1bXSxhPTA7YTxyLmxlbmd0aDthKz0xKWlmKHJbYV0hPT1lLm5hbWUpe3ZhciBsPW8ucmVzb2x2ZShyW2FdKTtsP28uaXNVc2VkKGUsbC5uYW1lKXx8KG8uaXNGb3IobCxlKXx8KGkud2FybihcIlBsdWdpbi51c2U6XCIsby50b1N0cmluZyhsKSxcImlzIGZvclwiLGwuZm9yLFwiYnV0IGluc3RhbGxlZCBvblwiLG8udG9TdHJpbmcoZSkrXCIuXCIpLGwuX3dhcm5lZD0hMCksbC5pbnN0YWxsP2wuaW5zdGFsbChlKTooaS53YXJuKFwiUGx1Z2luLnVzZTpcIixvLnRvU3RyaW5nKGwpLFwiZG9lcyBub3Qgc3BlY2lmeSBhbiBpbnN0YWxsIGZ1bmN0aW9uLlwiKSxsLl93YXJuZWQ9ITApLGwuX3dhcm5lZD8ocy5wdXNoKFwi8J+UtiBcIitvLnRvU3RyaW5nKGwpKSxkZWxldGUgbC5fd2FybmVkKTpzLnB1c2goXCLinIUgXCIrby50b1N0cmluZyhsKSksZS51c2VkLnB1c2gobC5uYW1lKSk6cy5wdXNoKFwi4p2MIFwiK3JbYV0pfXMubGVuZ3RoPjAmJmkuaW5mbyhzLmpvaW4oXCIgIFwiKSl9LG8uZGVwZW5kZW5jaWVzPWZ1bmN0aW9uKGUsdCl7dmFyIG49by5kZXBlbmRlbmN5UGFyc2UoZSkscj1uLm5hbWU7aWYodD10fHx7fSwhKHIgaW4gdCkpe2U9by5yZXNvbHZlKGUpfHxlLHRbcl09aS5tYXAoZS51c2VzfHxbXSxmdW5jdGlvbih0KXtvLmlzUGx1Z2luKHQpJiZvLnJlZ2lzdGVyKHQpO3ZhciByPW8uZGVwZW5kZW5jeVBhcnNlKHQpLHM9by5yZXNvbHZlKHQpXG47cmV0dXJuIHMmJiFvLnZlcnNpb25TYXRpc2ZpZXMocy52ZXJzaW9uLHIucmFuZ2UpPyhpLndhcm4oXCJQbHVnaW4uZGVwZW5kZW5jaWVzOlwiLG8udG9TdHJpbmcocyksXCJkb2VzIG5vdCBzYXRpc2Z5XCIsby50b1N0cmluZyhyKSxcInVzZWQgYnlcIixvLnRvU3RyaW5nKG4pK1wiLlwiKSxzLl93YXJuZWQ9ITAsZS5fd2FybmVkPSEwKTpzfHwoaS53YXJuKFwiUGx1Z2luLmRlcGVuZGVuY2llczpcIixvLnRvU3RyaW5nKHQpLFwidXNlZCBieVwiLG8udG9TdHJpbmcobiksXCJjb3VsZCBub3QgYmUgcmVzb2x2ZWQuXCIpLGUuX3dhcm5lZD0hMCksci5uYW1lfSk7Zm9yKHZhciBzPTA7czx0W3JdLmxlbmd0aDtzKz0xKW8uZGVwZW5kZW5jaWVzKHRbcl1bc10sdCk7cmV0dXJuIHR9fSxvLmRlcGVuZGVuY3lQYXJzZT1mdW5jdGlvbihlKXtpZihpLmlzU3RyaW5nKGUpKXtyZXR1cm4vXltcXHctXSsoQChcXCp8W1xcXn5dP1xcZCtcXC5cXGQrXFwuXFxkKygtWzAtOUEtWmEtei1dKyk/KSk/JC8udGVzdChlKXx8aS53YXJuKFwiUGx1Z2luLmRlcGVuZGVuY3lQYXJzZTpcIixlLFwiaXMgbm90IGEgdmFsaWQgZGVwZW5kZW5jeSBzdHJpbmcuXCIpLHtuYW1lOmUuc3BsaXQoXCJAXCIpWzBdLHJhbmdlOmUuc3BsaXQoXCJAXCIpWzFdfHxcIipcIn19cmV0dXJue25hbWU6ZS5uYW1lLHJhbmdlOmUucmFuZ2V8fGUudmVyc2lvbn19LG8udmVyc2lvblBhcnNlPWZ1bmN0aW9uKGUpey9eXFwqfFtcXF5+XT9cXGQrXFwuXFxkK1xcLlxcZCsoLVswLTlBLVphLXotXSspPyQvLnRlc3QoZSl8fGkud2FybihcIlBsdWdpbi52ZXJzaW9uUGFyc2U6XCIsZSxcImlzIG5vdCBhIHZhbGlkIHZlcnNpb24gb3IgcmFuZ2UuXCIpO3ZhciB0PWUuc3BsaXQoXCItXCIpO2U9dFswXTt2YXIgbj1pc05hTihOdW1iZXIoZVswXSkpLG89bj9lLnN1YnN0cigxKTplLHI9aS5tYXAoby5zcGxpdChcIi5cIiksZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlcihlKX0pO3JldHVybntpc1JhbmdlOm4sdmVyc2lvbjpvLHJhbmdlOmUsb3BlcmF0b3I6bj9lWzBdOlwiXCIscGFydHM6cixcbnByZXJlbGVhc2U6dFsxXSxudW1iZXI6MWU4KnJbMF0rMWU0KnJbMV0rclsyXX19LG8udmVyc2lvblNhdGlzZmllcz1mdW5jdGlvbihlLHQpe3Q9dHx8XCIqXCI7dmFyIG49by52ZXJzaW9uUGFyc2UodCksaT1uLnBhcnRzLHI9by52ZXJzaW9uUGFyc2UoZSkscz1yLnBhcnRzO2lmKG4uaXNSYW5nZSl7aWYoXCIqXCI9PT1uLm9wZXJhdG9yfHxcIipcIj09PWUpcmV0dXJuITA7aWYoXCJ+XCI9PT1uLm9wZXJhdG9yKXJldHVybiBzWzBdPT09aVswXSYmc1sxXT09PWlbMV0mJnNbMl0+PWlbMl07aWYoXCJeXCI9PT1uLm9wZXJhdG9yKXJldHVybiBpWzBdPjA/c1swXT09PWlbMF0mJnIubnVtYmVyPj1uLm51bWJlcjppWzFdPjA/c1sxXT09PWlbMV0mJnNbMl0+PWlbMl06c1syXT09PWlbMl19cmV0dXJuIGU9PT10fHxcIipcIj09PWV9fSgpfSx7XCIuL0NvbW1vblwiOjE0fV0sMjE6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9FdmVudHNcIikscj1lKFwiLi9FbmdpbmVcIikscz1lKFwiLi9Db21tb25cIik7IWZ1bmN0aW9uKCl7dmFyIGUsdDtpZihcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYoZT13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUsdD13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pDYW5jZWxBbmltYXRpb25GcmFtZXx8d2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubXNDYW5jZWxBbmltYXRpb25GcmFtZSksIWUpe3ZhciBuO2U9ZnVuY3Rpb24oZSl7bj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShzLm5vdygpKX0sMWUzLzYwKX0sdD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChuKX19by5jcmVhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9e2Zwczo2MCxjb3JyZWN0aW9uOjEsZGVsdGFTYW1wbGVTaXplOjYwLFxuY291bnRlclRpbWVzdGFtcDowLGZyYW1lQ291bnRlcjowLGRlbHRhSGlzdG9yeTpbXSx0aW1lUHJldjpudWxsLHRpbWVTY2FsZVByZXY6MSxmcmFtZVJlcXVlc3RJZDpudWxsLGlzRml4ZWQ6ITEsZW5hYmxlZDohMH0sbj1zLmV4dGVuZCh0LGUpO3JldHVybiBuLmRlbHRhPW4uZGVsdGF8fDFlMy9uLmZwcyxuLmRlbHRhTWluPW4uZGVsdGFNaW58fDFlMy9uLmZwcyxuLmRlbHRhTWF4PW4uZGVsdGFNYXh8fDFlMy8oLjUqbi5mcHMpLG4uZnBzPTFlMy9uLmRlbHRhLG59LG8ucnVuPWZ1bmN0aW9uKHQsbil7cmV0dXJuIHZvaWQgMCE9PXQucG9zaXRpb25JdGVyYXRpb25zJiYobj10LHQ9by5jcmVhdGUoKSksZnVuY3Rpb24gaShyKXt0LmZyYW1lUmVxdWVzdElkPWUoaSksciYmdC5lbmFibGVkJiZvLnRpY2sodCxuLHIpfSgpLHR9LG8udGljaz1mdW5jdGlvbihlLHQsbil7dmFyIG8scz10LnRpbWluZyxhPTEsbD17dGltZXN0YW1wOnMudGltZXN0YW1wfTtpLnRyaWdnZXIoZSxcImJlZm9yZVRpY2tcIixsKSxpLnRyaWdnZXIodCxcImJlZm9yZVRpY2tcIixsKSxlLmlzRml4ZWQ/bz1lLmRlbHRhOihvPW4tZS50aW1lUHJldnx8ZS5kZWx0YSxlLnRpbWVQcmV2PW4sZS5kZWx0YUhpc3RvcnkucHVzaChvKSxlLmRlbHRhSGlzdG9yeT1lLmRlbHRhSGlzdG9yeS5zbGljZSgtZS5kZWx0YVNhbXBsZVNpemUpLG89TWF0aC5taW4uYXBwbHkobnVsbCxlLmRlbHRhSGlzdG9yeSksbz1vPGUuZGVsdGFNaW4/ZS5kZWx0YU1pbjpvLG89bz5lLmRlbHRhTWF4P2UuZGVsdGFNYXg6byxhPW8vZS5kZWx0YSxlLmRlbHRhPW8pLDAhPT1lLnRpbWVTY2FsZVByZXYmJihhKj1zLnRpbWVTY2FsZS9lLnRpbWVTY2FsZVByZXYpLDA9PT1zLnRpbWVTY2FsZSYmKGE9MCksZS50aW1lU2NhbGVQcmV2PXMudGltZVNjYWxlLGUuY29ycmVjdGlvbj1hLGUuZnJhbWVDb3VudGVyKz0xLFxubi1lLmNvdW50ZXJUaW1lc3RhbXA+PTFlMyYmKGUuZnBzPWUuZnJhbWVDb3VudGVyKigobi1lLmNvdW50ZXJUaW1lc3RhbXApLzFlMyksZS5jb3VudGVyVGltZXN0YW1wPW4sZS5mcmFtZUNvdW50ZXI9MCksaS50cmlnZ2VyKGUsXCJ0aWNrXCIsbCksaS50cmlnZ2VyKHQsXCJ0aWNrXCIsbCksdC53b3JsZC5pc01vZGlmaWVkJiZ0LnJlbmRlciYmdC5yZW5kZXIuY29udHJvbGxlciYmdC5yZW5kZXIuY29udHJvbGxlci5jbGVhciYmdC5yZW5kZXIuY29udHJvbGxlci5jbGVhcih0LnJlbmRlciksaS50cmlnZ2VyKGUsXCJiZWZvcmVVcGRhdGVcIixsKSxyLnVwZGF0ZSh0LG8sYSksaS50cmlnZ2VyKGUsXCJhZnRlclVwZGF0ZVwiLGwpLHQucmVuZGVyJiZ0LnJlbmRlci5jb250cm9sbGVyJiYoaS50cmlnZ2VyKGUsXCJiZWZvcmVSZW5kZXJcIixsKSxpLnRyaWdnZXIodCxcImJlZm9yZVJlbmRlclwiLGwpLHQucmVuZGVyLmNvbnRyb2xsZXIud29ybGQodC5yZW5kZXIpLGkudHJpZ2dlcihlLFwiYWZ0ZXJSZW5kZXJcIixsKSxpLnRyaWdnZXIodCxcImFmdGVyUmVuZGVyXCIsbCkpLGkudHJpZ2dlcihlLFwiYWZ0ZXJUaWNrXCIsbCksaS50cmlnZ2VyKHQsXCJhZnRlclRpY2tcIixsKX0sby5zdG9wPWZ1bmN0aW9uKGUpe3QoZS5mcmFtZVJlcXVlc3RJZCl9LG8uc3RhcnQ9ZnVuY3Rpb24oZSx0KXtvLnJ1bihlLHQpfX0oKX0se1wiLi9Db21tb25cIjoxNCxcIi4vRW5naW5lXCI6MTUsXCIuL0V2ZW50c1wiOjE2fV0sMjI6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi9FdmVudHNcIik7IWZ1bmN0aW9uKCl7by5fbW90aW9uV2FrZVRocmVzaG9sZD0uMTgsby5fbW90aW9uU2xlZXBUaHJlc2hvbGQ9LjA4LG8uX21pbkJpYXM9Ljksby51cGRhdGU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dCp0KnQsaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgcj1lW2ldLHM9ci5zcGVlZCpyLnNwZWVkK3IuYW5ndWxhclNwZWVkKnIuYW5ndWxhclNwZWVkXG47aWYoMD09PXIuZm9yY2UueCYmMD09PXIuZm9yY2UueSl7dmFyIGE9TWF0aC5taW4oci5tb3Rpb24scyksbD1NYXRoLm1heChyLm1vdGlvbixzKTtyLm1vdGlvbj1vLl9taW5CaWFzKmErKDEtby5fbWluQmlhcykqbCxyLnNsZWVwVGhyZXNob2xkPjAmJnIubW90aW9uPG8uX21vdGlvblNsZWVwVGhyZXNob2xkKm4/KHIuc2xlZXBDb3VudGVyKz0xLHIuc2xlZXBDb3VudGVyPj1yLnNsZWVwVGhyZXNob2xkJiZvLnNldChyLCEwKSk6ci5zbGVlcENvdW50ZXI+MCYmKHIuc2xlZXBDb3VudGVyLT0xKX1lbHNlIG8uc2V0KHIsITEpfX0sby5hZnRlckNvbGxpc2lvbnM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dCp0KnQsaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgcj1lW2ldO2lmKHIuaXNBY3RpdmUpe3ZhciBzPXIuY29sbGlzaW9uLGE9cy5ib2R5QS5wYXJlbnQsbD1zLmJvZHlCLnBhcmVudDtpZighKGEuaXNTbGVlcGluZyYmbC5pc1NsZWVwaW5nfHxhLmlzU3RhdGljfHxsLmlzU3RhdGljKSYmKGEuaXNTbGVlcGluZ3x8bC5pc1NsZWVwaW5nKSl7dmFyIGM9YS5pc1NsZWVwaW5nJiYhYS5pc1N0YXRpYz9hOmwsZD1jPT09YT9sOmE7IWMuaXNTdGF0aWMmJmQubW90aW9uPm8uX21vdGlvbldha2VUaHJlc2hvbGQqbiYmby5zZXQoYywhMSl9fX19LG8uc2V0PWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5pc1NsZWVwaW5nO3Q/KGUuaXNTbGVlcGluZz0hMCxlLnNsZWVwQ291bnRlcj1lLnNsZWVwVGhyZXNob2xkLGUucG9zaXRpb25JbXB1bHNlLng9MCxlLnBvc2l0aW9uSW1wdWxzZS55PTAsZS5wb3NpdGlvblByZXYueD1lLnBvc2l0aW9uLngsZS5wb3NpdGlvblByZXYueT1lLnBvc2l0aW9uLnksZS5hbmdsZVByZXY9ZS5hbmdsZSxlLnNwZWVkPTAsZS5hbmd1bGFyU3BlZWQ9MCxlLm1vdGlvbj0wLG58fGkudHJpZ2dlcihlLFwic2xlZXBTdGFydFwiKSk6KGUuaXNTbGVlcGluZz0hMSxlLnNsZWVwQ291bnRlcj0wLG4mJmkudHJpZ2dlcihlLFwic2xlZXBFbmRcIikpfX0oKX0se1xuXCIuL0V2ZW50c1wiOjE2fV0sMjM6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaSxyPWUoXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiKSxzPWUoXCIuLi9jb3JlL0NvbW1vblwiKSxhPWUoXCIuLi9ib2R5L0JvZHlcIiksbD1lKFwiLi4vZ2VvbWV0cnkvQm91bmRzXCIpLGM9ZShcIi4uL2dlb21ldHJ5L1ZlY3RvclwiKTshZnVuY3Rpb24oKXtvLnJlY3RhbmdsZT1mdW5jdGlvbihlLHQsbixvLGkpe2k9aXx8e307dmFyIGw9e2xhYmVsOlwiUmVjdGFuZ2xlIEJvZHlcIixwb3NpdGlvbjp7eDplLHk6dH0sdmVydGljZXM6ci5mcm9tUGF0aChcIkwgMCAwIEwgXCIrbitcIiAwIEwgXCIrbitcIiBcIitvK1wiIEwgMCBcIitvKX07aWYoaS5jaGFtZmVyKXt2YXIgYz1pLmNoYW1mZXI7bC52ZXJ0aWNlcz1yLmNoYW1mZXIobC52ZXJ0aWNlcyxjLnJhZGl1cyxjLnF1YWxpdHksYy5xdWFsaXR5TWluLGMucXVhbGl0eU1heCksZGVsZXRlIGkuY2hhbWZlcn1yZXR1cm4gYS5jcmVhdGUocy5leHRlbmQoe30sbCxpKSl9LG8udHJhcGV6b2lkPWZ1bmN0aW9uKGUsdCxuLG8saSxsKXtsPWx8fHt9LGkqPS41O3ZhciBjLGQ9KDEtMippKSpuLHU9bippLHA9dStkLGY9cCt1O2M9aTwuNT9cIkwgMCAwIEwgXCIrdStcIiBcIistbytcIiBMIFwiK3ArXCIgXCIrLW8rXCIgTCBcIitmK1wiIDBcIjpcIkwgMCAwIEwgXCIrcCtcIiBcIistbytcIiBMIFwiK2YrXCIgMFwiO3ZhciBtPXtsYWJlbDpcIlRyYXBlem9pZCBCb2R5XCIscG9zaXRpb246e3g6ZSx5OnR9LHZlcnRpY2VzOnIuZnJvbVBhdGgoYyl9O2lmKGwuY2hhbWZlcil7dmFyIHY9bC5jaGFtZmVyO20udmVydGljZXM9ci5jaGFtZmVyKG0udmVydGljZXMsdi5yYWRpdXMsdi5xdWFsaXR5LHYucXVhbGl0eU1pbix2LnF1YWxpdHlNYXgpLGRlbGV0ZSBsLmNoYW1mZXJ9cmV0dXJuIGEuY3JlYXRlKHMuZXh0ZW5kKHt9LG0sbCkpfSxvLmNpcmNsZT1mdW5jdGlvbihlLHQsbixpLHIpe2k9aXx8e307dmFyIGE9e2xhYmVsOlwiQ2lyY2xlIEJvZHlcIixjaXJjbGVSYWRpdXM6bn07cj1yfHwyNVxuO3ZhciBsPU1hdGguY2VpbChNYXRoLm1heCgxMCxNYXRoLm1pbihyLG4pKSk7cmV0dXJuIGwlMj09MSYmKGwrPTEpLG8ucG9seWdvbihlLHQsbCxuLHMuZXh0ZW5kKHt9LGEsaSkpfSxvLnBvbHlnb249ZnVuY3Rpb24oZSx0LG4saSxsKXtpZihsPWx8fHt9LG48MylyZXR1cm4gby5jaXJjbGUoZSx0LGksbCk7Zm9yKHZhciBjPTIqTWF0aC5QSS9uLGQ9XCJcIix1PS41KmMscD0wO3A8bjtwKz0xKXt2YXIgZj11K3AqYyxtPU1hdGguY29zKGYpKmksdj1NYXRoLnNpbihmKSppO2QrPVwiTCBcIittLnRvRml4ZWQoMykrXCIgXCIrdi50b0ZpeGVkKDMpK1wiIFwifXZhciB5PXtsYWJlbDpcIlBvbHlnb24gQm9keVwiLHBvc2l0aW9uOnt4OmUseTp0fSx2ZXJ0aWNlczpyLmZyb21QYXRoKGQpfTtpZihsLmNoYW1mZXIpe3ZhciBnPWwuY2hhbWZlcjt5LnZlcnRpY2VzPXIuY2hhbWZlcih5LnZlcnRpY2VzLGcucmFkaXVzLGcucXVhbGl0eSxnLnF1YWxpdHlNaW4sZy5xdWFsaXR5TWF4KSxkZWxldGUgbC5jaGFtZmVyfXJldHVybiBhLmNyZWF0ZShzLmV4dGVuZCh7fSx5LGwpKX0sby5mcm9tVmVydGljZXM9ZnVuY3Rpb24oZSx0LG4sbyxkLHUscCl7aXx8KGk9cy5fcmVxdWlyZUdsb2JhbChcImRlY29tcFwiLFwicG9seS1kZWNvbXBcIikpO3ZhciBmLG0sdix5LGcseCxoLGIsdztmb3Iobz1vfHx7fSxtPVtdLGQ9dm9pZCAwIT09ZCYmZCx1PXZvaWQgMCE9PXU/dTouMDEscD12b2lkIDAhPT1wP3A6MTAsaXx8cy53YXJuKFwiQm9kaWVzLmZyb21WZXJ0aWNlczogcG9seS1kZWNvbXAuanMgcmVxdWlyZWQuIENvdWxkIG5vdCBkZWNvbXBvc2UgdmVydGljZXMuIEZhbGxiYWNrIHRvIGNvbnZleCBodWxsLlwiKSxzLmlzQXJyYXkoblswXSl8fChuPVtuXSksYj0wO2I8bi5sZW5ndGg7Yis9MSlpZih5PW5bYl0sKHY9ci5pc0NvbnZleCh5KSl8fCFpKXk9dj9yLmNsb2Nrd2lzZVNvcnQoeSk6ci5odWxsKHkpLG0ucHVzaCh7cG9zaXRpb246e3g6ZSx5OnR9LHZlcnRpY2VzOnl9KTtlbHNle1xudmFyIFM9eS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuW2UueCxlLnldfSk7aS5tYWtlQ0NXKFMpLCExIT09dSYmaS5yZW1vdmVDb2xsaW5lYXJQb2ludHMoUyx1KTt2YXIgQz1pLnF1aWNrRGVjb21wKFMpO2ZvcihnPTA7ZzxDLmxlbmd0aDtnKyspe3ZhciBBPUNbZ10sUD1BLm1hcChmdW5jdGlvbihlKXtyZXR1cm57eDplWzBdLHk6ZVsxXX19KTtwPjAmJnIuYXJlYShQKTxwfHxtLnB1c2goe3Bvc2l0aW9uOnIuY2VudHJlKFApLHZlcnRpY2VzOlB9KX19Zm9yKGc9MDtnPG0ubGVuZ3RoO2crKyltW2ddPWEuY3JlYXRlKHMuZXh0ZW5kKG1bZ10sbykpO2lmKGQpe2ZvcihnPTA7ZzxtLmxlbmd0aDtnKyspe3ZhciBCPW1bZ107Zm9yKHg9ZysxO3g8bS5sZW5ndGg7eCsrKXt2YXIgTT1tW3hdO2lmKGwub3ZlcmxhcHMoQi5ib3VuZHMsTS5ib3VuZHMpKXt2YXIgaz1CLnZlcnRpY2VzLEk9TS52ZXJ0aWNlcztmb3IoaD0wO2g8Qi52ZXJ0aWNlcy5sZW5ndGg7aCsrKWZvcih3PTA7dzxNLnZlcnRpY2VzLmxlbmd0aDt3Kyspe3ZhciBfPWMubWFnbml0dWRlU3F1YXJlZChjLnN1YihrWyhoKzEpJWsubGVuZ3RoXSxJW3ddKSksVD1jLm1hZ25pdHVkZVNxdWFyZWQoYy5zdWIoa1toXSxJWyh3KzEpJUkubGVuZ3RoXSkpO188NSYmVDw1JiYoa1toXS5pc0ludGVybmFsPSEwLElbd10uaXNJbnRlcm5hbD0hMCl9fX19fXJldHVybiBtLmxlbmd0aD4xPyhmPWEuY3JlYXRlKHMuZXh0ZW5kKHtwYXJ0czptLnNsaWNlKDApfSxvKSksYS5zZXRQb3NpdGlvbihmLHt4OmUseTp0fSksZik6bVswXX19KCl9LHtcIi4uL2JvZHkvQm9keVwiOjEsXCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9WZWN0b3JcIjoyOCxcIi4uL2dlb21ldHJ5L1ZlcnRpY2VzXCI6Mjl9XSwyNDpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vXG47dmFyIGk9ZShcIi4uL2JvZHkvQ29tcG9zaXRlXCIpLHI9ZShcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiKSxzPWUoXCIuLi9jb3JlL0NvbW1vblwiKSxhPWUoXCIuLi9ib2R5L0JvZHlcIiksbD1lKFwiLi9Cb2RpZXNcIik7IWZ1bmN0aW9uKCl7by5zdGFjaz1mdW5jdGlvbihlLHQsbixvLHIscyxsKXtmb3IodmFyIGMsZD1pLmNyZWF0ZSh7bGFiZWw6XCJTdGFja1wifSksdT1lLHA9dCxmPTAsbT0wO208bzttKyspe2Zvcih2YXIgdj0wLHk9MDt5PG47eSsrKXt2YXIgZz1sKHUscCx5LG0sYyxmKTtpZihnKXt2YXIgeD1nLmJvdW5kcy5tYXgueS1nLmJvdW5kcy5taW4ueSxoPWcuYm91bmRzLm1heC54LWcuYm91bmRzLm1pbi54O3g+diYmKHY9eCksYS50cmFuc2xhdGUoZyx7eDouNSpoLHk6LjUqeH0pLHU9Zy5ib3VuZHMubWF4LngrcixpLmFkZEJvZHkoZCxnKSxjPWcsZis9MX1lbHNlIHUrPXJ9cCs9ditzLHU9ZX1yZXR1cm4gZH0sby5jaGFpbj1mdW5jdGlvbihlLHQsbixvLGEsbCl7Zm9yKHZhciBjPWUuYm9kaWVzLGQ9MTtkPGMubGVuZ3RoO2QrKyl7dmFyIHU9Y1tkLTFdLHA9Y1tkXSxmPXUuYm91bmRzLm1heC55LXUuYm91bmRzLm1pbi55LG09dS5ib3VuZHMubWF4LngtdS5ib3VuZHMubWluLngsdj1wLmJvdW5kcy5tYXgueS1wLmJvdW5kcy5taW4ueSx5PXAuYm91bmRzLm1heC54LXAuYm91bmRzLm1pbi54LGc9e2JvZHlBOnUscG9pbnRBOnt4Om0qdCx5OmYqbn0sYm9keUI6cCxwb2ludEI6e3g6eSpvLHk6diphfX0seD1zLmV4dGVuZChnLGwpO2kuYWRkQ29uc3RyYWludChlLHIuY3JlYXRlKHgpKX1yZXR1cm4gZS5sYWJlbCs9XCIgQ2hhaW5cIixlfSxvLm1lc2g9ZnVuY3Rpb24oZSx0LG4sbyxhKXt2YXIgbCxjLGQsdSxwLGY9ZS5ib2RpZXM7Zm9yKGw9MDtsPG47bCsrKXtmb3IoYz0xO2M8dDtjKyspZD1mW2MtMStsKnRdLHU9ZltjK2wqdF0saS5hZGRDb25zdHJhaW50KGUsci5jcmVhdGUocy5leHRlbmQoe2JvZHlBOmQsYm9keUI6dX0sYSkpKVxuO2lmKGw+MClmb3IoYz0wO2M8dDtjKyspZD1mW2MrKGwtMSkqdF0sdT1mW2MrbCp0XSxpLmFkZENvbnN0cmFpbnQoZSxyLmNyZWF0ZShzLmV4dGVuZCh7Ym9keUE6ZCxib2R5Qjp1fSxhKSkpLG8mJmM+MCYmKHA9ZltjLTErKGwtMSkqdF0saS5hZGRDb25zdHJhaW50KGUsci5jcmVhdGUocy5leHRlbmQoe2JvZHlBOnAsYm9keUI6dX0sYSkpKSksbyYmYzx0LTEmJihwPWZbYysxKyhsLTEpKnRdLGkuYWRkQ29uc3RyYWludChlLHIuY3JlYXRlKHMuZXh0ZW5kKHtib2R5QTpwLGJvZHlCOnV9LGEpKSkpfXJldHVybiBlLmxhYmVsKz1cIiBNZXNoXCIsZX0sby5weXJhbWlkPWZ1bmN0aW9uKGUsdCxuLGkscixzLGwpe3JldHVybiBvLnN0YWNrKGUsdCxuLGkscixzLGZ1bmN0aW9uKHQsbyxzLGMsZCx1KXt2YXIgcD1NYXRoLm1pbihpLE1hdGguY2VpbChuLzIpKSxmPWQ/ZC5ib3VuZHMubWF4LngtZC5ib3VuZHMubWluLng6MDtpZighKGM+cCkpe2M9cC1jO3ZhciBtPWMsdj1uLTEtYztpZighKHM8bXx8cz52KSl7MT09PXUmJmEudHJhbnNsYXRlKGQse3g6KHMrKG4lMj09MT8xOi0xKSkqZix5OjB9KTtyZXR1cm4gbChlKyhkP3MqZjowKStzKnIsbyxzLGMsZCx1KX19fSl9LG8ubmV3dG9uc0NyYWRsZT1mdW5jdGlvbihlLHQsbixvLHMpe2Zvcih2YXIgYT1pLmNyZWF0ZSh7bGFiZWw6XCJOZXd0b25zIENyYWRsZVwifSksYz0wO2M8bjtjKyspe3ZhciBkPWwuY2lyY2xlKGUrYyooMS45Km8pLHQrcyxvLHtpbmVydGlhOjEvMCxyZXN0aXR1dGlvbjoxLGZyaWN0aW9uOjAsZnJpY3Rpb25BaXI6MWUtNCxzbG9wOjF9KSx1PXIuY3JlYXRlKHtwb2ludEE6e3g6ZStjKigxLjkqbykseTp0fSxib2R5QjpkfSk7aS5hZGRCb2R5KGEsZCksaS5hZGRDb25zdHJhaW50KGEsdSl9cmV0dXJuIGF9LG8uY2FyPWZ1bmN0aW9uKGUsdCxuLG8scyl7dmFyIGM9YS5uZXh0R3JvdXAoITApLGQ9LjUqLW4rMjAsdT0uNSpuLTIwLHA9aS5jcmVhdGUoe2xhYmVsOlwiQ2FyXCJcbn0pLGY9bC5yZWN0YW5nbGUoZSx0LG4sbyx7Y29sbGlzaW9uRmlsdGVyOntncm91cDpjfSxjaGFtZmVyOntyYWRpdXM6LjUqb30sZGVuc2l0eToyZS00fSksbT1sLmNpcmNsZShlK2QsdCswLHMse2NvbGxpc2lvbkZpbHRlcjp7Z3JvdXA6Y30sZnJpY3Rpb246Ljh9KSx2PWwuY2lyY2xlKGUrdSx0KzAscyx7Y29sbGlzaW9uRmlsdGVyOntncm91cDpjfSxmcmljdGlvbjouOH0pLHk9ci5jcmVhdGUoe2JvZHlCOmYscG9pbnRCOnt4OmQseTowfSxib2R5QTptLHN0aWZmbmVzczoxLGxlbmd0aDowfSksZz1yLmNyZWF0ZSh7Ym9keUI6Zixwb2ludEI6e3g6dSx5OjB9LGJvZHlBOnYsc3RpZmZuZXNzOjEsbGVuZ3RoOjB9KTtyZXR1cm4gaS5hZGRCb2R5KHAsZiksaS5hZGRCb2R5KHAsbSksaS5hZGRCb2R5KHAsdiksaS5hZGRDb25zdHJhaW50KHAseSksaS5hZGRDb25zdHJhaW50KHAsZykscH0sby5zb2Z0Qm9keT1mdW5jdGlvbihlLHQsbixpLHIsYSxjLGQsdSxwKXt1PXMuZXh0ZW5kKHtpbmVydGlhOjEvMH0sdSkscD1zLmV4dGVuZCh7c3RpZmZuZXNzOi4yLHJlbmRlcjp7dHlwZTpcImxpbmVcIixhbmNob3JzOiExfX0scCk7dmFyIGY9by5zdGFjayhlLHQsbixpLHIsYSxmdW5jdGlvbihlLHQpe3JldHVybiBsLmNpcmNsZShlLHQsZCx1KX0pO3JldHVybiBvLm1lc2goZixuLGksYyxwKSxmLmxhYmVsPVwiU29mdCBCb2R5XCIsZn19KCl9LHtcIi4uL2JvZHkvQm9keVwiOjEsXCIuLi9ib2R5L0NvbXBvc2l0ZVwiOjIsXCIuLi9jb25zdHJhaW50L0NvbnN0cmFpbnRcIjoxMixcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuL0JvZGllc1wiOjIzfV0sMjU6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9bzt2YXIgaT1lKFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCIpLHI9ZShcIi4uL2NvcmUvQ29tbW9uXCIpOyFmdW5jdGlvbigpe28uZnJvbVZlcnRpY2VzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD17fSxuPTA7bjxlLmxlbmd0aDtuKyspe1xudmFyIG89KG4rMSklZS5sZW5ndGgscz1pLm5vcm1hbGlzZSh7eDplW29dLnktZVtuXS55LHk6ZVtuXS54LWVbb10ueH0pLGE9MD09PXMueT8xLzA6cy54L3MueTthPWEudG9GaXhlZCgzKS50b1N0cmluZygpLHRbYV09c31yZXR1cm4gci52YWx1ZXModCl9LG8ucm90YXRlPWZ1bmN0aW9uKGUsdCl7aWYoMCE9PXQpZm9yKHZhciBuPU1hdGguY29zKHQpLG89TWF0aC5zaW4odCksaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgcixzPWVbaV07cj1zLngqbi1zLnkqbyxzLnk9cy54Km8rcy55Km4scy54PXJ9fX0oKX0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4fV0sMjY6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9byxmdW5jdGlvbigpe28uY3JlYXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXttaW46e3g6MCx5OjB9LG1heDp7eDowLHk6MH19O3JldHVybiBlJiZvLnVwZGF0ZSh0LGUpLHR9LG8udXBkYXRlPWZ1bmN0aW9uKGUsdCxuKXtlLm1pbi54PTEvMCxlLm1heC54PS0xLzAsZS5taW4ueT0xLzAsZS5tYXgueT0tMS8wO2Zvcih2YXIgbz0wO288dC5sZW5ndGg7bysrKXt2YXIgaT10W29dO2kueD5lLm1heC54JiYoZS5tYXgueD1pLngpLGkueDxlLm1pbi54JiYoZS5taW4ueD1pLngpLGkueT5lLm1heC55JiYoZS5tYXgueT1pLnkpLGkueTxlLm1pbi55JiYoZS5taW4ueT1pLnkpfW4mJihuLng+MD9lLm1heC54Kz1uLng6ZS5taW4ueCs9bi54LG4ueT4wP2UubWF4LnkrPW4ueTplLm1pbi55Kz1uLnkpfSxvLmNvbnRhaW5zPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQueD49ZS5taW4ueCYmdC54PD1lLm1heC54JiZ0Lnk+PWUubWluLnkmJnQueTw9ZS5tYXgueX0sby5vdmVybGFwcz1mdW5jdGlvbihlLHQpe3JldHVybiBlLm1pbi54PD10Lm1heC54JiZlLm1heC54Pj10Lm1pbi54JiZlLm1heC55Pj10Lm1pbi55JiZlLm1pbi55PD10Lm1heC55fSxvLnRyYW5zbGF0ZT1mdW5jdGlvbihlLHQpe2UubWluLngrPXQueCxcbmUubWF4LngrPXQueCxlLm1pbi55Kz10LnksZS5tYXgueSs9dC55fSxvLnNoaWZ0PWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5tYXgueC1lLm1pbi54LG89ZS5tYXgueS1lLm1pbi55O2UubWluLng9dC54LGUubWF4Lng9dC54K24sZS5taW4ueT10LnksZS5tYXgueT10Lnkrb319KCl9LHt9XSwyNzpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vO3ZhciBpPShlKFwiLi4vZ2VvbWV0cnkvQm91bmRzXCIpLGUoXCIuLi9jb3JlL0NvbW1vblwiKSk7IWZ1bmN0aW9uKCl7by5wYXRoVG9WZXJ0aWNlcz1mdW5jdGlvbihlLHQpe1widW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3d8fFwiU1ZHUGF0aFNlZ1wiaW4gd2luZG93fHxpLndhcm4oXCJTdmcucGF0aFRvVmVydGljZXM6IFNWR1BhdGhTZWcgbm90IGRlZmluZWQsIGEgcG9seWZpbGwgaXMgcmVxdWlyZWQuXCIpO3ZhciBuLHIscyxhLGwsYyxkLHUscCxmLG0sdix5PVtdLGc9MCx4PTAsaD0wO3Q9dHx8MTU7dmFyIGI9ZnVuY3Rpb24oZSx0LG4pe3ZhciBvPW4lMj09MSYmbj4xO2lmKCFwfHxlIT1wLnh8fHQhPXAueSl7cCYmbz8obT1wLngsdj1wLnkpOihtPTAsdj0wKTt2YXIgaT17eDptK2UseTp2K3R9OyFvJiZwfHwocD1pKSx5LnB1c2goaSkseD1tK2UsaD12K3R9fSx3PWZ1bmN0aW9uKGUpe3ZhciB0PWUucGF0aFNlZ1R5cGVBc0xldHRlci50b1VwcGVyQ2FzZSgpO2lmKFwiWlwiIT09dCl7c3dpdGNoKHQpe2Nhc2VcIk1cIjpjYXNlXCJMXCI6Y2FzZVwiVFwiOmNhc2VcIkNcIjpjYXNlXCJTXCI6Y2FzZVwiUVwiOng9ZS54LGg9ZS55O2JyZWFrO2Nhc2VcIkhcIjp4PWUueDticmVhaztjYXNlXCJWXCI6aD1lLnl9Yih4LGgsZS5wYXRoU2VnVHlwZSl9fTtmb3Ioby5fc3ZnUGF0aFRvQWJzb2x1dGUoZSkscz1lLmdldFRvdGFsTGVuZ3RoKCksYz1bXSxuPTA7bjxlLnBhdGhTZWdMaXN0Lm51bWJlck9mSXRlbXM7bis9MSljLnB1c2goZS5wYXRoU2VnTGlzdC5nZXRJdGVtKG4pKTtmb3IoZD1jLmNvbmNhdCgpO2c8czspe1xuaWYoZj1lLmdldFBhdGhTZWdBdExlbmd0aChnKSwobD1jW2ZdKSE9dSl7Zm9yKDtkLmxlbmd0aCYmZFswXSE9bDspdyhkLnNoaWZ0KCkpO3U9bH1zd2l0Y2gobC5wYXRoU2VnVHlwZUFzTGV0dGVyLnRvVXBwZXJDYXNlKCkpe2Nhc2VcIkNcIjpjYXNlXCJUXCI6Y2FzZVwiU1wiOmNhc2VcIlFcIjpjYXNlXCJBXCI6YT1lLmdldFBvaW50QXRMZW5ndGgoZyksYihhLngsYS55LDApfWcrPXR9Zm9yKG49MCxyPWQubGVuZ3RoO248cjsrK24pdyhkW25dKTtyZXR1cm4geX0sby5fc3ZnUGF0aFRvQWJzb2x1dGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG4sbyxpLHIscyxhPWUucGF0aFNlZ0xpc3QsbD0wLGM9MCxkPWEubnVtYmVyT2ZJdGVtcyx1PTA7dTxkOysrdSl7dmFyIHA9YS5nZXRJdGVtKHUpLGY9cC5wYXRoU2VnVHlwZUFzTGV0dGVyO2lmKC9bTUxIVkNTUVRBXS8udGVzdChmKSlcInhcImluIHAmJihsPXAueCksXCJ5XCJpbiBwJiYoYz1wLnkpO2Vsc2Ugc3dpdGNoKFwieDFcImluIHAmJihvPWwrcC54MSksXCJ4MlwiaW4gcCYmKHI9bCtwLngyKSxcInkxXCJpbiBwJiYoaT1jK3AueTEpLFwieTJcImluIHAmJihzPWMrcC55MiksXCJ4XCJpbiBwJiYobCs9cC54KSxcInlcImluIHAmJihjKz1wLnkpLGYpe2Nhc2VcIm1cIjphLnJlcGxhY2VJdGVtKGUuY3JlYXRlU1ZHUGF0aFNlZ01vdmV0b0FicyhsLGMpLHUpO2JyZWFrO2Nhc2VcImxcIjphLnJlcGxhY2VJdGVtKGUuY3JlYXRlU1ZHUGF0aFNlZ0xpbmV0b0FicyhsLGMpLHUpO2JyZWFrO2Nhc2VcImhcIjphLnJlcGxhY2VJdGVtKGUuY3JlYXRlU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxBYnMobCksdSk7YnJlYWs7Y2FzZVwidlwiOmEucmVwbGFjZUl0ZW0oZS5jcmVhdGVTVkdQYXRoU2VnTGluZXRvVmVydGljYWxBYnMoYyksdSk7YnJlYWs7Y2FzZVwiY1wiOmEucmVwbGFjZUl0ZW0oZS5jcmVhdGVTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzKGwsYyxvLGkscixzKSx1KTticmVhaztjYXNlXCJzXCI6XG5hLnJlcGxhY2VJdGVtKGUuY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicyhsLGMscixzKSx1KTticmVhaztjYXNlXCJxXCI6YS5yZXBsYWNlSXRlbShlLmNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzKGwsYyxvLGkpLHUpO2JyZWFrO2Nhc2VcInRcIjphLnJlcGxhY2VJdGVtKGUuY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnMobCxjKSx1KTticmVhaztjYXNlXCJhXCI6YS5yZXBsYWNlSXRlbShlLmNyZWF0ZVNWR1BhdGhTZWdBcmNBYnMobCxjLHAucjEscC5yMixwLmFuZ2xlLHAubGFyZ2VBcmNGbGFnLHAuc3dlZXBGbGFnKSx1KTticmVhaztjYXNlXCJ6XCI6Y2FzZVwiWlwiOmw9dCxjPW59XCJNXCIhPWYmJlwibVwiIT1mfHwodD1sLG49Yyl9fX0oKX0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2fV0sMjg6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgbz17fTt0LmV4cG9ydHM9byxmdW5jdGlvbigpe28uY3JlYXRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3g6ZXx8MCx5OnR8fDB9fSxvLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybnt4OmUueCx5OmUueX19LG8ubWFnbml0dWRlPWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLnNxcnQoZS54KmUueCtlLnkqZS55KX0sby5tYWduaXR1ZGVTcXVhcmVkPWZ1bmN0aW9uKGUpe3JldHVybiBlLngqZS54K2UueSplLnl9LG8ucm90YXRlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbz1NYXRoLmNvcyh0KSxpPU1hdGguc2luKHQpO258fChuPXt9KTt2YXIgcj1lLngqby1lLnkqaTtyZXR1cm4gbi55PWUueCppK2UueSpvLG4ueD1yLG59LG8ucm90YXRlQWJvdXQ9ZnVuY3Rpb24oZSx0LG4sbyl7dmFyIGk9TWF0aC5jb3ModCkscj1NYXRoLnNpbih0KTtvfHwobz17fSk7dmFyIHM9bi54KygoZS54LW4ueCkqaS0oZS55LW4ueSkqcik7cmV0dXJuIG8ueT1uLnkrKChlLngtbi54KSpyKyhlLnktbi55KSppKSxvLng9cyxvfSxvLm5vcm1hbGlzZT1mdW5jdGlvbihlKXtcbnZhciB0PW8ubWFnbml0dWRlKGUpO3JldHVybiAwPT09dD97eDowLHk6MH06e3g6ZS54L3QseTplLnkvdH19LG8uZG90PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUueCp0LngrZS55KnQueX0sby5jcm9zcz1mdW5jdGlvbihlLHQpe3JldHVybiBlLngqdC55LWUueSp0Lnh9LG8uY3Jvc3MzPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4odC54LWUueCkqKG4ueS1lLnkpLSh0LnktZS55KSoobi54LWUueCl9LG8uYWRkPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbnx8KG49e30pLG4ueD1lLngrdC54LG4ueT1lLnkrdC55LG59LG8uc3ViPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbnx8KG49e30pLG4ueD1lLngtdC54LG4ueT1lLnktdC55LG59LG8ubXVsdD1mdW5jdGlvbihlLHQpe3JldHVybnt4OmUueCp0LHk6ZS55KnR9fSxvLmRpdj1mdW5jdGlvbihlLHQpe3JldHVybnt4OmUueC90LHk6ZS55L3R9fSxvLnBlcnA9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdD0hMD09PXQ/LTE6MSx7eDp0Ki1lLnkseTp0KmUueH19LG8ubmVnPWZ1bmN0aW9uKGUpe3JldHVybnt4Oi1lLngseTotZS55fX0sby5hbmdsZT1mdW5jdGlvbihlLHQpe3JldHVybiBNYXRoLmF0YW4yKHQueS1lLnksdC54LWUueCl9LG8uX3RlbXA9W28uY3JlYXRlKCksby5jcmVhdGUoKSxvLmNyZWF0ZSgpLG8uY3JlYXRlKCksby5jcmVhdGUoKSxvLmNyZWF0ZSgpXX0oKX0se31dLDI5OltmdW5jdGlvbihlLHQsbil7dmFyIG89e307dC5leHBvcnRzPW87dmFyIGk9ZShcIi4uL2dlb21ldHJ5L1ZlY3RvclwiKSxyPWUoXCIuLi9jb3JlL0NvbW1vblwiKTshZnVuY3Rpb24oKXtvLmNyZWF0ZT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1bXSxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBpPWVbb10scj17eDppLngseTppLnksaW5kZXg6byxib2R5OnQsaXNJbnRlcm5hbDohMX07bi5wdXNoKHIpfXJldHVybiBufSxvLmZyb21QYXRoPWZ1bmN0aW9uKGUsdCl7XG52YXIgbj0vTD9cXHMqKFtcXC1cXGRcXC5lXSspW1xccyxdKihbXFwtXFxkXFwuZV0rKSovZ2ksaT1bXTtyZXR1cm4gZS5yZXBsYWNlKG4sZnVuY3Rpb24oZSx0LG4pe2kucHVzaCh7eDpwYXJzZUZsb2F0KHQpLHk6cGFyc2VGbG9hdChuKX0pfSksby5jcmVhdGUoaSx0KX0sby5jZW50cmU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG4scixzPW8uYXJlYShlLCEwKSxhPXt4OjAseTowfSxsPTA7bDxlLmxlbmd0aDtsKyspcj0obCsxKSVlLmxlbmd0aCx0PWkuY3Jvc3MoZVtsXSxlW3JdKSxuPWkubXVsdChpLmFkZChlW2xdLGVbcl0pLHQpLGE9aS5hZGQoYSxuKTtyZXR1cm4gaS5kaXYoYSw2KnMpfSxvLm1lYW49ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXt4OjAseTowfSxuPTA7bjxlLmxlbmd0aDtuKyspdC54Kz1lW25dLngsdC55Kz1lW25dLnk7cmV0dXJuIGkuZGl2KHQsZS5sZW5ndGgpfSxvLmFyZWE9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49MCxvPWUubGVuZ3RoLTEsaT0wO2k8ZS5sZW5ndGg7aSsrKW4rPShlW29dLngtZVtpXS54KSooZVtvXS55K2VbaV0ueSksbz1pO3JldHVybiB0P24vMjpNYXRoLmFicyhuKS8yfSxvLmluZXJ0aWE9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4sbyxyPTAscz0wLGE9ZSxsPTA7bDxhLmxlbmd0aDtsKyspbz0obCsxKSVhLmxlbmd0aCxuPU1hdGguYWJzKGkuY3Jvc3MoYVtvXSxhW2xdKSkscis9biooaS5kb3QoYVtvXSxhW29dKStpLmRvdChhW29dLGFbbF0pK2kuZG90KGFbbF0sYVtsXSkpLHMrPW47cmV0dXJuIHQvNiooci9zKX0sby50cmFuc2xhdGU9ZnVuY3Rpb24oZSx0LG4pe3ZhciBvO2lmKG4pZm9yKG89MDtvPGUubGVuZ3RoO28rKyllW29dLngrPXQueCpuLGVbb10ueSs9dC55Km47ZWxzZSBmb3Iobz0wO288ZS5sZW5ndGg7bysrKWVbb10ueCs9dC54LGVbb10ueSs9dC55O3JldHVybiBlfSxvLnJvdGF0ZT1mdW5jdGlvbihlLHQsbil7aWYoMCE9PXQpe1xuZm9yKHZhciBvPU1hdGguY29zKHQpLGk9TWF0aC5zaW4odCkscj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgcz1lW3JdLGE9cy54LW4ueCxsPXMueS1uLnk7cy54PW4ueCsoYSpvLWwqaSkscy55PW4ueSsoYSppK2wqbyl9cmV0dXJuIGV9fSxvLmNvbnRhaW5zPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl0saT1lWyhuKzEpJWUubGVuZ3RoXTtpZigodC54LW8ueCkqKGkueS1vLnkpKyh0Lnktby55KSooby54LWkueCk+MClyZXR1cm4hMX1yZXR1cm4hMH0sby5zY2FsZT1mdW5jdGlvbihlLHQsbixyKXtpZigxPT09dCYmMT09PW4pcmV0dXJuIGU7cj1yfHxvLmNlbnRyZShlKTtmb3IodmFyIHMsYSxsPTA7bDxlLmxlbmd0aDtsKyspcz1lW2xdLGE9aS5zdWIocyxyKSxlW2xdLng9ci54K2EueCp0LGVbbF0ueT1yLnkrYS55Km47cmV0dXJuIGV9LG8uY2hhbWZlcj1mdW5jdGlvbihlLHQsbixvLHMpe3Q9XCJudW1iZXJcIj09dHlwZW9mIHQ/W3RdOnR8fFs4XSxuPXZvaWQgMCE9PW4/bjotMSxvPW98fDIscz1zfHwxNDtmb3IodmFyIGE9W10sbD0wO2w8ZS5sZW5ndGg7bCsrKXt2YXIgYz1lW2wtMT49MD9sLTE6ZS5sZW5ndGgtMV0sZD1lW2xdLHU9ZVsobCsxKSVlLmxlbmd0aF0scD10W2w8dC5sZW5ndGg/bDp0Lmxlbmd0aC0xXTtpZigwIT09cCl7dmFyIGY9aS5ub3JtYWxpc2Uoe3g6ZC55LWMueSx5OmMueC1kLnh9KSxtPWkubm9ybWFsaXNlKHt4OnUueS1kLnkseTpkLngtdS54fSksdj1NYXRoLnNxcnQoMipNYXRoLnBvdyhwLDIpKSx5PWkubXVsdChyLmNsb25lKGYpLHApLGc9aS5ub3JtYWxpc2UoaS5tdWx0KGkuYWRkKGYsbSksLjUpKSx4PWkuc3ViKGQsaS5tdWx0KGcsdikpLGg9bjstMT09PW4mJihoPTEuNzUqTWF0aC5wb3cocCwuMzIpKSxoPXIuY2xhbXAoaCxvLHMpLGglMj09MSYmKGgrPTEpXG47Zm9yKHZhciBiPU1hdGguYWNvcyhpLmRvdChmLG0pKSx3PWIvaCxTPTA7UzxoO1MrKylhLnB1c2goaS5hZGQoaS5yb3RhdGUoeSx3KlMpLHgpKX1lbHNlIGEucHVzaChkKX1yZXR1cm4gYX0sby5jbG9ja3dpc2VTb3J0PWZ1bmN0aW9uKGUpe3ZhciB0PW8ubWVhbihlKTtyZXR1cm4gZS5zb3J0KGZ1bmN0aW9uKGUsbil7cmV0dXJuIGkuYW5nbGUodCxlKS1pLmFuZ2xlKHQsbil9KSxlfSxvLmlzQ29udmV4PWZ1bmN0aW9uKGUpe3ZhciB0LG4sbyxpLHI9MCxzPWUubGVuZ3RoO2lmKHM8MylyZXR1cm4gbnVsbDtmb3IodD0wO3Q8czt0KyspaWYobj0odCsxKSVzLG89KHQrMiklcyxpPShlW25dLngtZVt0XS54KSooZVtvXS55LWVbbl0ueSksaS09KGVbbl0ueS1lW3RdLnkpKihlW29dLngtZVtuXS54KSxpPDA/cnw9MTppPjAmJihyfD0yKSwzPT09cilyZXR1cm4hMTtyZXR1cm4gMCE9PXJ8fG51bGx9LG8uaHVsbD1mdW5jdGlvbihlKXt2YXIgdCxuLG89W10scj1bXTtmb3IoZT1lLnNsaWNlKDApLGUuc29ydChmdW5jdGlvbihlLHQpe3ZhciBuPWUueC10Lng7cmV0dXJuIDAhPT1uP246ZS55LXQueX0pLG49MDtuPGUubGVuZ3RoO24rPTEpe2Zvcih0PWVbbl07ci5sZW5ndGg+PTImJmkuY3Jvc3MzKHJbci5sZW5ndGgtMl0scltyLmxlbmd0aC0xXSx0KTw9MDspci5wb3AoKTtyLnB1c2godCl9Zm9yKG49ZS5sZW5ndGgtMTtuPj0wO24tPTEpe2Zvcih0PWVbbl07by5sZW5ndGg+PTImJmkuY3Jvc3MzKG9bby5sZW5ndGgtMl0sb1tvLmxlbmd0aC0xXSx0KTw9MDspby5wb3AoKTtvLnB1c2godCl9cmV0dXJuIG8ucG9wKCksci5wb3AoKSxvLmNvbmNhdChyKX19KCl9LHtcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9nZW9tZXRyeS9WZWN0b3JcIjoyOH1dLDMwOltmdW5jdGlvbihlLHQsbil7dmFyIG89dC5leHBvcnRzPWUoXCIuLi9jb3JlL01hdHRlclwiKTtvLkJvZHk9ZShcIi4uL2JvZHkvQm9keVwiKSxvLkNvbXBvc2l0ZT1lKFwiLi4vYm9keS9Db21wb3NpdGVcIiksXG5vLldvcmxkPWUoXCIuLi9ib2R5L1dvcmxkXCIpLG8uQ29udGFjdD1lKFwiLi4vY29sbGlzaW9uL0NvbnRhY3RcIiksby5EZXRlY3Rvcj1lKFwiLi4vY29sbGlzaW9uL0RldGVjdG9yXCIpLG8uR3JpZD1lKFwiLi4vY29sbGlzaW9uL0dyaWRcIiksby5QYWlycz1lKFwiLi4vY29sbGlzaW9uL1BhaXJzXCIpLG8uUGFpcj1lKFwiLi4vY29sbGlzaW9uL1BhaXJcIiksby5RdWVyeT1lKFwiLi4vY29sbGlzaW9uL1F1ZXJ5XCIpLG8uUmVzb2x2ZXI9ZShcIi4uL2NvbGxpc2lvbi9SZXNvbHZlclwiKSxvLlNBVD1lKFwiLi4vY29sbGlzaW9uL1NBVFwiKSxvLkNvbnN0cmFpbnQ9ZShcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiKSxvLk1vdXNlQ29uc3RyYWludD1lKFwiLi4vY29uc3RyYWludC9Nb3VzZUNvbnN0cmFpbnRcIiksby5Db21tb249ZShcIi4uL2NvcmUvQ29tbW9uXCIpLG8uRW5naW5lPWUoXCIuLi9jb3JlL0VuZ2luZVwiKSxvLkV2ZW50cz1lKFwiLi4vY29yZS9FdmVudHNcIiksby5Nb3VzZT1lKFwiLi4vY29yZS9Nb3VzZVwiKSxvLlJ1bm5lcj1lKFwiLi4vY29yZS9SdW5uZXJcIiksby5TbGVlcGluZz1lKFwiLi4vY29yZS9TbGVlcGluZ1wiKSxvLlBsdWdpbj1lKFwiLi4vY29yZS9QbHVnaW5cIiksby5Cb2RpZXM9ZShcIi4uL2ZhY3RvcnkvQm9kaWVzXCIpLG8uQ29tcG9zaXRlcz1lKFwiLi4vZmFjdG9yeS9Db21wb3NpdGVzXCIpLG8uQXhlcz1lKFwiLi4vZ2VvbWV0cnkvQXhlc1wiKSxvLkJvdW5kcz1lKFwiLi4vZ2VvbWV0cnkvQm91bmRzXCIpLG8uU3ZnPWUoXCIuLi9nZW9tZXRyeS9TdmdcIiksby5WZWN0b3I9ZShcIi4uL2dlb21ldHJ5L1ZlY3RvclwiKSxvLlZlcnRpY2VzPWUoXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiKSxvLlJlbmRlcj1lKFwiLi4vcmVuZGVyL1JlbmRlclwiKSxvLlJlbmRlclBpeGk9ZShcIi4uL3JlbmRlci9SZW5kZXJQaXhpXCIpLG8uV29ybGQuYWRkPW8uQ29tcG9zaXRlLmFkZCxvLldvcmxkLnJlbW92ZT1vLkNvbXBvc2l0ZS5yZW1vdmUsXG5vLldvcmxkLmFkZENvbXBvc2l0ZT1vLkNvbXBvc2l0ZS5hZGRDb21wb3NpdGUsby5Xb3JsZC5hZGRCb2R5PW8uQ29tcG9zaXRlLmFkZEJvZHksby5Xb3JsZC5hZGRDb25zdHJhaW50PW8uQ29tcG9zaXRlLmFkZENvbnN0cmFpbnQsby5Xb3JsZC5jbGVhcj1vLkNvbXBvc2l0ZS5jbGVhcixvLkVuZ2luZS5ydW49by5SdW5uZXIucnVufSx7XCIuLi9ib2R5L0JvZHlcIjoxLFwiLi4vYm9keS9Db21wb3NpdGVcIjoyLFwiLi4vYm9keS9Xb3JsZFwiOjMsXCIuLi9jb2xsaXNpb24vQ29udGFjdFwiOjQsXCIuLi9jb2xsaXNpb24vRGV0ZWN0b3JcIjo1LFwiLi4vY29sbGlzaW9uL0dyaWRcIjo2LFwiLi4vY29sbGlzaW9uL1BhaXJcIjo3LFwiLi4vY29sbGlzaW9uL1BhaXJzXCI6OCxcIi4uL2NvbGxpc2lvbi9RdWVyeVwiOjksXCIuLi9jb2xsaXNpb24vUmVzb2x2ZXJcIjoxMCxcIi4uL2NvbGxpc2lvbi9TQVRcIjoxMSxcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiOjEyLFwiLi4vY29uc3RyYWludC9Nb3VzZUNvbnN0cmFpbnRcIjoxMyxcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL0VuZ2luZVwiOjE1LFwiLi4vY29yZS9FdmVudHNcIjoxNixcIi4uL2NvcmUvTWF0dGVyXCI6MTcsXCIuLi9jb3JlL01ldHJpY3NcIjoxOCxcIi4uL2NvcmUvTW91c2VcIjoxOSxcIi4uL2NvcmUvUGx1Z2luXCI6MjAsXCIuLi9jb3JlL1J1bm5lclwiOjIxLFwiLi4vY29yZS9TbGVlcGluZ1wiOjIyLFwiLi4vZmFjdG9yeS9Cb2RpZXNcIjoyMyxcIi4uL2ZhY3RvcnkvQ29tcG9zaXRlc1wiOjI0LFwiLi4vZ2VvbWV0cnkvQXhlc1wiOjI1LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9TdmdcIjoyNyxcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4LFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIjoyOSxcIi4uL3JlbmRlci9SZW5kZXJcIjozMSxcIi4uL3JlbmRlci9SZW5kZXJQaXhpXCI6MzJ9XSwzMTpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vXG47dmFyIGk9ZShcIi4uL2NvcmUvQ29tbW9uXCIpLHI9ZShcIi4uL2JvZHkvQ29tcG9zaXRlXCIpLHM9ZShcIi4uL2dlb21ldHJ5L0JvdW5kc1wiKSxhPWUoXCIuLi9jb3JlL0V2ZW50c1wiKSxsPWUoXCIuLi9jb2xsaXNpb24vR3JpZFwiKSxjPWUoXCIuLi9nZW9tZXRyeS9WZWN0b3JcIiksZD1lKFwiLi4vY29yZS9Nb3VzZVwiKTshZnVuY3Rpb24oKXt2YXIgZSx0O1widW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJihlPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oZSl7d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGkubm93KCkpfSwxZTMvNjApfSx0PXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZXx8d2luZG93Lm1vekNhbmNlbEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cud2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tc0NhbmNlbEFuaW1hdGlvbkZyYW1lKSxvLmNyZWF0ZT1mdW5jdGlvbihlKXt2YXIgdD17Y29udHJvbGxlcjpvLGVuZ2luZTpudWxsLGVsZW1lbnQ6bnVsbCxjYW52YXM6bnVsbCxtb3VzZTpudWxsLGZyYW1lUmVxdWVzdElkOm51bGwsb3B0aW9uczp7d2lkdGg6ODAwLGhlaWdodDo2MDAscGl4ZWxSYXRpbzoxLGJhY2tncm91bmQ6XCIjMTgxODFkXCIsd2lyZWZyYW1lQmFja2dyb3VuZDpcIiMwZjBmMTNcIixoYXNCb3VuZHM6ISFlLmJvdW5kcyxlbmFibGVkOiEwLHdpcmVmcmFtZXM6ITAsc2hvd1NsZWVwaW5nOiEwLHNob3dEZWJ1ZzohMSxzaG93QnJvYWRwaGFzZTohMSxzaG93Qm91bmRzOiExLHNob3dWZWxvY2l0eTohMSxzaG93Q29sbGlzaW9uczohMSxzaG93U2VwYXJhdGlvbnM6ITEsc2hvd0F4ZXM6ITEsc2hvd1Bvc2l0aW9uczohMSxzaG93QW5nbGVJbmRpY2F0b3I6ITEsc2hvd0lkczohMSxzaG93U2hhZG93czohMSxcbnNob3dWZXJ0ZXhOdW1iZXJzOiExLHNob3dDb252ZXhIdWxsczohMSxzaG93SW50ZXJuYWxFZGdlczohMSxzaG93TW91c2VQb3NpdGlvbjohMX19LHI9aS5leHRlbmQodCxlKTtyZXR1cm4gci5jYW52YXMmJihyLmNhbnZhcy53aWR0aD1yLm9wdGlvbnMud2lkdGh8fHIuY2FudmFzLndpZHRoLHIuY2FudmFzLmhlaWdodD1yLm9wdGlvbnMuaGVpZ2h0fHxyLmNhbnZhcy5oZWlnaHQpLHIubW91c2U9ZS5tb3VzZSxyLmVuZ2luZT1lLmVuZ2luZSxyLmNhbnZhcz1yLmNhbnZhc3x8bihyLm9wdGlvbnMud2lkdGgsci5vcHRpb25zLmhlaWdodCksci5jb250ZXh0PXIuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKSxyLnRleHR1cmVzPXt9LHIuYm91bmRzPXIuYm91bmRzfHx7bWluOnt4OjAseTowfSxtYXg6e3g6ci5jYW52YXMud2lkdGgseTpyLmNhbnZhcy5oZWlnaHR9fSwxIT09ci5vcHRpb25zLnBpeGVsUmF0aW8mJm8uc2V0UGl4ZWxSYXRpbyhyLHIub3B0aW9ucy5waXhlbFJhdGlvKSxpLmlzRWxlbWVudChyLmVsZW1lbnQpP3IuZWxlbWVudC5hcHBlbmRDaGlsZChyLmNhbnZhcyk6ci5jYW52YXMucGFyZW50Tm9kZXx8aS5sb2coXCJSZW5kZXIuY3JlYXRlOiBvcHRpb25zLmVsZW1lbnQgd2FzIHVuZGVmaW5lZCwgcmVuZGVyLmNhbnZhcyB3YXMgY3JlYXRlZCBidXQgbm90IGFwcGVuZGVkXCIsXCJ3YXJuXCIpLHJ9LG8ucnVuPWZ1bmN0aW9uKHQpeyFmdW5jdGlvbiBuKGkpe3QuZnJhbWVSZXF1ZXN0SWQ9ZShuKSxvLndvcmxkKHQpfSgpfSxvLnN0b3A9ZnVuY3Rpb24oZSl7dChlLmZyYW1lUmVxdWVzdElkKX0sby5zZXRQaXhlbFJhdGlvPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5vcHRpb25zLG89ZS5jYW52YXM7XCJhdXRvXCI9PT10JiYodD11KG8pKSxuLnBpeGVsUmF0aW89dCxvLnNldEF0dHJpYnV0ZShcImRhdGEtcGl4ZWwtcmF0aW9cIix0KSxvLndpZHRoPW4ud2lkdGgqdCxvLmhlaWdodD1uLmhlaWdodCp0LG8uc3R5bGUud2lkdGg9bi53aWR0aCtcInB4XCIsXG5vLnN0eWxlLmhlaWdodD1uLmhlaWdodCtcInB4XCIsZS5jb250ZXh0LnNjYWxlKHQsdCl9LG8ubG9va0F0PWZ1bmN0aW9uKGUsdCxuLG8pe289dm9pZCAwPT09b3x8byx0PWkuaXNBcnJheSh0KT90Olt0XSxuPW58fHt4OjAseTowfTtmb3IodmFyIHI9e21pbjp7eDoxLzAseToxLzB9LG1heDp7eDotMS8wLHk6LTEvMH19LHM9MDtzPHQubGVuZ3RoO3MrPTEpe3ZhciBhPXRbc10sbD1hLmJvdW5kcz9hLmJvdW5kcy5taW46YS5taW58fGEucG9zaXRpb258fGEsYz1hLmJvdW5kcz9hLmJvdW5kcy5tYXg6YS5tYXh8fGEucG9zaXRpb258fGE7bCYmYyYmKGwueDxyLm1pbi54JiYoci5taW4ueD1sLngpLGMueD5yLm1heC54JiYoci5tYXgueD1jLngpLGwueTxyLm1pbi55JiYoci5taW4ueT1sLnkpLGMueT5yLm1heC55JiYoci5tYXgueT1jLnkpKX12YXIgdT1yLm1heC54LXIubWluLngrMipuLngscD1yLm1heC55LXIubWluLnkrMipuLnksZj1lLmNhbnZhcy5oZWlnaHQsbT1lLmNhbnZhcy53aWR0aCx2PW0vZix5PXUvcCxnPTEseD0xO3k+dj94PXkvdjpnPXYveSxlLm9wdGlvbnMuaGFzQm91bmRzPSEwLGUuYm91bmRzLm1pbi54PXIubWluLngsZS5ib3VuZHMubWF4Lng9ci5taW4ueCt1KmcsZS5ib3VuZHMubWluLnk9ci5taW4ueSxlLmJvdW5kcy5tYXgueT1yLm1pbi55K3AqeCxvJiYoZS5ib3VuZHMubWluLngrPS41KnUtdSpnKi41LGUuYm91bmRzLm1heC54Kz0uNSp1LXUqZyouNSxlLmJvdW5kcy5taW4ueSs9LjUqcC1wKngqLjUsZS5ib3VuZHMubWF4LnkrPS41KnAtcCp4Ki41KSxlLmJvdW5kcy5taW4ueC09bi54LGUuYm91bmRzLm1heC54LT1uLngsZS5ib3VuZHMubWluLnktPW4ueSxlLmJvdW5kcy5tYXgueS09bi55LGUubW91c2UmJihkLnNldFNjYWxlKGUubW91c2Use3g6KGUuYm91bmRzLm1heC54LWUuYm91bmRzLm1pbi54KS9lLmNhbnZhcy53aWR0aCx5OihlLmJvdW5kcy5tYXgueS1lLmJvdW5kcy5taW4ueSkvZS5jYW52YXMuaGVpZ2h0fSksXG5kLnNldE9mZnNldChlLm1vdXNlLGUuYm91bmRzLm1pbikpfSxvLnN0YXJ0Vmlld1RyYW5zZm9ybT1mdW5jdGlvbihlKXt2YXIgdD1lLmJvdW5kcy5tYXgueC1lLmJvdW5kcy5taW4ueCxuPWUuYm91bmRzLm1heC55LWUuYm91bmRzLm1pbi55LG89dC9lLm9wdGlvbnMud2lkdGgsaT1uL2Uub3B0aW9ucy5oZWlnaHQ7ZS5jb250ZXh0LnNjYWxlKDEvbywxL2kpLGUuY29udGV4dC50cmFuc2xhdGUoLWUuYm91bmRzLm1pbi54LC1lLmJvdW5kcy5taW4ueSl9LG8uZW5kVmlld1RyYW5zZm9ybT1mdW5jdGlvbihlKXtlLmNvbnRleHQuc2V0VHJhbnNmb3JtKGUub3B0aW9ucy5waXhlbFJhdGlvLDAsMCxlLm9wdGlvbnMucGl4ZWxSYXRpbywwLDApfSxvLndvcmxkPWZ1bmN0aW9uKGUpe3ZhciB0LG49ZS5lbmdpbmUsaT1uLndvcmxkLHU9ZS5jYW52YXMscD1lLmNvbnRleHQsbT1lLm9wdGlvbnMsdj1yLmFsbEJvZGllcyhpKSx5PXIuYWxsQ29uc3RyYWludHMoaSksZz1tLndpcmVmcmFtZXM/bS53aXJlZnJhbWVCYWNrZ3JvdW5kOm0uYmFja2dyb3VuZCx4PVtdLGg9W10sYj17dGltZXN0YW1wOm4udGltaW5nLnRpbWVzdGFtcH07aWYoYS50cmlnZ2VyKGUsXCJiZWZvcmVSZW5kZXJcIixiKSxlLmN1cnJlbnRCYWNrZ3JvdW5kIT09ZyYmZihlLGcpLHAuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPVwic291cmNlLWluXCIscC5maWxsU3R5bGU9XCJ0cmFuc3BhcmVudFwiLHAuZmlsbFJlY3QoMCwwLHUud2lkdGgsdS5oZWlnaHQpLHAuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPVwic291cmNlLW92ZXJcIixtLmhhc0JvdW5kcyl7Zm9yKHQ9MDt0PHYubGVuZ3RoO3QrKyl7dmFyIHc9dlt0XTtzLm92ZXJsYXBzKHcuYm91bmRzLGUuYm91bmRzKSYmeC5wdXNoKHcpfWZvcih0PTA7dDx5Lmxlbmd0aDt0Kyspe3ZhciBTPXlbdF0sQz1TLmJvZHlBLEE9Uy5ib2R5QixQPVMucG9pbnRBLEI9Uy5wb2ludEI7QyYmKFA9Yy5hZGQoQy5wb3NpdGlvbixTLnBvaW50QSkpLFxuQSYmKEI9Yy5hZGQoQS5wb3NpdGlvbixTLnBvaW50QikpLFAmJkImJigocy5jb250YWlucyhlLmJvdW5kcyxQKXx8cy5jb250YWlucyhlLmJvdW5kcyxCKSkmJmgucHVzaChTKSl9by5zdGFydFZpZXdUcmFuc2Zvcm0oZSksZS5tb3VzZSYmKGQuc2V0U2NhbGUoZS5tb3VzZSx7eDooZS5ib3VuZHMubWF4LngtZS5ib3VuZHMubWluLngpL2UuY2FudmFzLndpZHRoLHk6KGUuYm91bmRzLm1heC55LWUuYm91bmRzLm1pbi55KS9lLmNhbnZhcy5oZWlnaHR9KSxkLnNldE9mZnNldChlLm1vdXNlLGUuYm91bmRzLm1pbikpfWVsc2UgaD15LHg9djshbS53aXJlZnJhbWVzfHxuLmVuYWJsZVNsZWVwaW5nJiZtLnNob3dTbGVlcGluZz9vLmJvZGllcyhlLHgscCk6KG0uc2hvd0NvbnZleEh1bGxzJiZvLmJvZHlDb252ZXhIdWxscyhlLHgscCksby5ib2R5V2lyZWZyYW1lcyhlLHgscCkpLG0uc2hvd0JvdW5kcyYmby5ib2R5Qm91bmRzKGUseCxwKSwobS5zaG93QXhlc3x8bS5zaG93QW5nbGVJbmRpY2F0b3IpJiZvLmJvZHlBeGVzKGUseCxwKSxtLnNob3dQb3NpdGlvbnMmJm8uYm9keVBvc2l0aW9ucyhlLHgscCksbS5zaG93VmVsb2NpdHkmJm8uYm9keVZlbG9jaXR5KGUseCxwKSxtLnNob3dJZHMmJm8uYm9keUlkcyhlLHgscCksbS5zaG93U2VwYXJhdGlvbnMmJm8uc2VwYXJhdGlvbnMoZSxuLnBhaXJzLmxpc3QscCksbS5zaG93Q29sbGlzaW9ucyYmby5jb2xsaXNpb25zKGUsbi5wYWlycy5saXN0LHApLG0uc2hvd1ZlcnRleE51bWJlcnMmJm8udmVydGV4TnVtYmVycyhlLHgscCksbS5zaG93TW91c2VQb3NpdGlvbiYmby5tb3VzZVBvc2l0aW9uKGUsZS5tb3VzZSxwKSxvLmNvbnN0cmFpbnRzKGgscCksbS5zaG93QnJvYWRwaGFzZSYmbi5icm9hZHBoYXNlLmNvbnRyb2xsZXI9PT1sJiZvLmdyaWQoZSxuLmJyb2FkcGhhc2UscCksbS5zaG93RGVidWcmJm8uZGVidWcoZSxwKSxtLmhhc0JvdW5kcyYmby5lbmRWaWV3VHJhbnNmb3JtKGUpLFxuYS50cmlnZ2VyKGUsXCJhZnRlclJlbmRlclwiLGIpfSxvLmRlYnVnPWZ1bmN0aW9uKGUsdCl7dmFyIG49dCxvPWUuZW5naW5lLGk9by53b3JsZCxzPW8ubWV0cmljcyxhPWUub3B0aW9ucztyLmFsbEJvZGllcyhpKTtpZihvLnRpbWluZy50aW1lc3RhbXAtKGUuZGVidWdUaW1lc3RhbXB8fDApPj01MDApe3ZhciBsPVwiXCI7cy50aW1pbmcmJihsKz1cImZwczogXCIrTWF0aC5yb3VuZChzLnRpbWluZy5mcHMpK1wiICAgIFwiKSxlLmRlYnVnU3RyaW5nPWwsZS5kZWJ1Z1RpbWVzdGFtcD1vLnRpbWluZy50aW1lc3RhbXB9aWYoZS5kZWJ1Z1N0cmluZyl7bi5mb250PVwiMTJweCBBcmlhbFwiLGEud2lyZWZyYW1lcz9uLmZpbGxTdHlsZT1cInJnYmEoMjU1LDI1NSwyNTUsMC41KVwiOm4uZmlsbFN0eWxlPVwicmdiYSgwLDAsMCwwLjUpXCI7Zm9yKHZhciBjPWUuZGVidWdTdHJpbmcuc3BsaXQoXCJcXG5cIiksZD0wO2Q8Yy5sZW5ndGg7ZCsrKW4uZmlsbFRleHQoY1tkXSw1MCw1MCsxOCpkKX19LG8uY29uc3RyYWludHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dCxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciByPWVbb107aWYoci5yZW5kZXIudmlzaWJsZSYmci5wb2ludEEmJnIucG9pbnRCKXt2YXIgcyxhLGw9ci5ib2R5QSxkPXIuYm9keUI7aWYocz1sP2MuYWRkKGwucG9zaXRpb24sci5wb2ludEEpOnIucG9pbnRBLFwicGluXCI9PT1yLnJlbmRlci50eXBlKW4uYmVnaW5QYXRoKCksbi5hcmMocy54LHMueSwzLDAsMipNYXRoLlBJKSxuLmNsb3NlUGF0aCgpO2Vsc2V7aWYoYT1kP2MuYWRkKGQucG9zaXRpb24sci5wb2ludEIpOnIucG9pbnRCLG4uYmVnaW5QYXRoKCksbi5tb3ZlVG8ocy54LHMueSksXCJzcHJpbmdcIj09PXIucmVuZGVyLnR5cGUpZm9yKHZhciB1LHA9Yy5zdWIoYSxzKSxmPWMucGVycChjLm5vcm1hbGlzZShwKSksbT1NYXRoLmNlaWwoaS5jbGFtcChyLmxlbmd0aC81LDEyLDIwKSksdj0xO3Y8bTt2Kz0xKXU9diUyPT0wPzE6LTEsXG5uLmxpbmVUbyhzLngrcC54Kih2L20pK2YueCp1KjQscy55K3AueSoodi9tKStmLnkqdSo0KTtuLmxpbmVUbyhhLngsYS55KX1yLnJlbmRlci5saW5lV2lkdGgmJihuLmxpbmVXaWR0aD1yLnJlbmRlci5saW5lV2lkdGgsbi5zdHJva2VTdHlsZT1yLnJlbmRlci5zdHJva2VTdHlsZSxuLnN0cm9rZSgpKSxyLnJlbmRlci5hbmNob3JzJiYobi5maWxsU3R5bGU9ci5yZW5kZXIuc3Ryb2tlU3R5bGUsbi5iZWdpblBhdGgoKSxuLmFyYyhzLngscy55LDMsMCwyKk1hdGguUEkpLG4uYXJjKGEueCxhLnksMywwLDIqTWF0aC5QSSksbi5jbG9zZVBhdGgoKSxuLmZpbGwoKSl9fX0sby5ib2R5U2hhZG93cz1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciBvPW4saT0oZS5lbmdpbmUsMCk7aTx0Lmxlbmd0aDtpKyspe3ZhciByPXRbaV07aWYoci5yZW5kZXIudmlzaWJsZSl7aWYoci5jaXJjbGVSYWRpdXMpby5iZWdpblBhdGgoKSxvLmFyYyhyLnBvc2l0aW9uLngsci5wb3NpdGlvbi55LHIuY2lyY2xlUmFkaXVzLDAsMipNYXRoLlBJKSxvLmNsb3NlUGF0aCgpO2Vsc2V7by5iZWdpblBhdGgoKSxvLm1vdmVUbyhyLnZlcnRpY2VzWzBdLngsci52ZXJ0aWNlc1swXS55KTtmb3IodmFyIHM9MTtzPHIudmVydGljZXMubGVuZ3RoO3MrKylvLmxpbmVUbyhyLnZlcnRpY2VzW3NdLngsci52ZXJ0aWNlc1tzXS55KTtvLmNsb3NlUGF0aCgpfXZhciBhPXIucG9zaXRpb24ueC0uNSplLm9wdGlvbnMud2lkdGgsbD1yLnBvc2l0aW9uLnktLjIqZS5vcHRpb25zLmhlaWdodCxjPU1hdGguYWJzKGEpK01hdGguYWJzKGwpO28uc2hhZG93Q29sb3I9XCJyZ2JhKDAsMCwwLDAuMTUpXCIsby5zaGFkb3dPZmZzZXRYPS4wNSphLG8uc2hhZG93T2Zmc2V0WT0uMDUqbCxvLnNoYWRvd0JsdXI9MSsxMipNYXRoLm1pbigxLGMvMWUzKSxvLmZpbGwoKSxvLnNoYWRvd0NvbG9yPW51bGwsby5zaGFkb3dPZmZzZXRYPW51bGwsby5zaGFkb3dPZmZzZXRZPW51bGwsby5zaGFkb3dCbHVyPW51bGx9fX0sXG5vLmJvZGllcz1mdW5jdGlvbihlLHQsbil7dmFyIG8saSxyLHMsYT1uLGw9KGUuZW5naW5lLGUub3B0aW9ucyksYz1sLnNob3dJbnRlcm5hbEVkZ2VzfHwhbC53aXJlZnJhbWVzO2ZvcihyPTA7cjx0Lmxlbmd0aDtyKyspaWYobz10W3JdLG8ucmVuZGVyLnZpc2libGUpZm9yKHM9by5wYXJ0cy5sZW5ndGg+MT8xOjA7czxvLnBhcnRzLmxlbmd0aDtzKyspaWYoaT1vLnBhcnRzW3NdLGkucmVuZGVyLnZpc2libGUpe2lmKGwuc2hvd1NsZWVwaW5nJiZvLmlzU2xlZXBpbmc/YS5nbG9iYWxBbHBoYT0uNSppLnJlbmRlci5vcGFjaXR5OjEhPT1pLnJlbmRlci5vcGFjaXR5JiYoYS5nbG9iYWxBbHBoYT1pLnJlbmRlci5vcGFjaXR5KSxpLnJlbmRlci5zcHJpdGUmJmkucmVuZGVyLnNwcml0ZS50ZXh0dXJlJiYhbC53aXJlZnJhbWVzKXt2YXIgZD1pLnJlbmRlci5zcHJpdGUsdT1wKGUsZC50ZXh0dXJlKTthLnRyYW5zbGF0ZShpLnBvc2l0aW9uLngsaS5wb3NpdGlvbi55KSxhLnJvdGF0ZShpLmFuZ2xlKSxhLmRyYXdJbWFnZSh1LHUud2lkdGgqLWQueE9mZnNldCpkLnhTY2FsZSx1LmhlaWdodCotZC55T2Zmc2V0KmQueVNjYWxlLHUud2lkdGgqZC54U2NhbGUsdS5oZWlnaHQqZC55U2NhbGUpLGEucm90YXRlKC1pLmFuZ2xlKSxhLnRyYW5zbGF0ZSgtaS5wb3NpdGlvbi54LC1pLnBvc2l0aW9uLnkpfWVsc2V7aWYoaS5jaXJjbGVSYWRpdXMpYS5iZWdpblBhdGgoKSxhLmFyYyhpLnBvc2l0aW9uLngsaS5wb3NpdGlvbi55LGkuY2lyY2xlUmFkaXVzLDAsMipNYXRoLlBJKTtlbHNle2EuYmVnaW5QYXRoKCksYS5tb3ZlVG8oaS52ZXJ0aWNlc1swXS54LGkudmVydGljZXNbMF0ueSk7Zm9yKHZhciBmPTE7ZjxpLnZlcnRpY2VzLmxlbmd0aDtmKyspIWkudmVydGljZXNbZi0xXS5pc0ludGVybmFsfHxjP2EubGluZVRvKGkudmVydGljZXNbZl0ueCxpLnZlcnRpY2VzW2ZdLnkpOmEubW92ZVRvKGkudmVydGljZXNbZl0ueCxpLnZlcnRpY2VzW2ZdLnkpLFxuaS52ZXJ0aWNlc1tmXS5pc0ludGVybmFsJiYhYyYmYS5tb3ZlVG8oaS52ZXJ0aWNlc1soZisxKSVpLnZlcnRpY2VzLmxlbmd0aF0ueCxpLnZlcnRpY2VzWyhmKzEpJWkudmVydGljZXMubGVuZ3RoXS55KTthLmxpbmVUbyhpLnZlcnRpY2VzWzBdLngsaS52ZXJ0aWNlc1swXS55KSxhLmNsb3NlUGF0aCgpfWwud2lyZWZyYW1lcz8oYS5saW5lV2lkdGg9MSxhLnN0cm9rZVN0eWxlPVwiI2JiYlwiLGEuc3Ryb2tlKCkpOihhLmZpbGxTdHlsZT1pLnJlbmRlci5maWxsU3R5bGUsaS5yZW5kZXIubGluZVdpZHRoJiYoYS5saW5lV2lkdGg9aS5yZW5kZXIubGluZVdpZHRoLGEuc3Ryb2tlU3R5bGU9aS5yZW5kZXIuc3Ryb2tlU3R5bGUsYS5zdHJva2UoKSksYS5maWxsKCkpfWEuZ2xvYmFsQWxwaGE9MX19LG8uYm9keVdpcmVmcmFtZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBvLGkscixzLGEsbD1uLGM9ZS5vcHRpb25zLnNob3dJbnRlcm5hbEVkZ2VzO2ZvcihsLmJlZ2luUGF0aCgpLHI9MDtyPHQubGVuZ3RoO3IrKylpZihvPXRbcl0sby5yZW5kZXIudmlzaWJsZSlmb3IoYT1vLnBhcnRzLmxlbmd0aD4xPzE6MDthPG8ucGFydHMubGVuZ3RoO2ErKyl7Zm9yKGk9by5wYXJ0c1thXSxsLm1vdmVUbyhpLnZlcnRpY2VzWzBdLngsaS52ZXJ0aWNlc1swXS55KSxzPTE7czxpLnZlcnRpY2VzLmxlbmd0aDtzKyspIWkudmVydGljZXNbcy0xXS5pc0ludGVybmFsfHxjP2wubGluZVRvKGkudmVydGljZXNbc10ueCxpLnZlcnRpY2VzW3NdLnkpOmwubW92ZVRvKGkudmVydGljZXNbc10ueCxpLnZlcnRpY2VzW3NdLnkpLGkudmVydGljZXNbc10uaXNJbnRlcm5hbCYmIWMmJmwubW92ZVRvKGkudmVydGljZXNbKHMrMSklaS52ZXJ0aWNlcy5sZW5ndGhdLngsaS52ZXJ0aWNlc1socysxKSVpLnZlcnRpY2VzLmxlbmd0aF0ueSk7bC5saW5lVG8oaS52ZXJ0aWNlc1swXS54LGkudmVydGljZXNbMF0ueSl9bC5saW5lV2lkdGg9MSxsLnN0cm9rZVN0eWxlPVwiI2JiYlwiLGwuc3Ryb2tlKCl9LFxuby5ib2R5Q29udmV4SHVsbHM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBvLGkscixzPW47Zm9yKHMuYmVnaW5QYXRoKCksaT0wO2k8dC5sZW5ndGg7aSsrKWlmKG89dFtpXSxvLnJlbmRlci52aXNpYmxlJiYxIT09by5wYXJ0cy5sZW5ndGgpe2ZvcihzLm1vdmVUbyhvLnZlcnRpY2VzWzBdLngsby52ZXJ0aWNlc1swXS55KSxyPTE7cjxvLnZlcnRpY2VzLmxlbmd0aDtyKyspcy5saW5lVG8oby52ZXJ0aWNlc1tyXS54LG8udmVydGljZXNbcl0ueSk7cy5saW5lVG8oby52ZXJ0aWNlc1swXS54LG8udmVydGljZXNbMF0ueSl9cy5saW5lV2lkdGg9MSxzLnN0cm9rZVN0eWxlPVwicmdiYSgyNTUsMjU1LDI1NSwwLjIpXCIscy5zdHJva2UoKX0sby52ZXJ0ZXhOdW1iZXJzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbyxpLHIscz1uO2ZvcihvPTA7bzx0Lmxlbmd0aDtvKyspe3ZhciBhPXRbb10ucGFydHM7Zm9yKHI9YS5sZW5ndGg+MT8xOjA7cjxhLmxlbmd0aDtyKyspe3ZhciBsPWFbcl07Zm9yKGk9MDtpPGwudmVydGljZXMubGVuZ3RoO2krKylzLmZpbGxTdHlsZT1cInJnYmEoMjU1LDI1NSwyNTUsMC4yKVwiLHMuZmlsbFRleHQobytcIl9cIitpLGwucG9zaXRpb24ueCsuOCoobC52ZXJ0aWNlc1tpXS54LWwucG9zaXRpb24ueCksbC5wb3NpdGlvbi55Ky44KihsLnZlcnRpY2VzW2ldLnktbC5wb3NpdGlvbi55KSl9fX0sby5tb3VzZVBvc2l0aW9uPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbz1uO28uZmlsbFN0eWxlPVwicmdiYSgyNTUsMjU1LDI1NSwwLjgpXCIsby5maWxsVGV4dCh0LnBvc2l0aW9uLngrXCIgIFwiK3QucG9zaXRpb24ueSx0LnBvc2l0aW9uLngrNSx0LnBvc2l0aW9uLnktNSl9LG8uYm9keUJvdW5kcz1mdW5jdGlvbihlLHQsbil7dmFyIG89bixpPShlLmVuZ2luZSxlLm9wdGlvbnMpO28uYmVnaW5QYXRoKCk7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe1xuaWYodFtyXS5yZW5kZXIudmlzaWJsZSlmb3IodmFyIHM9dFtyXS5wYXJ0cyxhPXMubGVuZ3RoPjE/MTowO2E8cy5sZW5ndGg7YSsrKXt2YXIgbD1zW2FdO28ucmVjdChsLmJvdW5kcy5taW4ueCxsLmJvdW5kcy5taW4ueSxsLmJvdW5kcy5tYXgueC1sLmJvdW5kcy5taW4ueCxsLmJvdW5kcy5tYXgueS1sLmJvdW5kcy5taW4ueSl9fWkud2lyZWZyYW1lcz9vLnN0cm9rZVN0eWxlPVwicmdiYSgyNTUsMjU1LDI1NSwwLjA4KVwiOm8uc3Ryb2tlU3R5bGU9XCJyZ2JhKDAsMCwwLDAuMSlcIixvLmxpbmVXaWR0aD0xLG8uc3Ryb2tlKCl9LG8uYm9keUF4ZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBvLGkscixzLGE9bixsPShlLmVuZ2luZSxlLm9wdGlvbnMpO2ZvcihhLmJlZ2luUGF0aCgpLGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIGM9dFtpXSxkPWMucGFydHM7aWYoYy5yZW5kZXIudmlzaWJsZSlpZihsLnNob3dBeGVzKWZvcihyPWQubGVuZ3RoPjE/MTowO3I8ZC5sZW5ndGg7cisrKWZvcihvPWRbcl0scz0wO3M8by5heGVzLmxlbmd0aDtzKyspe3ZhciB1PW8uYXhlc1tzXTthLm1vdmVUbyhvLnBvc2l0aW9uLngsby5wb3NpdGlvbi55KSxhLmxpbmVUbyhvLnBvc2l0aW9uLngrMjAqdS54LG8ucG9zaXRpb24ueSsyMCp1LnkpfWVsc2UgZm9yKHI9ZC5sZW5ndGg+MT8xOjA7cjxkLmxlbmd0aDtyKyspZm9yKG89ZFtyXSxzPTA7czxvLmF4ZXMubGVuZ3RoO3MrKylhLm1vdmVUbyhvLnBvc2l0aW9uLngsby5wb3NpdGlvbi55KSxhLmxpbmVUbygoby52ZXJ0aWNlc1swXS54K28udmVydGljZXNbby52ZXJ0aWNlcy5sZW5ndGgtMV0ueCkvMiwoby52ZXJ0aWNlc1swXS55K28udmVydGljZXNbby52ZXJ0aWNlcy5sZW5ndGgtMV0ueSkvMil9bC53aXJlZnJhbWVzPyhhLnN0cm9rZVN0eWxlPVwiaW5kaWFucmVkXCIsYS5saW5lV2lkdGg9MSk6KGEuc3Ryb2tlU3R5bGU9XCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNClcIixhLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj1cIm92ZXJsYXlcIixcbmEubGluZVdpZHRoPTIpLGEuc3Ryb2tlKCksYS5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249XCJzb3VyY2Utb3ZlclwifSxvLmJvZHlQb3NpdGlvbnM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBvLGkscixzLGE9bixsPShlLmVuZ2luZSxlLm9wdGlvbnMpO2ZvcihhLmJlZ2luUGF0aCgpLHI9MDtyPHQubGVuZ3RoO3IrKylpZihvPXRbcl0sby5yZW5kZXIudmlzaWJsZSlmb3Iocz0wO3M8by5wYXJ0cy5sZW5ndGg7cysrKWk9by5wYXJ0c1tzXSxhLmFyYyhpLnBvc2l0aW9uLngsaS5wb3NpdGlvbi55LDMsMCwyKk1hdGguUEksITEpLGEuY2xvc2VQYXRoKCk7Zm9yKGwud2lyZWZyYW1lcz9hLmZpbGxTdHlsZT1cImluZGlhbnJlZFwiOmEuZmlsbFN0eWxlPVwicmdiYSgwLDAsMCwwLjUpXCIsYS5maWxsKCksYS5iZWdpblBhdGgoKSxyPTA7cjx0Lmxlbmd0aDtyKyspbz10W3JdLG8ucmVuZGVyLnZpc2libGUmJihhLmFyYyhvLnBvc2l0aW9uUHJldi54LG8ucG9zaXRpb25QcmV2LnksMiwwLDIqTWF0aC5QSSwhMSksYS5jbG9zZVBhdGgoKSk7YS5maWxsU3R5bGU9XCJyZ2JhKDI1NSwxNjUsMCwwLjgpXCIsYS5maWxsKCl9LG8uYm9keVZlbG9jaXR5PWZ1bmN0aW9uKGUsdCxuKXt2YXIgbz1uO28uYmVnaW5QYXRoKCk7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciByPXRbaV07ci5yZW5kZXIudmlzaWJsZSYmKG8ubW92ZVRvKHIucG9zaXRpb24ueCxyLnBvc2l0aW9uLnkpLG8ubGluZVRvKHIucG9zaXRpb24ueCsyKihyLnBvc2l0aW9uLngtci5wb3NpdGlvblByZXYueCksci5wb3NpdGlvbi55KzIqKHIucG9zaXRpb24ueS1yLnBvc2l0aW9uUHJldi55KSkpfW8ubGluZVdpZHRoPTMsby5zdHJva2VTdHlsZT1cImNvcm5mbG93ZXJibHVlXCIsby5zdHJva2UoKX0sby5ib2R5SWRzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbyxpLHI9bjtmb3Iobz0wO288dC5sZW5ndGg7bysrKWlmKHRbb10ucmVuZGVyLnZpc2libGUpe3ZhciBzPXRbb10ucGFydHNcbjtmb3IoaT1zLmxlbmd0aD4xPzE6MDtpPHMubGVuZ3RoO2krKyl7dmFyIGE9c1tpXTtyLmZvbnQ9XCIxMnB4IEFyaWFsXCIsci5maWxsU3R5bGU9XCJyZ2JhKDI1NSwyNTUsMjU1LDAuNSlcIixyLmZpbGxUZXh0KGEuaWQsYS5wb3NpdGlvbi54KzEwLGEucG9zaXRpb24ueS0xMCl9fX0sby5jb2xsaXNpb25zPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbyxpLHIscyxhPW4sbD1lLm9wdGlvbnM7Zm9yKGEuYmVnaW5QYXRoKCkscj0wO3I8dC5sZW5ndGg7cisrKWlmKG89dFtyXSxvLmlzQWN0aXZlKWZvcihpPW8uY29sbGlzaW9uLHM9MDtzPG8uYWN0aXZlQ29udGFjdHMubGVuZ3RoO3MrKyl7dmFyIGM9by5hY3RpdmVDb250YWN0c1tzXSxkPWMudmVydGV4O2EucmVjdChkLngtMS41LGQueS0xLjUsMy41LDMuNSl9Zm9yKGwud2lyZWZyYW1lcz9hLmZpbGxTdHlsZT1cInJnYmEoMjU1LDI1NSwyNTUsMC43KVwiOmEuZmlsbFN0eWxlPVwib3JhbmdlXCIsYS5maWxsKCksYS5iZWdpblBhdGgoKSxyPTA7cjx0Lmxlbmd0aDtyKyspaWYobz10W3JdLG8uaXNBY3RpdmUmJihpPW8uY29sbGlzaW9uLG8uYWN0aXZlQ29udGFjdHMubGVuZ3RoPjApKXt2YXIgdT1vLmFjdGl2ZUNvbnRhY3RzWzBdLnZlcnRleC54LHA9by5hY3RpdmVDb250YWN0c1swXS52ZXJ0ZXgueTsyPT09by5hY3RpdmVDb250YWN0cy5sZW5ndGgmJih1PShvLmFjdGl2ZUNvbnRhY3RzWzBdLnZlcnRleC54K28uYWN0aXZlQ29udGFjdHNbMV0udmVydGV4LngpLzIscD0oby5hY3RpdmVDb250YWN0c1swXS52ZXJ0ZXgueStvLmFjdGl2ZUNvbnRhY3RzWzFdLnZlcnRleC55KS8yKSxpLmJvZHlCPT09aS5zdXBwb3J0c1swXS5ib2R5fHwhMD09PWkuYm9keUEuaXNTdGF0aWM/YS5tb3ZlVG8odS04Kmkubm9ybWFsLngscC04Kmkubm9ybWFsLnkpOmEubW92ZVRvKHUrOCppLm5vcm1hbC54LHArOCppLm5vcm1hbC55KSxhLmxpbmVUbyh1LHApfVxubC53aXJlZnJhbWVzP2Euc3Ryb2tlU3R5bGU9XCJyZ2JhKDI1NSwxNjUsMCwwLjcpXCI6YS5zdHJva2VTdHlsZT1cIm9yYW5nZVwiLGEubGluZVdpZHRoPTEsYS5zdHJva2UoKX0sby5zZXBhcmF0aW9ucz1mdW5jdGlvbihlLHQsbil7dmFyIG8saSxyLHMsYSxsPW4sYz1lLm9wdGlvbnM7Zm9yKGwuYmVnaW5QYXRoKCksYT0wO2E8dC5sZW5ndGg7YSsrKWlmKG89dFthXSxvLmlzQWN0aXZlKXtpPW8uY29sbGlzaW9uLHI9aS5ib2R5QSxzPWkuYm9keUI7dmFyIGQ9MTtzLmlzU3RhdGljfHxyLmlzU3RhdGljfHwoZD0uNSkscy5pc1N0YXRpYyYmKGQ9MCksbC5tb3ZlVG8ocy5wb3NpdGlvbi54LHMucG9zaXRpb24ueSksbC5saW5lVG8ocy5wb3NpdGlvbi54LWkucGVuZXRyYXRpb24ueCpkLHMucG9zaXRpb24ueS1pLnBlbmV0cmF0aW9uLnkqZCksZD0xLHMuaXNTdGF0aWN8fHIuaXNTdGF0aWN8fChkPS41KSxyLmlzU3RhdGljJiYoZD0wKSxsLm1vdmVUbyhyLnBvc2l0aW9uLngsci5wb3NpdGlvbi55KSxsLmxpbmVUbyhyLnBvc2l0aW9uLngraS5wZW5ldHJhdGlvbi54KmQsci5wb3NpdGlvbi55K2kucGVuZXRyYXRpb24ueSpkKX1jLndpcmVmcmFtZXM/bC5zdHJva2VTdHlsZT1cInJnYmEoMjU1LDE2NSwwLDAuNSlcIjpsLnN0cm9rZVN0eWxlPVwib3JhbmdlXCIsbC5zdHJva2UoKX0sby5ncmlkPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbz1uO2Uub3B0aW9ucy53aXJlZnJhbWVzP28uc3Ryb2tlU3R5bGU9XCJyZ2JhKDI1NSwxODAsMCwwLjEpXCI6by5zdHJva2VTdHlsZT1cInJnYmEoMjU1LDE4MCwwLDAuNSlcIixvLmJlZ2luUGF0aCgpO2Zvcih2YXIgcj1pLmtleXModC5idWNrZXRzKSxzPTA7czxyLmxlbmd0aDtzKyspe3ZhciBhPXJbc107aWYoISh0LmJ1Y2tldHNbYV0ubGVuZ3RoPDIpKXt2YXIgbD1hLnNwbGl0KC9DfFIvKVxuO28ucmVjdCguNStwYXJzZUludChsWzFdLDEwKSp0LmJ1Y2tldFdpZHRoLC41K3BhcnNlSW50KGxbMl0sMTApKnQuYnVja2V0SGVpZ2h0LHQuYnVja2V0V2lkdGgsdC5idWNrZXRIZWlnaHQpfX1vLmxpbmVXaWR0aD0xLG8uc3Ryb2tlKCl9LG8uaW5zcGVjdG9yPWZ1bmN0aW9uKGUsdCl7dmFyIG4sbz0oZS5lbmdpbmUsZS5zZWxlY3RlZCksaT1lLnJlbmRlcixyPWkub3B0aW9ucztpZihyLmhhc0JvdW5kcyl7dmFyIHM9aS5ib3VuZHMubWF4LngtaS5ib3VuZHMubWluLngsYT1pLmJvdW5kcy5tYXgueS1pLmJvdW5kcy5taW4ueSxsPXMvaS5vcHRpb25zLndpZHRoLGM9YS9pLm9wdGlvbnMuaGVpZ2h0O3Quc2NhbGUoMS9sLDEvYyksdC50cmFuc2xhdGUoLWkuYm91bmRzLm1pbi54LC1pLmJvdW5kcy5taW4ueSl9Zm9yKHZhciBkPTA7ZDxvLmxlbmd0aDtkKyspe3ZhciB1PW9bZF0uZGF0YTtzd2l0Y2godC50cmFuc2xhdGUoLjUsLjUpLHQubGluZVdpZHRoPTEsdC5zdHJva2VTdHlsZT1cInJnYmEoMjU1LDE2NSwwLDAuOSlcIix0LnNldExpbmVEYXNoKFsxLDJdKSx1LnR5cGUpe2Nhc2VcImJvZHlcIjpuPXUuYm91bmRzLHQuYmVnaW5QYXRoKCksdC5yZWN0KE1hdGguZmxvb3Iobi5taW4ueC0zKSxNYXRoLmZsb29yKG4ubWluLnktMyksTWF0aC5mbG9vcihuLm1heC54LW4ubWluLngrNiksTWF0aC5mbG9vcihuLm1heC55LW4ubWluLnkrNikpLHQuY2xvc2VQYXRoKCksdC5zdHJva2UoKTticmVhaztjYXNlXCJjb25zdHJhaW50XCI6dmFyIHA9dS5wb2ludEE7dS5ib2R5QSYmKHA9dS5wb2ludEIpLHQuYmVnaW5QYXRoKCksdC5hcmMocC54LHAueSwxMCwwLDIqTWF0aC5QSSksdC5jbG9zZVBhdGgoKSx0LnN0cm9rZSgpfXQuc2V0TGluZURhc2goW10pLHQudHJhbnNsYXRlKC0uNSwtLjUpfW51bGwhPT1lLnNlbGVjdFN0YXJ0JiYodC50cmFuc2xhdGUoLjUsLjUpLHQubGluZVdpZHRoPTEsdC5zdHJva2VTdHlsZT1cInJnYmEoMjU1LDE2NSwwLDAuNilcIixcbnQuZmlsbFN0eWxlPVwicmdiYSgyNTUsMTY1LDAsMC4xKVwiLG49ZS5zZWxlY3RCb3VuZHMsdC5iZWdpblBhdGgoKSx0LnJlY3QoTWF0aC5mbG9vcihuLm1pbi54KSxNYXRoLmZsb29yKG4ubWluLnkpLE1hdGguZmxvb3Iobi5tYXgueC1uLm1pbi54KSxNYXRoLmZsb29yKG4ubWF4Lnktbi5taW4ueSkpLHQuY2xvc2VQYXRoKCksdC5zdHJva2UoKSx0LmZpbGwoKSx0LnRyYW5zbGF0ZSgtLjUsLS41KSksci5oYXNCb3VuZHMmJnQuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKX07dmFyIG49ZnVuY3Rpb24oZSx0KXt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3JldHVybiBuLndpZHRoPWUsbi5oZWlnaHQ9dCxuLm9uY29udGV4dG1lbnU9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sbi5vbnNlbGVjdHN0YXJ0PWZ1bmN0aW9uKCl7cmV0dXJuITF9LG59LHU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvfHwxKS8odC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvfHx0Lm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW98fHQubXNCYWNraW5nU3RvcmVQaXhlbFJhdGlvfHx0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvfHx0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW98fDEpfSxwPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS50ZXh0dXJlc1t0XTtyZXR1cm4gbnx8KG49ZS50ZXh0dXJlc1t0XT1uZXcgSW1hZ2Usbi5zcmM9dCxuKX0sZj1mdW5jdGlvbihlLHQpe3ZhciBuPXQ7LyhqcGd8Z2lmfHBuZykkLy50ZXN0KHQpJiYobj1cInVybChcIit0K1wiKVwiKSxlLmNhbnZhcy5zdHlsZS5iYWNrZ3JvdW5kPW4sZS5jYW52YXMuc3R5bGUuYmFja2dyb3VuZFNpemU9XCJjb250YWluXCIsZS5jdXJyZW50QmFja2dyb3VuZD10fX0oKX0se1wiLi4vYm9keS9Db21wb3NpdGVcIjoyLFwiLi4vY29sbGlzaW9uL0dyaWRcIjo2LFwiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2NvcmUvRXZlbnRzXCI6MTYsXG5cIi4uL2NvcmUvTW91c2VcIjoxOSxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6Mjh9XSwzMjpbZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXt9O3QuZXhwb3J0cz1vO3ZhciBpPWUoXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIikscj1lKFwiLi4vYm9keS9Db21wb3NpdGVcIikscz1lKFwiLi4vY29yZS9Db21tb25cIiksYT1lKFwiLi4vY29yZS9FdmVudHNcIiksbD1lKFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCIpOyFmdW5jdGlvbigpe3ZhciBlLHQ7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKGU9d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbihlKXt3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe2Uocy5ub3coKSl9LDFlMy82MCl9LHQ9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZXx8d2luZG93Lm1zQ2FuY2VsQW5pbWF0aW9uRnJhbWUpLG8uY3JlYXRlPWZ1bmN0aW9uKGUpe3Mud2FybihcIlJlbmRlclBpeGkuY3JlYXRlOiBNYXR0ZXIuUmVuZGVyUGl4aSBpcyBkZXByZWNhdGVkIChzZWUgZG9jcylcIik7dmFyIHQ9e2NvbnRyb2xsZXI6byxlbmdpbmU6bnVsbCxlbGVtZW50Om51bGwsZnJhbWVSZXF1ZXN0SWQ6bnVsbCxjYW52YXM6bnVsbCxyZW5kZXJlcjpudWxsLGNvbnRhaW5lcjpudWxsLHNwcml0ZUNvbnRhaW5lcjpudWxsLHBpeGlPcHRpb25zOm51bGwsb3B0aW9uczp7d2lkdGg6ODAwLGhlaWdodDo2MDAsYmFja2dyb3VuZDpcIiNmYWZhZmFcIix3aXJlZnJhbWVCYWNrZ3JvdW5kOlwiIzIyMlwiLGhhc0JvdW5kczohMSxlbmFibGVkOiEwLHdpcmVmcmFtZXM6ITAsc2hvd1NsZWVwaW5nOiEwLHNob3dEZWJ1ZzohMSxcbnNob3dCcm9hZHBoYXNlOiExLHNob3dCb3VuZHM6ITEsc2hvd1ZlbG9jaXR5OiExLHNob3dDb2xsaXNpb25zOiExLHNob3dBeGVzOiExLHNob3dQb3NpdGlvbnM6ITEsc2hvd0FuZ2xlSW5kaWNhdG9yOiExLHNob3dJZHM6ITEsc2hvd1NoYWRvd3M6ITF9fSxuPXMuZXh0ZW5kKHQsZSksaT0hbi5vcHRpb25zLndpcmVmcmFtZXMmJlwidHJhbnNwYXJlbnRcIj09PW4ub3B0aW9ucy5iYWNrZ3JvdW5kO3JldHVybiBuLnBpeGlPcHRpb25zPW4ucGl4aU9wdGlvbnN8fHt2aWV3Om4uY2FudmFzLHRyYW5zcGFyZW50OmksYW50aWFsaWFzOiEwLGJhY2tncm91bmRDb2xvcjplLmJhY2tncm91bmR9LG4ubW91c2U9ZS5tb3VzZSxuLmVuZ2luZT1lLmVuZ2luZSxuLnJlbmRlcmVyPW4ucmVuZGVyZXJ8fG5ldyBQSVhJLldlYkdMUmVuZGVyZXIobi5vcHRpb25zLndpZHRoLG4ub3B0aW9ucy5oZWlnaHQsbi5waXhpT3B0aW9ucyksbi5jb250YWluZXI9bi5jb250YWluZXJ8fG5ldyBQSVhJLkNvbnRhaW5lcixuLnNwcml0ZUNvbnRhaW5lcj1uLnNwcml0ZUNvbnRhaW5lcnx8bmV3IFBJWEkuQ29udGFpbmVyLG4uY2FudmFzPW4uY2FudmFzfHxuLnJlbmRlcmVyLnZpZXcsbi5ib3VuZHM9bi5ib3VuZHN8fHttaW46e3g6MCx5OjB9LG1heDp7eDpuLm9wdGlvbnMud2lkdGgseTpuLm9wdGlvbnMuaGVpZ2h0fX0sYS5vbihuLmVuZ2luZSxcImJlZm9yZVVwZGF0ZVwiLGZ1bmN0aW9uKCl7by5jbGVhcihuKX0pLG4udGV4dHVyZXM9e30sbi5zcHJpdGVzPXt9LG4ucHJpbWl0aXZlcz17fSxuLmNvbnRhaW5lci5hZGRDaGlsZChuLnNwcml0ZUNvbnRhaW5lcikscy5pc0VsZW1lbnQobi5lbGVtZW50KT9uLmVsZW1lbnQuYXBwZW5kQ2hpbGQobi5jYW52YXMpOnMud2FybignTm8gXCJyZW5kZXIuZWxlbWVudFwiIHBhc3NlZCwgXCJyZW5kZXIuY2FudmFzXCIgd2FzIG5vdCBpbnNlcnRlZCBpbnRvIGRvY3VtZW50LicpLG4uY2FudmFzLm9uY29udGV4dG1lbnU9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sXG5uLmNhbnZhcy5vbnNlbGVjdHN0YXJ0PWZ1bmN0aW9uKCl7cmV0dXJuITF9LG59LG8ucnVuPWZ1bmN0aW9uKHQpeyFmdW5jdGlvbiBuKGkpe3QuZnJhbWVSZXF1ZXN0SWQ9ZShuKSxvLndvcmxkKHQpfSgpfSxvLnN0b3A9ZnVuY3Rpb24oZSl7dChlLmZyYW1lUmVxdWVzdElkKX0sby5jbGVhcj1mdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5jb250YWluZXIsbj1lLnNwcml0ZUNvbnRhaW5lcjt0LmNoaWxkcmVuWzBdOyl0LnJlbW92ZUNoaWxkKHQuY2hpbGRyZW5bMF0pO2Zvcig7bi5jaGlsZHJlblswXTspbi5yZW1vdmVDaGlsZChuLmNoaWxkcmVuWzBdKTt2YXIgbz1lLnNwcml0ZXNbXCJiZy0wXCJdO2UudGV4dHVyZXM9e30sZS5zcHJpdGVzPXt9LGUucHJpbWl0aXZlcz17fSxlLnNwcml0ZXNbXCJiZy0wXCJdPW8sbyYmdC5hZGRDaGlsZEF0KG8sMCksZS5jb250YWluZXIuYWRkQ2hpbGQoZS5zcHJpdGVDb250YWluZXIpLGUuY3VycmVudEJhY2tncm91bmQ9bnVsbCx0LnNjYWxlLnNldCgxLDEpLHQucG9zaXRpb24uc2V0KDAsMCl9LG8uc2V0QmFja2dyb3VuZD1mdW5jdGlvbihlLHQpe2lmKGUuY3VycmVudEJhY2tncm91bmQhPT10KXt2YXIgbj10LmluZGV4T2YmJi0xIT09dC5pbmRleE9mKFwiI1wiKSxvPWUuc3ByaXRlc1tcImJnLTBcIl07aWYobil7dmFyIGk9cy5jb2xvclRvTnVtYmVyKHQpO2UucmVuZGVyZXIuYmFja2dyb3VuZENvbG9yPWksbyYmZS5jb250YWluZXIucmVtb3ZlQ2hpbGQobyl9ZWxzZSBpZighbyl7dmFyIHI9ZChlLHQpO289ZS5zcHJpdGVzW1wiYmctMFwiXT1uZXcgUElYSS5TcHJpdGUociksby5wb3NpdGlvbi54PTAsby5wb3NpdGlvbi55PTAsZS5jb250YWluZXIuYWRkQ2hpbGRBdChvLDApfWUuY3VycmVudEJhY2tncm91bmQ9dH19LG8ud29ybGQ9ZnVuY3Rpb24oZSl7XG52YXIgdCxuPWUuZW5naW5lLHM9bi53b3JsZCxhPWUucmVuZGVyZXIsYz1lLmNvbnRhaW5lcixkPWUub3B0aW9ucyx1PXIuYWxsQm9kaWVzKHMpLHA9ci5hbGxDb25zdHJhaW50cyhzKSxmPVtdO2Qud2lyZWZyYW1lcz9vLnNldEJhY2tncm91bmQoZSxkLndpcmVmcmFtZUJhY2tncm91bmQpOm8uc2V0QmFja2dyb3VuZChlLGQuYmFja2dyb3VuZCk7dmFyIG09ZS5ib3VuZHMubWF4LngtZS5ib3VuZHMubWluLngsdj1lLmJvdW5kcy5tYXgueS1lLmJvdW5kcy5taW4ueSx5PW0vZS5vcHRpb25zLndpZHRoLGc9di9lLm9wdGlvbnMuaGVpZ2h0O2lmKGQuaGFzQm91bmRzKXtmb3IodD0wO3Q8dS5sZW5ndGg7dCsrKXt2YXIgeD11W3RdO3gucmVuZGVyLnNwcml0ZS52aXNpYmxlPWkub3ZlcmxhcHMoeC5ib3VuZHMsZS5ib3VuZHMpfWZvcih0PTA7dDxwLmxlbmd0aDt0Kyspe3ZhciBoPXBbdF0sYj1oLmJvZHlBLHc9aC5ib2R5QixTPWgucG9pbnRBLEM9aC5wb2ludEI7YiYmKFM9bC5hZGQoYi5wb3NpdGlvbixoLnBvaW50QSkpLHcmJihDPWwuYWRkKHcucG9zaXRpb24saC5wb2ludEIpKSxTJiZDJiYoKGkuY29udGFpbnMoZS5ib3VuZHMsUyl8fGkuY29udGFpbnMoZS5ib3VuZHMsQykpJiZmLnB1c2goaCkpfWMuc2NhbGUuc2V0KDEveSwxL2cpLGMucG9zaXRpb24uc2V0KC1lLmJvdW5kcy5taW4ueCooMS95KSwtZS5ib3VuZHMubWluLnkqKDEvZykpfWVsc2UgZj1wO2Zvcih0PTA7dDx1Lmxlbmd0aDt0Kyspby5ib2R5KGUsdVt0XSk7Zm9yKHQ9MDt0PGYubGVuZ3RoO3QrKylvLmNvbnN0cmFpbnQoZSxmW3RdKTthLnJlbmRlcihjKX0sby5jb25zdHJhaW50PWZ1bmN0aW9uKGUsdCl7dmFyIG49KGUuZW5naW5lLHQuYm9keUEpLG89dC5ib2R5QixpPXQucG9pbnRBLHI9dC5wb2ludEIsYT1lLmNvbnRhaW5lcixsPXQucmVuZGVyLGM9XCJjLVwiK3QuaWQsZD1lLnByaW1pdGl2ZXNbY107aWYoZHx8KGQ9ZS5wcmltaXRpdmVzW2NdPW5ldyBQSVhJLkdyYXBoaWNzKSxcbiFsLnZpc2libGV8fCF0LnBvaW50QXx8IXQucG9pbnRCKXJldHVybiB2b2lkIGQuY2xlYXIoKTstMT09PXMuaW5kZXhPZihhLmNoaWxkcmVuLGQpJiZhLmFkZENoaWxkKGQpLGQuY2xlYXIoKSxkLmJlZ2luRmlsbCgwLDApLGQubGluZVN0eWxlKGwubGluZVdpZHRoLHMuY29sb3JUb051bWJlcihsLnN0cm9rZVN0eWxlKSwxKSxuP2QubW92ZVRvKG4ucG9zaXRpb24ueCtpLngsbi5wb3NpdGlvbi55K2kueSk6ZC5tb3ZlVG8oaS54LGkueSksbz9kLmxpbmVUbyhvLnBvc2l0aW9uLngrci54LG8ucG9zaXRpb24ueStyLnkpOmQubGluZVRvKHIueCxyLnkpLGQuZW5kRmlsbCgpfSxvLmJvZHk9ZnVuY3Rpb24oZSx0KXt2YXIgbz0oZS5lbmdpbmUsdC5yZW5kZXIpO2lmKG8udmlzaWJsZSlpZihvLnNwcml0ZSYmby5zcHJpdGUudGV4dHVyZSl7dmFyIGk9XCJiLVwiK3QuaWQscj1lLnNwcml0ZXNbaV0sYT1lLnNwcml0ZUNvbnRhaW5lcjtyfHwocj1lLnNwcml0ZXNbaV09bihlLHQpKSwtMT09PXMuaW5kZXhPZihhLmNoaWxkcmVuLHIpJiZhLmFkZENoaWxkKHIpLHIucG9zaXRpb24ueD10LnBvc2l0aW9uLngsci5wb3NpdGlvbi55PXQucG9zaXRpb24ueSxyLnJvdGF0aW9uPXQuYW5nbGUsci5zY2FsZS54PW8uc3ByaXRlLnhTY2FsZXx8MSxyLnNjYWxlLnk9by5zcHJpdGUueVNjYWxlfHwxfWVsc2V7dmFyIGw9XCJiLVwiK3QuaWQsZD1lLnByaW1pdGl2ZXNbbF0sdT1lLmNvbnRhaW5lcjtkfHwoZD1lLnByaW1pdGl2ZXNbbF09YyhlLHQpLGQuaW5pdGlhbEFuZ2xlPXQuYW5nbGUpLC0xPT09cy5pbmRleE9mKHUuY2hpbGRyZW4sZCkmJnUuYWRkQ2hpbGQoZCksZC5wb3NpdGlvbi54PXQucG9zaXRpb24ueCxkLnBvc2l0aW9uLnk9dC5wb3NpdGlvbi55LGQucm90YXRpb249dC5hbmdsZS1kLmluaXRpYWxBbmdsZX19O3ZhciBuPWZ1bmN0aW9uKGUsdCl7dmFyIG49dC5yZW5kZXIsbz1uLnNwcml0ZS50ZXh0dXJlLGk9ZChlLG8pLHI9bmV3IFBJWEkuU3ByaXRlKGkpXG47cmV0dXJuIHIuYW5jaG9yLng9dC5yZW5kZXIuc3ByaXRlLnhPZmZzZXQsci5hbmNob3IueT10LnJlbmRlci5zcHJpdGUueU9mZnNldCxyfSxjPWZ1bmN0aW9uKGUsdCl7dmFyIG4sbz10LnJlbmRlcixpPWUub3B0aW9ucyxyPW5ldyBQSVhJLkdyYXBoaWNzLGE9cy5jb2xvclRvTnVtYmVyKG8uZmlsbFN0eWxlKSxsPXMuY29sb3JUb051bWJlcihvLnN0cm9rZVN0eWxlKSxjPXMuY29sb3JUb051bWJlcihvLnN0cm9rZVN0eWxlKSxkPXMuY29sb3JUb051bWJlcihcIiNiYmJcIiksdT1zLmNvbG9yVG9OdW1iZXIoXCIjQ0Q1QzVDXCIpO3IuY2xlYXIoKTtmb3IodmFyIHA9dC5wYXJ0cy5sZW5ndGg+MT8xOjA7cDx0LnBhcnRzLmxlbmd0aDtwKyspe249dC5wYXJ0c1twXSxpLndpcmVmcmFtZXM/KHIuYmVnaW5GaWxsKDAsMCksci5saW5lU3R5bGUoMSxkLDEpKTooci5iZWdpbkZpbGwoYSwxKSxyLmxpbmVTdHlsZShvLmxpbmVXaWR0aCxsLDEpKSxyLm1vdmVUbyhuLnZlcnRpY2VzWzBdLngtdC5wb3NpdGlvbi54LG4udmVydGljZXNbMF0ueS10LnBvc2l0aW9uLnkpO2Zvcih2YXIgZj0xO2Y8bi52ZXJ0aWNlcy5sZW5ndGg7ZisrKXIubGluZVRvKG4udmVydGljZXNbZl0ueC10LnBvc2l0aW9uLngsbi52ZXJ0aWNlc1tmXS55LXQucG9zaXRpb24ueSk7ci5saW5lVG8obi52ZXJ0aWNlc1swXS54LXQucG9zaXRpb24ueCxuLnZlcnRpY2VzWzBdLnktdC5wb3NpdGlvbi55KSxyLmVuZEZpbGwoKSwoaS5zaG93QW5nbGVJbmRpY2F0b3J8fGkuc2hvd0F4ZXMpJiYoci5iZWdpbkZpbGwoMCwwKSxpLndpcmVmcmFtZXM/ci5saW5lU3R5bGUoMSx1LDEpOnIubGluZVN0eWxlKDEsYyksci5tb3ZlVG8obi5wb3NpdGlvbi54LXQucG9zaXRpb24ueCxuLnBvc2l0aW9uLnktdC5wb3NpdGlvbi55KSxcbnIubGluZVRvKChuLnZlcnRpY2VzWzBdLngrbi52ZXJ0aWNlc1tuLnZlcnRpY2VzLmxlbmd0aC0xXS54KS8yLXQucG9zaXRpb24ueCwobi52ZXJ0aWNlc1swXS55K24udmVydGljZXNbbi52ZXJ0aWNlcy5sZW5ndGgtMV0ueSkvMi10LnBvc2l0aW9uLnkpLHIuZW5kRmlsbCgpKX1yZXR1cm4gcn0sZD1mdW5jdGlvbihlLHQpe3ZhciBuPWUudGV4dHVyZXNbdF07cmV0dXJuIG58fChuPWUudGV4dHVyZXNbdF09UElYSS5UZXh0dXJlLmZyb21JbWFnZSh0KSksbn19KCl9LHtcIi4uL2JvZHkvQ29tcG9zaXRlXCI6MixcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL0V2ZW50c1wiOjE2LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9WZWN0b3JcIjoyOH1dfSx7fSxbMzBdKSgzMCl9KTsiLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIvKiBGb250IEZhY2UgT2JzZXJ2ZXIgdjIuMS4wIC0gwqkgQnJhbSBTdGVpbi4gTGljZW5zZTogQlNELTMtQ2xhdXNlICovKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gbChhLGIpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsYiwhMSk6YS5hdHRhY2hFdmVudChcInNjcm9sbFwiLGIpfWZ1bmN0aW9uIG0oYSl7ZG9jdW1lbnQuYm9keT9hKCk6ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcj9kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLGZ1bmN0aW9uIGMoKXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLGMpO2EoKX0pOmRvY3VtZW50LmF0dGFjaEV2ZW50KFwib25yZWFkeXN0YXRlY2hhbmdlXCIsZnVuY3Rpb24gaygpe2lmKFwiaW50ZXJhY3RpdmVcIj09ZG9jdW1lbnQucmVhZHlTdGF0ZXx8XCJjb21wbGV0ZVwiPT1kb2N1bWVudC5yZWFkeVN0YXRlKWRvY3VtZW50LmRldGFjaEV2ZW50KFwib25yZWFkeXN0YXRlY2hhbmdlXCIsayksYSgpfSl9O2Z1bmN0aW9uIHQoYSl7dGhpcy5hPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7dGhpcy5hLnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpO3RoaXMuYS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhKSk7dGhpcy5iPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3RoaXMuYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0aGlzLmg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7dGhpcy5mPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3RoaXMuZz0tMTt0aGlzLmIuc3R5bGUuY3NzVGV4dD1cIm1heC13aWR0aDpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7b3ZlcmZsb3c6c2Nyb2xsO2ZvbnQtc2l6ZToxNnB4O1wiO3RoaXMuYy5zdHlsZS5jc3NUZXh0PVwibWF4LXdpZHRoOm5vbmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246YWJzb2x1dGU7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtvdmVyZmxvdzpzY3JvbGw7Zm9udC1zaXplOjE2cHg7XCI7XG50aGlzLmYuc3R5bGUuY3NzVGV4dD1cIm1heC13aWR0aDpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7b3ZlcmZsb3c6c2Nyb2xsO2ZvbnQtc2l6ZToxNnB4O1wiO3RoaXMuaC5zdHlsZS5jc3NUZXh0PVwiZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MjAwJTtoZWlnaHQ6MjAwJTtmb250LXNpemU6MTZweDttYXgtd2lkdGg6bm9uZTtcIjt0aGlzLmIuYXBwZW5kQ2hpbGQodGhpcy5oKTt0aGlzLmMuYXBwZW5kQ2hpbGQodGhpcy5mKTt0aGlzLmEuYXBwZW5kQ2hpbGQodGhpcy5iKTt0aGlzLmEuYXBwZW5kQ2hpbGQodGhpcy5jKX1cbmZ1bmN0aW9uIHUoYSxiKXthLmEuc3R5bGUuY3NzVGV4dD1cIm1heC13aWR0aDpub25lO21pbi13aWR0aDoyMHB4O21pbi1oZWlnaHQ6MjBweDtkaXNwbGF5OmlubGluZS1ibG9jaztvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6YXV0bzttYXJnaW46MDtwYWRkaW5nOjA7dG9wOi05OTlweDt3aGl0ZS1zcGFjZTpub3dyYXA7Zm9udC1zeW50aGVzaXM6bm9uZTtmb250OlwiK2IrXCI7XCJ9ZnVuY3Rpb24geihhKXt2YXIgYj1hLmEub2Zmc2V0V2lkdGgsYz1iKzEwMDthLmYuc3R5bGUud2lkdGg9YytcInB4XCI7YS5jLnNjcm9sbExlZnQ9YzthLmIuc2Nyb2xsTGVmdD1hLmIuc2Nyb2xsV2lkdGgrMTAwO3JldHVybiBhLmchPT1iPyhhLmc9YiwhMCk6ITF9ZnVuY3Rpb24gQShhLGIpe2Z1bmN0aW9uIGMoKXt2YXIgYT1rO3ooYSkmJmEuYS5wYXJlbnROb2RlJiZiKGEuZyl9dmFyIGs9YTtsKGEuYixjKTtsKGEuYyxjKTt6KGEpfTtmdW5jdGlvbiBCKGEsYil7dmFyIGM9Ynx8e307dGhpcy5mYW1pbHk9YTt0aGlzLnN0eWxlPWMuc3R5bGV8fFwibm9ybWFsXCI7dGhpcy53ZWlnaHQ9Yy53ZWlnaHR8fFwibm9ybWFsXCI7dGhpcy5zdHJldGNoPWMuc3RyZXRjaHx8XCJub3JtYWxcIn12YXIgQz1udWxsLEQ9bnVsbCxFPW51bGwsRj1udWxsO2Z1bmN0aW9uIEcoKXtpZihudWxsPT09RClpZihKKCkmJi9BcHBsZS8udGVzdCh3aW5kb3cubmF2aWdhdG9yLnZlbmRvcikpe3ZhciBhPS9BcHBsZVdlYktpdFxcLyhbMC05XSspKD86XFwuKFswLTldKykpKD86XFwuKFswLTldKykpLy5leGVjKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTtEPSEhYSYmNjAzPnBhcnNlSW50KGFbMV0sMTApfWVsc2UgRD0hMTtyZXR1cm4gRH1mdW5jdGlvbiBKKCl7bnVsbD09PUYmJihGPSEhZG9jdW1lbnQuZm9udHMpO3JldHVybiBGfVxuZnVuY3Rpb24gSygpe2lmKG51bGw9PT1FKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3RyeXthLnN0eWxlLmZvbnQ9XCJjb25kZW5zZWQgMTAwcHggc2Fucy1zZXJpZlwifWNhdGNoKGIpe31FPVwiXCIhPT1hLnN0eWxlLmZvbnR9cmV0dXJuIEV9ZnVuY3Rpb24gTChhLGIpe3JldHVyblthLnN0eWxlLGEud2VpZ2h0LEsoKT9hLnN0cmV0Y2g6XCJcIixcIjEwMHB4XCIsYl0uam9pbihcIiBcIil9XG5CLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxrPWF8fFwiQkVTYnN3eVwiLHI9MCxuPWJ8fDNFMyxIPShuZXcgRGF0ZSkuZ2V0VGltZSgpO3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihhLGIpe2lmKEooKSYmIUcoKSl7dmFyIE09bmV3IFByb21pc2UoZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBlKCl7KG5ldyBEYXRlKS5nZXRUaW1lKCktSD49bj9iKEVycm9yKFwiXCIrbitcIm1zIHRpbWVvdXQgZXhjZWVkZWRcIikpOmRvY3VtZW50LmZvbnRzLmxvYWQoTChjLCdcIicrYy5mYW1pbHkrJ1wiJyksaykudGhlbihmdW5jdGlvbihjKXsxPD1jLmxlbmd0aD9hKCk6c2V0VGltZW91dChlLDI1KX0sYil9ZSgpfSksTj1uZXcgUHJvbWlzZShmdW5jdGlvbihhLGMpe3I9c2V0VGltZW91dChmdW5jdGlvbigpe2MoRXJyb3IoXCJcIituK1wibXMgdGltZW91dCBleGNlZWRlZFwiKSl9LG4pfSk7UHJvbWlzZS5yYWNlKFtOLE1dKS50aGVuKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHIpO2EoYyl9LFxuYil9ZWxzZSBtKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdigpe3ZhciBiO2lmKGI9LTEhPWYmJi0xIT1nfHwtMSE9ZiYmLTEhPWh8fC0xIT1nJiYtMSE9aCkoYj1mIT1nJiZmIT1oJiZnIT1oKXx8KG51bGw9PT1DJiYoYj0vQXBwbGVXZWJLaXRcXC8oWzAtOV0rKSg/OlxcLihbMC05XSspKS8uZXhlYyh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCksQz0hIWImJig1MzY+cGFyc2VJbnQoYlsxXSwxMCl8fDUzNj09PXBhcnNlSW50KGJbMV0sMTApJiYxMT49cGFyc2VJbnQoYlsyXSwxMCkpKSxiPUMmJihmPT13JiZnPT13JiZoPT13fHxmPT14JiZnPT14JiZoPT14fHxmPT15JiZnPT15JiZoPT15KSksYj0hYjtiJiYoZC5wYXJlbnROb2RlJiZkLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZCksY2xlYXJUaW1lb3V0KHIpLGEoYykpfWZ1bmN0aW9uIEkoKXtpZigobmV3IERhdGUpLmdldFRpbWUoKS1IPj1uKWQucGFyZW50Tm9kZSYmZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpLGIoRXJyb3IoXCJcIitcbm4rXCJtcyB0aW1lb3V0IGV4Y2VlZGVkXCIpKTtlbHNle3ZhciBhPWRvY3VtZW50LmhpZGRlbjtpZighMD09PWF8fHZvaWQgMD09PWEpZj1lLmEub2Zmc2V0V2lkdGgsZz1wLmEub2Zmc2V0V2lkdGgsaD1xLmEub2Zmc2V0V2lkdGgsdigpO3I9c2V0VGltZW91dChJLDUwKX19dmFyIGU9bmV3IHQoaykscD1uZXcgdChrKSxxPW5ldyB0KGspLGY9LTEsZz0tMSxoPS0xLHc9LTEseD0tMSx5PS0xLGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtkLmRpcj1cImx0clwiO3UoZSxMKGMsXCJzYW5zLXNlcmlmXCIpKTt1KHAsTChjLFwic2VyaWZcIikpO3UocSxMKGMsXCJtb25vc3BhY2VcIikpO2QuYXBwZW5kQ2hpbGQoZS5hKTtkLmFwcGVuZENoaWxkKHAuYSk7ZC5hcHBlbmRDaGlsZChxLmEpO2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZCk7dz1lLmEub2Zmc2V0V2lkdGg7eD1wLmEub2Zmc2V0V2lkdGg7eT1xLmEub2Zmc2V0V2lkdGg7SSgpO0EoZSxmdW5jdGlvbihhKXtmPWE7digpfSk7dShlLFxuTChjLCdcIicrYy5mYW1pbHkrJ1wiLHNhbnMtc2VyaWYnKSk7QShwLGZ1bmN0aW9uKGEpe2c9YTt2KCl9KTt1KHAsTChjLCdcIicrYy5mYW1pbHkrJ1wiLHNlcmlmJykpO0EocSxmdW5jdGlvbihhKXtoPWE7digpfSk7dShxLEwoYywnXCInK2MuZmFtaWx5KydcIixtb25vc3BhY2UnKSl9KX0pfTtcIm9iamVjdFwiPT09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1COih3aW5kb3cuRm9udEZhY2VPYnNlcnZlcj1CLHdpbmRvdy5Gb250RmFjZU9ic2VydmVyLnByb3RvdHlwZS5sb2FkPUIucHJvdG90eXBlLmxvYWQpO30oKSk7XG4iLCJpbXBvcnQge1ZlY3Rvcn0gZnJvbSAnbWF0dGVyLWpzL2J1aWxkL21hdHRlci5taW4uanMnO1xyXG4vKipcclxuICogSW1wbGVtZW50cyBzcGF0aWFsIGhhc2hpbmcgdG8gcXVpY2tseSBmaW5kIHRoZSBuZWlnaGJvcnMgb2YgYSBwYXJ0aWNsZVxyXG4gKiB3aXRoaW4gc3VwcG9ydCByYWRpdXMgaFxyXG4gKiBAY2xhc3NcclxuICovXHJcbiBleHBvcnQgY2xhc3MgU3BhdGlhbEhhc2h7XHJcbiAgICAvKipcclxuICAgICAqIEltcGxlbWVudHMgc3BhdGlhbCBoYXNoaW5nIHRvIHF1aWNrbHkgZmluZCB0aGUgbmVpZ2hib3JzIG9mIGEgcGFydGljbGVcclxuICAgICAqIHdpdGhpbiBzdXBwb3J0IHJhZGl1cyBoXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaCAtIHBhcnRpY2xlIGludGVyYWN0aW9uIHJhZGl1c1xyXG4gICAgICogQHBhcmFtIHtWZWN0b3J9IG1pbiBcclxuICAgICAqIEBwYXJhbSB7VmVjdG9yfSBtYXggXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGgsIG1pbiwgbWF4KXtcclxuICAgICAgICAvLyBpbnRlcmFjdGlvbiByYWRpdXNcclxuICAgICAgICB0aGlzLmggPSBoO1xyXG4gICAgICAgIHRoaXMubWluID0gVmVjdG9yLmNsb25lKG1pbik7XHJcbiAgICAgICAgdGhpcy5tYXggPSBWZWN0b3IuY2xvbmUobWF4KTtcclxuXHJcbiAgICAgICAgdGhpcy5zaXplID0gVmVjdG9yLmNyZWF0ZSggTWF0aC5jZWlsKCAodGhpcy5tYXgueCAtIHRoaXMubWluLngpIC8gdGhpcy5oKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLmNlaWwoICh0aGlzLm1heC55IC0gdGhpcy5taW4ueSkgLyB0aGlzLmgpKTtcclxuXHJcbiAgICAgICAgLy8gaW5pdCBncmlkXHJcbiAgICAgICAgdGhpcy5ncmlkID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIFRyYW5zZm9ybSBmcm9tIHdvcmxkIGNvb3JkaW5hdGVzIHRvIGdyaWQgY29vcmRpbmF0ZXMgKi9cclxuICAgIHdvcmxkVG9HcmlkKHBvc2l0aW9uKXtcclxuICAgICAgICByZXR1cm4gVmVjdG9yLmNyZWF0ZShcclxuICAgICAgICAgICAgTWF0aC5mbG9vcihwb3NpdGlvbi54L3RoaXMuaCksXHJcbiAgICAgICAgICAgIE1hdGguZmxvb3IocG9zaXRpb24ueS90aGlzLmgpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogVHJhbnNmb3JtcyBmcm9tIGdyaWQgY29vcmRpbmF0ZXMgdG8gZ3JpZCBhcnJheSBpbmRleCAqL1xyXG4gICAgZ3JpZFRvSW5kZXgoZ3JpZFBvc2l0aW9uKXtcclxuICAgICAgICByZXR1cm4gZ3JpZFBvc2l0aW9uLnkgKiB0aGlzLnNpemUueCArIGdyaWRQb3NpdGlvbi54O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBjbGVhciBhbmQgcmVmaWxsIGdyaWQgd2l0aCBuZXcgcGFydGljbGUgYXJyYXlzICovXHJcbiAgICB1cGRhdGUocGFydGljbGVzKXtcclxuICAgICAgICAvLyBpbml0IGdyaWRcclxuICAgICAgICBsZXQgY291bnQgPSAwO1xyXG4gICAgICAgIGZvciAoIGxldCBpID0wOyBpIDwgdGhpcy5zaXplLngqdGhpcy5zaXplLnk7IGkrKyl7XHJcbiAgICAgICAgICAgIHRoaXMuZ3JpZFtpXSA9IFtdO1xyXG4gICAgICAgICAgICArK2NvdW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBmb3IgKGxldCBwYXJ0aWNsZSBvZiBwYXJ0aWNsZXMpe1xyXG4gICAgICAgICAgICBsZXQgZ3JpZFBvc2l0aW9uID0gdGhpcy53b3JsZFRvR3JpZChwYXJ0aWNsZS5wb3NpdGlvbilcclxuICAgICAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5ncmlkVG9JbmRleChncmlkUG9zaXRpb24pO1xyXG4gICAgICAgICAgICB0aGlzLmdyaWRbaW5kZXhdLnB1c2gocGFydGljbGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiogcmV0dXJucyBhcnJheSBvZiBwYXJ0aWNsZXMgd2l0aGluIGludGVyYWN0aW9uIHJhZGl1cyAqL1xyXG4gICAgZ2V0TmVpZ2hib3JzKHBhcnRpY2xlKSB7XHJcbiAgICAgICAgLy8gYm91bmRpbmcgYm94IGNvbnRhaW5pbmcgdGhlIGludGVyYWN0aW9uIHJhZGl1c1xyXG4gICAgICAgIGxldCBiYk1pbiA9IHRoaXMud29ybGRUb0dyaWQoVmVjdG9yLmNyZWF0ZShwYXJ0aWNsZS5wb3NpdGlvbi54IC0gdGhpcy5oLCBwYXJ0aWNsZS5wb3NpdGlvbi55IC0gdGhpcy5oKSk7XHJcbiAgICAgICAgbGV0IGJiTWF4ID0gdGhpcy53b3JsZFRvR3JpZChWZWN0b3IuY3JlYXRlKHBhcnRpY2xlLnBvc2l0aW9uLnggKyB0aGlzLmgsIHBhcnRpY2xlLnBvc2l0aW9uLnkgKyB0aGlzLmgpKTtcclxuXHJcbiAgICAgICAgbGV0IG5lYXJQYXJ0aWNsZXMgPSBbXTtcclxuXHJcbiAgICAgICAgLy8gaXRlcmF0ZSBvdmVyYWxsIGdyaWQgY2VsbHMgbmVhciB0aGUgcGFydGljbGUsXHJcbiAgICAgICAgLy8gYWRkIHBhcnRpY2xlcyB3aXRoaW4gdGhlIGludGVyYWN0aW9uIHJhZGl1c1xyXG4gICAgICAgIGZvciAoIGxldCB4ID0gYmJNaW4ueDsgeCA8PSBiYk1heC54OyB4Kyspe1xyXG4gICAgICAgICAgICBmb3IgKGxldCB5ID0gYmJNaW4ueTsgeSA8PSBiYk1heC55OyB5Kyspe1xyXG4gICAgICAgICAgICAgICAgLy8gY2hlY2sgZm9yIHdvcmxkIGJvdW5kc1xyXG4gICAgICAgICAgICAgICAgaWYoIHggPCAwIHx8IHkgPCAwIHx8IHggPj0gdGhpcy5zaXplLnggfHwgeSA+PSB0aGlzLnNpemUueSApXHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGxldCBjZWxsUGFydGljbGVzID0gdGhpcy5ncmlkW3RoaXMuZ3JpZFRvSW5kZXgoVmVjdG9yLmNyZWF0ZSh4LHkpKV07XHJcbiAgICAgICAgICAgICAgICBmb3IgKCBsZXQgcCBvZiBjZWxsUGFydGljbGVzICkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkID0gVmVjdG9yLm1hZ25pdHVkZVNxdWFyZWQoVmVjdG9yLnN1YihwYXJ0aWNsZS5wb3NpdGlvbiwgcC5wb3NpdGlvbikpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkIDwgdGhpcy5oKnRoaXMuaClcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmVhclBhcnRpY2xlcy5wdXNoKHApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbmVhclBhcnRpY2xlcztcclxuICAgIH1cclxuIH0iLCJpbXBvcnQge1ZlY3Rvcn0gZnJvbSAnbWF0dGVyLWpzL2J1aWxkL21hdHRlci5taW4uanMnO1xyXG5pbXBvcnQgeyBTcGF0aWFsSGFzaCB9IGZyb20gJy4vc3BhdGlhbEhhc2gnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnRpY2xlRW1pdHRlcntcclxuICAgIGNvbnN0cnVjdG9yKHBhcnRpY2xlU3lzdGVtLCBwb3NpdGlvbil7XHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbSA9IHBhcnRpY2xlU3lzdGVtO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBWZWN0b3IuY2xvbmUocG9zaXRpb24pO1xyXG4gICAgICAgIHRoaXMuYW5nbGUgPSAwO1xyXG4gICAgICAgIHRoaXMuYW5nbGVJbmMgPSAwLjA1O1xyXG4gICAgICAgIHRoaXMuc3Bhd25WZWwgPSAyO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpe1xyXG4gICAgICAgIHRoaXMuYW5nbGUrPSB0aGlzLmFuZ2xlSW5jO1xyXG4gICAgICAgIGxldCBzcGF3bkRpciA9IFZlY3Rvci5jcmVhdGUoTWF0aC5jb3ModGhpcy5hbmdsZSksIE1hdGguc2luKHRoaXMuYW5nbGUpKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5hZGRQYXJ0aWNsZSh0aGlzLnBvc2l0aW9uLCBWZWN0b3IubXVsdChzcGF3bkRpciwgdGhpcy5zcGF3blZlbCkpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogSW5kaXZpZHVhbCBwYXJ0aWNsZSBiYXNlIGNsYXNzXHJcbiAqIEBjbGFzc1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFBhcnRpY2xle1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge1BJWEkuUG9pbnR9IHNwYXduUG9pbnRcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3Ioc3Bhd25Qb2ludCwgdmVsb2NpdHkpe1xyXG4gICAgICAgIHRoaXMuZGltZW5zaW9ucyA9IG5ldyBQSVhJLlBvaW50KDEwLDEwKTtcclxuICAgICAgICB0aGlzLnIgPSA1O1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBWZWN0b3IuY3JlYXRlKHNwYXduUG9pbnQueCwgc3Bhd25Qb2ludC55KTtcclxuICAgICAgICB0aGlzLm8gPSBWZWN0b3IuY3JlYXRlKHNwYXduUG9pbnQueCwgc3Bhd25Qb2ludC55KTtcclxuICAgICAgICB0aGlzLmYgPSBWZWN0b3IuY3JlYXRlKDAsMCk7XHJcbiAgICAgICAgdGhpcy5pc05ldyA9IHRydWU7XHJcbiAgICAgICAgaWYgKHZlbG9jaXR5KVxyXG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5ID0gVmVjdG9yLmNsb25lKHZlbG9jaXR5KVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eSA9IFZlY3Rvci5jcmVhdGUoMCwwKTtcclxuICAgICAgICB0aGlzLmRlbnNpdHkgPSAwO1xyXG4gICAgICAgIHRoaXMubmVhckRlbnNpdHkgPSAwO1xyXG4gICAgICAgIHRoaXMudGlja3MgPSA2MDsgICAgICBcclxuICAgIH1cclxufVxyXG5cclxuaW1wb3J0IHBoeXNpY3NfY29uZmlnIGZyb20gJy4uL2ZsdWlkX2NvbmZpZy5qc29uJ1xyXG4vKipcclxuICogZHJhd3MgdGhlIGFycmF5IG9mIHBhcnRpY2xlc1xyXG4gKi9cclxuIGV4cG9ydCBjbGFzcyBQYXJ0aWNsZVN5c3RlbSB7XHJcbiAgICAgY29uc3RydWN0b3IoIG1pbiwgbWF4LCBib2RpZXMsIGJvdW5kcyA9IFBJWEkuUmVjdGFuZ2xlKHdpbmRvdy5pbm5lcldpZHRoKjAuNSwgd2luZG93LmlubmVySGVpZ2h0KjAuNSwgd2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCkpeyAgICAgICBcclxuICAgICAgICAgdGhpcy5ib2RpZXMgPSBib2RpZXM7XHJcbiAgICAgICAgIHRoaXMubWluID0gVmVjdG9yLmNsb25lKG1pbik7XHJcbiAgICAgICAgIHRoaXMubWF4ID0gVmVjdG9yLmNsb25lKG1heCk7XHJcblxyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlcyA9IFtdO1xyXG4gICAgICAgICB0aGlzLm5lYXJQYXJ0aWNsZXNDYWNoZSA9IFtdOyAgLy8gdXNlZCB0byBhdm9pZCBkdXBsaWNhdGUgcGFydGljbGUgbmVpZ2hib3IgcXVlcmllc1xyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlUG9zaXRpb25zID0gW107XHJcbiAgICAgICAgXHJcbiAgICAgICAgIC8vIG5vdCB1c2luZyB0aGlzIGFueW1vcmUsIGJ1dCB1c2VkIGl0IGZvciBkZWJ1Z2dpbmcgYXQgdGhlIHN0YXJ0IG9mIGRldmVsb3BtZW50XHJcbiAgICAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgUElYSS5HcmFwaGljcygpOyAgXHJcbiAgICAgICAgIHRoaXMucGFydGljbGVDb3VudCA9IDA7XHJcblxyXG4gICAgICAgICBjb25zb2xlLmxvZyhwaHlzaWNzX2NvbmZpZyk7ICAgLy8gcGh5c2ljcyBjb25zdGFudHMgbG9hZGVkIGZyb20ganNvblxyXG4gICAgICAgICB0aGlzLmdyYXZpdHkgPSBwaHlzaWNzX2NvbmZpZy5ncmF2aXR5O1xyXG4gICAgICAgIC8vIG5lYXIvZmFyIGludGVyYWN0aW9uIHJhZGl1c1xyXG4gICAgICAgICB0aGlzLnIgPSBwaHlzaWNzX2NvbmZpZy5wYXJ0aWNsZV9yYWRpdXM7XHJcbiAgICAgICAgIHRoaXMuaCA9IHBoeXNpY3NfY29uZmlnLmludGVyYWN0aW9uX3JhZGl1cztcclxuICAgICAgICAvLyBkZW5zaXR5IGNvbnN0YW50c1xyXG4gICAgICAgICB0aGlzLnN0aWZmbmVzcyA9IHBoeXNpY3NfY29uZmlnLnN0aWZmbmVzcztcclxuICAgICAgICAgdGhpcy5uZWFyU3RpZmZuZXNzID0gcGh5c2ljc19jb25maWcubmVhcl9zdGlmZm5lc3M7XHJcbiAgICAgICAgIHRoaXMucmVzdERlbnNpdHkgPSBwaHlzaWNzX2NvbmZpZy5yZXN0X2RlbnNpdHk7ICAgXHJcbiAgICAgICAgIC8vIHZpc2Nvc2l0eSBjb25zdGFudHNcclxuICAgICAgICAgdGhpcy5zaWdtYSA9IHBoeXNpY3NfY29uZmlnLnNpZ21hO1xyXG4gICAgICAgICB0aGlzLmJldGEgPSBwaHlzaWNzX2NvbmZpZy5iZXRhO1xyXG5cclxuICAgICAgICAgdGhpcy5QQVJUSUNMRV9MSU1JVCA9IHBoeXNpY3NfY29uZmlnLnBhcnRpY2xlX2xpbWl0O1xyXG5cclxuICAgICAgICAgdGhpcy5oYXNoID0gbmV3IFNwYXRpYWxIYXNoKHRoaXMuaCwgbWluLCBtYXgpO1xyXG5cclxuICAgICAgICAgdGhpcy5jb250YWluZXJCb3VuZHMgPSBuZXcgUElYSS5SZWN0YW5nbGUod2luZG93LmlubmVyV2lkdGgqMC41LCB3aW5kb3cuaW5uZXJIZWlnaHQqMC41LCB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcclxuICAgICAgICAvLyAgdGhpcy5yZW5kZXJlci5iZWdpbkZpbGwoMHhiYzQyZjUsIDAuNSlcclxuICAgICAgICAvLyAgICAgLmRyYXdSZWN0KFxyXG4gICAgICAgIC8vICAgICAgICAgdGhpcy5jb250YWluZXJCb3VuZHMueCAtIHRoaXMuY29udGFpbmVyQm91bmRzLndpZHRoKjAuNSwgXHJcbiAgICAgICAgLy8gICAgICAgICB0aGlzLmNvbnRhaW5lckJvdW5kcy55IC0gdGhpcy5jb250YWluZXJCb3VuZHMuaGVpZ2h0KjAuNSwgdGhpcy5jb250YWluZXJCb3VuZHMud2lkdGgsIHRoaXMuY29udGFpbmVyQm91bmRzLmhlaWdodClcclxuICAgICB9XHJcblxyXG4gICAgIHVwZGF0ZSgpe1xyXG4gICAgICAgICB0aGlzLm5lYXJQYXJ0aWNsZXNDYWNoZSA9IFtdO1xyXG5cclxuICAgICAgICAgdGhpcy5jbGVhck9PQigpO1xyXG4gICAgICAgICBcclxuICAgICAgICAgdGhpcy5yZW1vdmVEZWFkUGFydGljbGVzKCk7XHJcblxyXG4gICAgICAgICB0aGlzLmhhc2gudXBkYXRlKHRoaXMucGFydGljbGVzKTtcclxuICAgICAgICAgXHJcbiAgICAgICAgIGZvciAoIGxldCBpID0gMDsgaSA8IHRoaXMucGFydGljbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBpUGFydGljbGUgPSB0aGlzLnBhcnRpY2xlc1tpXTtcclxuICAgICAgICAgICAgaVBhcnRpY2xlLnBvc2l0aW9uID0gVmVjdG9yLmFkZChpUGFydGljbGUucG9zaXRpb24sIGlQYXJ0aWNsZS5mKTtcclxuXHJcbiAgICAgICAgICAgIGlQYXJ0aWNsZS5mLnggPTA7XHJcbiAgICAgICAgICAgIGlQYXJ0aWNsZS5mLnkgPTA7XHJcbiAgICAgICAgICAgIGlQYXJ0aWNsZS5uZWFyRGVuc2l0eSA9IDA7XHJcbiAgICAgICAgICAgIGlQYXJ0aWNsZS5kZW5zaXR5ID0gMDtcclxuXHJcbiAgICAgICAgICAgIC8vIHByZWRpY3Rpb24tcmVsYXhhdGlvbiBzY2hlbWUgZnJvbSB0aGUgcGFwZXJcclxuICAgICAgICAgICAgaWYgKCFpUGFydGljbGUuaXNOZXcpXHJcbiAgICAgICAgICAgICAgICBpUGFydGljbGUudmVsb2NpdHkgPSBWZWN0b3Iuc3ViKGlQYXJ0aWNsZS5wb3NpdGlvbiwgaVBhcnRpY2xlLm8pO1xyXG4gICAgICAgICAgICBpUGFydGljbGUuaXNOZXcgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIC8vIGFwcGx5IGdyYXZpdHlcclxuICAgICAgICAgICAgaVBhcnRpY2xlLnZlbG9jaXR5LnkgKz0gdGhpcy5ncmF2aXR5XHJcblxyXG4gICAgICAgICAgICB0aGlzLnZpc2Nvc2l0eUltcHVsc2VzKGksIDEuMCk7ICAgICAgICAgIFxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICBmb3IgKCAgbGV0IGkgPSAwOyBpIDwgdGhpcy5wYXJ0aWNsZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgbGV0IGlQYXJ0aWNsZSA9IHRoaXMucGFydGljbGVzW2ldO1xyXG4gICAgICAgICAgICAgaVBhcnRpY2xlLm8gPSBWZWN0b3IuY2xvbmUoaVBhcnRpY2xlLnBvc2l0aW9uKTtcclxuICAgICAgICAgICAgIGlQYXJ0aWNsZS5wb3NpdGlvbiA9IFZlY3Rvci5hZGQoaVBhcnRpY2xlLnBvc2l0aW9uLCBpUGFydGljbGUudmVsb2NpdHkpO1xyXG5cclxuICAgICAgICAgICAgIHRoaXMuY29tcHV0ZURlbnNpdGllcyhpKTtcclxuICAgICAgICAgICAgIHRoaXMuaGFuZGxlQ29sbGlzaW9uKGlQYXJ0aWNsZSk7XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgIC8vIGFsZ29yaXRobSAyIGZyb20gdGhlIHBhcGVyXHJcbiAgICAgICAgIHRoaXMuZG91YmxlRGVuc2l0eVJlbGF4YXRpb24oMS4wKTtcclxuXHJcbiAgICAgICAgIHRoaXMudXBkYXRlUGFydGljbGVQb3NpdGlvbnMoKVxyXG4gICAgIH1cclxuXHJcbiAgICAgY2xlYXJPT0IoKXtcclxuICAgICAgICAgZm9yICggdmFyIGkgPTA7IGkgPCB0aGlzLnBhcnRpY2xlcy5sZW5ndGg7ICsraSl7XHJcbiAgICAgICAgICAgICBsZXQgaVBhcnRpY2xlID0gdGhpcy5wYXJ0aWNsZXNbaV07XHJcbiAgICAgICAgICAgICBsZXQgcCA9IGlQYXJ0aWNsZS5wb3NpdGlvbjtcclxuXHJcbiAgICAgICAgICAgICBpZiggcC54IDwgdGhpcy5taW4ueCB8fCBwLnkgPCB0aGlzLm1pbi55IHx8IHAueCA+PSB0aGlzLm1heC54IHx8IHAueSA+PSB0aGlzLm1heC55ICl7XHJcbiAgICAgICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZXMuc3BsaWNlKGksMSk7XHJcbiAgICAgICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZVBvc2l0aW9ucy5zcGxpY2UoaSoyLCAyKTtcclxuICAgICAgICAgICAgICAgICAtLWk7XHJcbiAgICAgICAgICAgICAgICAgLS10aGlzLnBhcnRpY2xlQ291bnQ7XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIHZpc2Nvc2l0eUltcHVsc2VzKGksIGRlbHRhKXtcclxuICAgICAgICAgbGV0IGlQYXJ0aWNsZSA9IHRoaXMucGFydGljbGVzW2ldO1xyXG5cclxuICAgICAgICAgbGV0IG5lYXJQYXJ0aWNsZXMgPSB0aGlzLmhhc2guZ2V0TmVpZ2hib3JzKGlQYXJ0aWNsZSk7XHJcblxyXG4gICAgICAgICB0aGlzLm5lYXJQYXJ0aWNsZXNDYWNoZVtpXSA9IG5lYXJQYXJ0aWNsZXM7XHJcblxyXG4gICAgICAgICBmb3IgKCBsZXQgalBhcnRpY2xlIG9mIG5lYXJQYXJ0aWNsZXMpe1xyXG4gICAgICAgICAgICAgbGV0IGRwID0gVmVjdG9yLnN1YihpUGFydGljbGUucG9zaXRpb24sIGpQYXJ0aWNsZS5wb3NpdGlvbik7XHJcbiAgICAgICAgICAgICBsZXQgcjIgPSBWZWN0b3IuZG90KGRwLCBkcCk7XHJcblxyXG4gICAgICAgICAgICAgaWYgKHIyIDw9IDAuMCB8fCByMiA+IHRoaXMuaCAqIHRoaXMuaClcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCByID0gTWF0aC5zcXJ0KHIyKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBub3JtYWxpemVkX3IgPSBWZWN0b3Iubm9ybWFsaXNlKGRwKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBvbmVfbWludXNfcSA9IDEgLSByIC8gdGhpcy5oO1xyXG5cclxuICAgICAgICAgICAgbGV0IHZpX21pbnVzX3ZqID0gVmVjdG9yLnN1YihpUGFydGljbGUudmVsb2NpdHksIGpQYXJ0aWNsZS52ZWxvY2l0eSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgdSA9IFZlY3Rvci5kb3QodmlfbWludXNfdmosIG5vcm1hbGl6ZWRfcik7XHJcblxyXG4gICAgICAgICAgICBsZXQgdCA9IDA7XHJcbiAgICAgICAgICAgIGlmICggdSA+IDAgKXtcclxuICAgICAgICAgICAgICAgIHQgPSBkZWx0YSAqIG9uZV9taW51c19xICogKHRoaXMuc2lnbWEgKiB1ICsgdGhpcy5iZXRhICogdSAqIHUpICogMC41O1xyXG4gICAgICAgICAgICAgICAgaWYgKCB0ID4gdSlcclxuICAgICAgICAgICAgICAgICAgICB0ID0gdTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHQgPSBkZWx0YSAqIG9uZV9taW51c19xICogKHRoaXMuc2lnbWEgKiB1IC0gdGhpcy5iZXRhICogdSAqIHUpICogMC41O1xyXG4gICAgICAgICAgICAgICAgaWYgICh0IDwgdSApXHJcbiAgICAgICAgICAgICAgICAgICAgdCA9IHU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCBpX2RpdjIgPSBWZWN0b3IubXVsdChub3JtYWxpemVkX3IsIHQpO1xyXG5cclxuICAgICAgICAgICAgaVBhcnRpY2xlLnZlbG9jaXR5ID0gVmVjdG9yLmFkZChpUGFydGljbGUudmVsb2NpdHksIFZlY3Rvci5tdWx0KGlfZGl2MiwgLTEpKTtcclxuICAgICAgICAgICAgalBhcnRpY2xlLnZlbG9jaXR5ID0gVmVjdG9yLmFkZChqUGFydGljbGUudmVsb2NpdHksIFZlY3Rvci5tdWx0KGlfZGl2MiwgMSkpO1xyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgY29tcHV0ZURlbnNpdGllcyhpKXtcclxuICAgICAgICAgbGV0IG5lYXJQYXJ0aWNsZXMgPSB0aGlzLm5lYXJQYXJ0aWNsZXNDYWNoZVtpXTtcclxuICAgICAgICAgbGV0IGlQYXJ0aWNsZSA9IHRoaXMucGFydGljbGVzW2ldO1xyXG5cclxuICAgICAgICAgZm9yICggbGV0IGpQYXJ0aWNsZSBvZiBuZWFyUGFydGljbGVzKXtcclxuICAgICAgICAgICAgbGV0IGRwID0gVmVjdG9yLnN1YihpUGFydGljbGUucG9zaXRpb24sIGpQYXJ0aWNsZS5wb3NpdGlvbik7XHJcblxyXG4gICAgICAgICAgICBsZXQgcjIgPSBWZWN0b3IuZG90KGRwLGRwKTtcclxuXHJcbiAgICAgICAgICAgIGlmICggcjIgPD0gMCB8fCByMiA+IHRoaXMuaCp0aGlzLmgpXHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCByID0gTWF0aC5zcXJ0KHIyKTtcclxuICAgICAgICAgICAgbGV0IGEgPSAxIC0gciAvIHRoaXMuaDtcclxuICAgICAgICAgICAgbGV0IGFhID0gYSphO1xyXG4gICAgICAgICAgICBsZXQgYWFhID0gYWEqYTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlQYXJ0aWNsZS5kZW5zaXR5ICs9IGFhO1xyXG4gICAgICAgICAgICBqUGFydGljbGUuZGVuc2l0eSArPSBhYTtcclxuXHJcbiAgICAgICAgICAgIGlQYXJ0aWNsZS5uZWFyRGVuc2l0eSArPSBhYWE7XHJcbiAgICAgICAgICAgIGpQYXJ0aWNsZS5uZWFyRGVuc2l0eSArPSBhYWE7XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIGRvdWJsZURlbnNpdHlSZWxheGF0aW9uKGRlbHRhKSB7XHJcbiAgICAgICAgZm9yICggbGV0IGkgPTA7IGkgPCB0aGlzLnBhcnRpY2xlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGxldCBpUGFydGljbGUgPSB0aGlzLnBhcnRpY2xlc1tpXTtcclxuXHJcbiAgICAgICAgICAgIGxldCBwcmVzc3VyZSA9IHRoaXMuc3RpZmZuZXNzKihpUGFydGljbGUuZGVuc2l0eSAtIHRoaXMucmVzdERlbnNpdHkpO1xyXG4gICAgICAgICAgICBsZXQgbmVhclByZXNzdXJlID0gdGhpcy5uZWFyU3RpZmZuZXNzKiBpUGFydGljbGUubmVhckRlbnNpdHk7XHJcblxyXG4gICAgICAgICAgICBsZXQgbmVhclBhcnRpY2xlcyA9IHRoaXMubmVhclBhcnRpY2xlc0NhY2hlW2ldO1xyXG5cclxuICAgICAgICAgICAgZm9yICggbGV0IGpQYXJ0aWNsZSBvZiBuZWFyUGFydGljbGVzKXtcclxuICAgICAgICAgICAgICAgbGV0IGRwID0gVmVjdG9yLnN1YihpUGFydGljbGUucG9zaXRpb24sIGpQYXJ0aWNsZS5wb3NpdGlvbik7XHJcbiAgICAgICAgICAgICAgIGxldCByMiA9IFZlY3Rvci5kb3QoZHAsZHApO1xyXG5cclxuICAgICAgICAgICAgICAgaWYgKCByMiA8PSAwLjAgfHwgcjIgPiB0aGlzLmgqdGhpcy5oKVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgbGV0IHIgPSBNYXRoLnNxcnQocjIpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGEgPSAxIC0gci90aGlzLmg7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGQgPSBkZWx0YSpkZWx0YSoocHJlc3N1cmUqYStuZWFyUHJlc3N1cmUqYSphKSowLjU7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGEgPSBWZWN0b3IubXVsdChkcCwgZC9yKTtcclxuICAgICAgICAgICAgICAgIGlQYXJ0aWNsZS5mID0gVmVjdG9yLmFkZChpUGFydGljbGUuZiwgVmVjdG9yLm11bHQoZGEsMSkpO1xyXG4gICAgICAgICAgICAgICAgalBhcnRpY2xlLmYgPSBWZWN0b3IuYWRkKGpQYXJ0aWNsZS5mLCBWZWN0b3IubXVsdChkYSwtMSkpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIGhhbmRsZUNvbGxpc2lvbihwYXJ0aWNsZSl7XHJcbiAgICAgICAgLy8gaGFuZGxlIGFsbCBwYXJ0aWNsZS1zdGF0aWMgYm9keSBjb2xsaXNpb25zXHJcbiAgICAgICAgZm9yICggbGV0IGJvZHkgb2YgdGhpcy5ib2RpZXMgKSB7IFxyXG4gICAgICAgICAgICB0aGlzLmJveENvbGxpc2lvbihwYXJ0aWNsZSwgYm9keSk7IFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gaGFuZGxlIGJveCBjb250YWluZXIgY29sbGlzaW9uIGZvciBzY3JlZW4gYm91bmRzXHJcbiAgICAgICAgdGhpcy5ib3hDb2xsaXNpb24ocGFydGljbGUsIHRoaXMuY29udGFpbmVyQm91bmRzLCB0cnVlKTtcclxuICAgICB9XHJcblxyXG4gICAgIGJveENvbGxpc2lvbihwYXJ0aWNsZSwgYm94LCBpc0NvbnRhaW5lciA9IGZhbHNlKSB7XHJcbiAgICAgICAgLy8gd2UgbXVzdCBlaXRoZXIgYWRkIG9yIHN1YnRyYWN0IHRoZSBwYXJ0aWNsZSByYWRpdXMgZnJvbSB0aGUgc2lnbmVkIGRpc3RhbmNlXHJcbiAgICAgICAgLy8gZGVwZW5kaW5nIG9uIGlmIHRoZSBib3ggaXMgYSBjb250YWluZXIgb3Igbm90XHJcbiAgICAgICAgIGxldCBzaWduID0gLTE7XHJcbiAgICAgICAgIGlmICggaXNDb250YWluZXIgKVxyXG4gICAgICAgICAgICBzaWduID0gMTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBjb252ZXJ0IHBhcnRpY2xlIHBvc2l0aW9uIHRvIGxvY2FsIGJveCBjb29yZGluYXRlc1xyXG4gICAgICAgIGxldCB4ID0gcGFydGljbGUucG9zaXRpb247XHJcbiAgICAgICAgbGV0IGMgPSBWZWN0b3IuY3JlYXRlKGJveC54LCBib3gueSk7ICAgICAgXHJcbiAgICAgICAgbGV0IHhMb2NhbCA9IFZlY3Rvci5zdWIoeCxjKTtcclxuXHJcbiAgICAgICAgLy8gbWFwIHRoZSBwYXJ0aWNsZSdzIHBvc2l0aW9uIHRvIHF1YWRyYW50IDEgb2YgdGhlIGJveCdzIGF4ZXNcclxuICAgICAgICBsZXQgeEFicyA9IFZlY3Rvci5jcmVhdGUoTWF0aC5hYnMoeExvY2FsLngpLCBNYXRoLmFicyh4TG9jYWwueSkpO1xyXG4gICAgICAgIGxldCByID0gVmVjdG9yLmNyZWF0ZShib3gud2lkdGgqMC41LGJveC5oZWlnaHQqMC41KVxyXG4gICAgICAgIGxldCBkID0gVmVjdG9yLnN1Yih4QWJzLCByKVxyXG5cclxuICAgICAgICAvLyBjb21wdXRlIHNpZ25lZCBkaXN0YW5jZVxyXG4gICAgICAgIGxldCBzZCA9ICBWZWN0b3IubWFnbml0dWRlKFZlY3Rvci5jcmVhdGUoTWF0aC5tYXgoZC54LCAwKSwgTWF0aC5tYXgoZC55LDApKSlcclxuICAgICAgICArIE1hdGgubWluKE1hdGgubWF4KGQueCwgZC55KSwgMCkgKyB0aGlzLnIqc2lnbjtcclxuXHJcbiAgICAgICAgLy8gaGFuZGxlIGNvbGxpc2lvblxyXG4gICAgICAgIGlmICggaXNDb250YWluZXIgJiYgc2QgPj0gMCB8fCAhaXNDb250YWluZXIgJiYgc2QgPD0gMCApIHtcclxuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIGxvY2FsIGNvbnRhY3QgcG9pbnRcclxuICAgICAgICAgICAgbGV0IGNwTG9jYWwgPSBWZWN0b3IuY3JlYXRlKFxyXG4gICAgICAgICAgICAgICAgTWF0aC5taW4oci54LCBNYXRoLm1heCgtci54LCB4TG9jYWwueCkpLFxyXG4gICAgICAgICAgICAgICAgTWF0aC5taW4oci55LCBNYXRoLm1heCgtci55LCB4TG9jYWwueSkpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgc3VyZmFjZSBub3JtYWwgXHJcbiAgICAgICAgICAgIGxldCBuID0gVmVjdG9yLmNyZWF0ZShNYXRoLnNpZ24oY3BMb2NhbC54IC0geExvY2FsLngpLCBNYXRoLnNpZ24oY3BMb2NhbC55IC0geExvY2FsLnkpKTtcclxuICAgICAgICAgICAgbiA9IFZlY3Rvci5ub3JtYWxpc2Uobik7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBkZWNvbXBvc2UgcGFydGljbGUgdmVsb2NpdHkgaW50byBub3JtYWwvdGFuZ2VudGlhbCB2ZWxvY2l0eSB0byB0aGUgc3VyZmFjZVxyXG4gICAgICAgICAgICBsZXQgdmVsVGFuZ2VudCA9IFZlY3Rvci5tdWx0KG4sIFZlY3Rvci5kb3QocGFydGljbGUudmVsb2NpdHksIG4pKTtcclxuICAgICAgICAgICAgbGV0IHZlbE5vcm1hbCA9IFZlY3Rvci5zdWIocGFydGljbGUudmVsb2NpdHksIHZlbFRhbmdlbnQpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gYXBwbHkgZnJpY3Rpb24gdG8gdGFuZ2VudGlhbCB2ZWxvY2l0eVxyXG4gICAgICAgICAgICB2ZWxUYW5nZW50ID0gVmVjdG9yLm11bHQodmVsVGFuZ2VudCwgMC41KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIHJlbW92ZSBwYXJ0aWNsZSdzIG5vcm1hbCB2ZWxvY2l0eVxyXG4gICAgICAgICAgICBwYXJ0aWNsZS52ZWxvY2l0eS54ID0gdmVsVGFuZ2VudC54O1xyXG4gICAgICAgICAgICBwYXJ0aWNsZS52ZWxvY2l0eS55ID0gdmVsVGFuZ2VudC55O1xyXG5cclxuICAgICAgICAgICAgLy8gYWRkIHRvIHBhcnRpY2xlJ3MgaW1wdWxzZSBidWZmZXJcclxuICAgICAgICAgICAgcGFydGljbGUuZiA9IFZlY3Rvci5hZGQoIHBhcnRpY2xlLmYsIFZlY3Rvci5uZWcoVmVjdG9yLnN1Yih2ZWxOb3JtYWwsIFZlY3Rvci5tdWx0KHZlbFRhbmdlbnQsIDAuMDEpKSkpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gYXBwbHkgdHJhbnNsYXRpb24gdG8gcGFydGljbGVcclxuICAgICAgICAgICAgaWYgKCAhaXNDb250YWluZXIgKSAvLyB0aWxlIGNvbGxpc2lvbnMgcmVxdWlyZSBhIGRpZmZlcmVudCB0cmFuc2xhdGlvbmFsIHJlc3BvbnNlXHJcbiAgICAgICAgICAgICAgICBwYXJ0aWNsZS5wb3NpdGlvbiA9IFZlY3Rvci5hZGQocGFydGljbGUucG9zaXRpb24sIFZlY3Rvci5tdWx0KG4sIHNkKSk7XHJcbiAgICAgICAgICAgIGVsc2UgXHJcbiAgICAgICAgICAgICAgICBwYXJ0aWNsZS5wb3NpdGlvbiA9IFZlY3Rvci5hZGQoYywgY3BMb2NhbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICB9XHJcblxyXG4gICAgIHJlbW92ZURlYWRQYXJ0aWNsZXMoKXtcclxuICAgICAgICAgbGV0IGRlYWRQYXJ0aWNsZXMgPSB0aGlzLnBhcnRpY2xlQ291bnQgLSB0aGlzLlBBUlRJQ0xFX0xJTUlUO1xyXG5cclxuICAgICAgICAgaWYgKCBkZWFkUGFydGljbGVzID4gMCApe1xyXG4gICAgICAgICAgICAgLy8gZG9uJ3QgcmVtb3ZlIHRoZSBmaXJzdCAyIHBhcnRpY2xlc1xyXG4gICAgICAgICAgICAgLy8gYmVjYXVzZSB0aGV5IGFyZSB1c2VkIGZvciB0aGUgdG9vbGJhciBpY29uIVxyXG4gICAgICAgICAgICB0aGlzLnBhcnRpY2xlcy5zcGxpY2UoMiwgZGVhZFBhcnRpY2xlcyk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2codGhpcy5wYXJ0aWNsZXNbMF0ucG9zaXRpb24ueCwgdGhpcy5wYXJ0aWNsZXNbMF0ucG9zaXRpb24ueSlcclxuICAgICAgICAgICAgLy90aGlzLnBhcnRpY2xlQ291bnQgLT0gZGVhZFBhcnRpY2xlcztcclxuXHJcbiAgICAgICAgICAgIC8vdGhpcy5wYXJ0aWNsZVBvc2l0aW9ucy5zcGxpY2UoNSwgZGVhZFBhcnRpY2xlcyoyKTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIlBhcnRpY2xlIENvdW50OiBcIiwgdGhpcy5wYXJ0aWNsZUNvdW50KTtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgdXBkYXRlUGFydGljbGVQb3NpdGlvbnMoKXtcclxuICAgICAgICAgdGhpcy5wYXJ0aWNsZVBvc2l0aW9ucyA9IFtdO1xyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlQ291bnQgPSB0aGlzLnBhcnRpY2xlcy5sZW5ndGg7XHJcblxyXG4gICAgICAgICBmb3IgKGxldCBwYXJ0aWNsZSBvZiB0aGlzLnBhcnRpY2xlcyApe1xyXG4gICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZVBvc2l0aW9ucy5wdXNoKHBhcnRpY2xlLnBvc2l0aW9uLngsIHBhcnRpY2xlLnBvc2l0aW9uLnkpO1xyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAvKipcclxuICAgICAgKiBcclxuICAgICAgKiBAcGFyYW0ge1BJWEkuUG9pbnR9IHBvc2l0aW9uIFxyXG4gICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2ZWxvY2l0eVxyXG4gICAgICAqL1xyXG4gICAgIGFkZFBhcnRpY2xlKHBvc2l0aW9uLCB2ZWxvY2l0eSApe1xyXG4gICAgICAgICBsZXQgbmV3UGFydGljbGUxID0gbmV3IFBhcnRpY2xlKHBvc2l0aW9uLCB2ZWxvY2l0eSk7XHJcbiAgICAgICAgIGxldCBuZXdQYXJ0aWNsZTIgPSBuZXcgUGFydGljbGUoVmVjdG9yLmNyZWF0ZShwb3NpdGlvbi54KzAuMSwgcG9zaXRpb24ueSksdmVsb2NpdHkpO1xyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlUG9zaXRpb25zLnB1c2gobmV3UGFydGljbGUxLnBvc2l0aW9uLngsIG5ld1BhcnRpY2xlMS5wb3NpdGlvbi55LCBuZXdQYXJ0aWNsZTIucG9zaXRpb24ueCwgbmV3UGFydGljbGUyLnBvc2l0aW9uLnkpO1xyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlcy5wdXNoKG5ld1BhcnRpY2xlMSwgbmV3UGFydGljbGUyKTtcclxuICAgICAgICAgdGhpcy5wYXJ0aWNsZUNvdW50Kz0gMjtcclxuICAgICB9XHJcblxyXG4gICAgIGNsZWFyUGFydGljbGVzKCkge1xyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlcyA9IFtdO1xyXG4gICAgICAgICB0aGlzLnBhcnRpY2xlUG9zaXRpb25zID0gW107XHJcbiAgICAgICAgIHRoaXMucGFydGljbGVDb3VudCA9IDA7XHJcbiAgICAgfVxyXG4gfVxyXG5cclxuIiwiXHJcblxyXG5leHBvcnQgY2xhc3MgTXlCdXR0b24ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gYnV0dG9uIGxhYmVsIHRleHRcclxuICAgICAqIEBwYXJhbSB7UElYSS5Qb2ludH0gcG9zaXRpb24gLSB3b3JsZCBjb29yZGluYXRlcyBvZiB0b3AgbGVmdCBjb3JuZXIgb2YgYnV0dG9uXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCl9IGNhbGxiYWNrIC0gYnV0dG9uIGNsaWNrIGNhbGxiYWNrIGZ1bmN0aW9uXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHRleHQsIHBvc2l0aW9uLCBjYWxsYmFjayl7ICAgICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHN0eWxlID0ge1xyXG4gICAgICAgICAgICBmaWxsOiAweDAwMDAwMCxcclxuICAgICAgICAgICAgZm9udFNpemU6IDMyLFxyXG4gICAgICAgICAgICBmb250RmFtaWx5OiAnYXJjYWRlY2xhc3NpY3JlZ3VsYXInXHJcbiAgICAgICAgfSAgIFxyXG4gICAgICAgIGNvbnN0IHBhZGRpbmcgPSBuZXcgUElYSS5Qb2ludCg1LCAxMCk7IC8vIGhvdyBtYW55IENTUyB1bml0cyB0byBvZmZzZXQgdGhlIHRleHRcclxuICAgICAgICB0aGlzLnRleHREaXNwbGF5ID0gbmV3IFBJWEkuVGV4dCh0ZXh0LCBzdHlsZSk7IC8vIFRURiBmb250IGRpc3BsYXkgb2JqZWN0XHJcblxyXG4gICAgICAgIC8vIGJvdW5kaW5nIGJveCBmb3IgdGhlIGJ1dHRvblxyXG4gICAgICAgIGNvbnN0IHJlY3QgPSBuZXcgUElYSS5SZWN0YW5nbGUoXHJcbiAgICAgICAgICAgIHBvc2l0aW9uLngsIHBvc2l0aW9uLnksIC8vcG9zaXRpb25cclxuICAgICAgICAgICAgdGhpcy50ZXh0RGlzcGxheS53aWR0aCsyKnBhZGRpbmcueCwgLy93aWR0aFxyXG4gICAgICAgICAgICB0aGlzLnRleHREaXNwbGF5LmhlaWdodCsyKnBhZGRpbmcueSApIC8vaGVpZ2h0XHJcblxyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMudGV4dERpc3BsYXkucG9zaXRpb24uc2V0KHJlY3QueCsgcGFkZGluZy54LCByZWN0LnkgK3BhZGRpbmcueSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzcGxheUNvbnRhaW5lciA9IG5ldyBQSVhJLkNvbnRhaW5lcigpO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uUmVuZGVyZXIgPSBuZXcgUElYSS5HcmFwaGljcygpO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uUmVuZGVyZXIuaW50ZXJhY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uUmVuZGVyZXIuYnV0dG9uTW9kZSA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMuYnV0dG9uUmVuZGVyZXIuYmVnaW5GaWxsKDB4RkZGRkZGLCAxKVxyXG4gICAgICAgICAgICAuZHJhd1JvdW5kZWRSZWN0KHJlY3QueCwgcmVjdC55LCByZWN0LndpZHRoLCByZWN0LmhlaWdodClcclxuICAgICAgICAgICAgLmVuZEZpbGwoKTtcclxuICAgICAgICB0aGlzLmJ1dHRvblJlbmRlcmVyLm9uKFwicG9pbnRlcmRvd25cIiwgY2FsbGJhY2spO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXlDb250YWluZXIuYWRkQ2hpbGQodGhpcy5idXR0b25SZW5kZXJlcik7XHJcbiAgICAgICAgdGhpcy5kaXNwbGF5Q29udGFpbmVyLmFkZENoaWxkKHRoaXMudGV4dERpc3BsYXkpO1xyXG4gICAgfVxyXG59IiwiLy8gZ2V0IHNoYWRlciB0ZXh0IHdpdGggd2VicGFjayByYXctbG9hZGVyXHJcbmltcG9ydCB2ZXJ0IGZyb20gJy4vc2hhZGVycy9wYXJ0aWNsZS52ZXJ0JztcclxuaW1wb3J0IGZyYWcgZnJvbSAnLi9zaGFkZXJzL3BhcnRpY2xlLmZyYWcnO1xyXG5cclxuLyoqIFxyXG4gKiBcclxuICogRHJhdyBhIGZsdWlkIHN1cmZhY2UgZnJvbSBhbiBhcnJheSBvZiBwYXJ0aWNsZSBwb3NpdGlvbnNcclxuICogXHJcbiAqIEBjbGFzc1xyXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnRpY2xlRmlsdGVyIGV4dGVuZHMgUElYSS5GaWx0ZXIge1xyXG4gICAgY29uc3RydWN0b3IocmFkaXVzLCBNQVhfUEFSVElDTEVTKXtcclxuICAgICAgICAvLyBjb21waWxlLXRpbWUgY29uc3RhbnRzIGZvciBkdW1taWVzXHJcbiAgICAgICAgbGV0IHZlcnRleCA9IHZlcnQucmVwbGFjZSgvc2l6ZV9yZXBsYWNlbWVudC9nLCBgJHtNQVhfUEFSVElDTEVTfWApO1xyXG4gICAgICAgIGxldCBmcmFnbWVudCA9IGZyYWcucmVwbGFjZSgvc2l6ZV9yZXBsYWNlbWVudC9nLCBgJHtNQVhfUEFSVElDTEVTfWApO1xyXG5cclxuICAgICAgICAvLyBjb21waWxlIFdlYkdMIHNoYWRlclxyXG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQsIHtcclxuICAgICAgICAgICAgbnVtUGFydGljbGVzOiAwLFxyXG4gICAgICAgICAgICBwYXJ0aWNsZVJhZGl1czogcmFkaXVzLFxyXG4gICAgICAgICAgICBNQVhfUEFSVElDTEVTOiBNQVhfUEFSVElDTEVTLFxyXG4gICAgICAgICAgICBQb3NpdGlvblRleHR1cmU6IFtdLFxyXG4gICAgICAgICAgICBpbnZfcG9zaXRpb25fdGV4dHVyZV93aWR0aDogMCxcclxuICAgICAgICAgICAgb2RkOiAwXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBXcml0ZXMgcGFydGljbGUgcG9zaXRpb25zIHRvIGEgMXhOIHRleHR1cmUsIHRvIGJlIHBhc3NlZCBhcyBhIHVuaWZvcm0gdG8gdGhlIHBhcnRpY2xlIGZpbHRlci5cclxuICogVXNlZCB0byB3b3JrIGFyb3VuZCBhIFdlYkdMIGxpbWl0IG9uIGFycmF5IHVuaWZvcm0gc2l6ZXMgZm9yIG1vYmlsZSBkZXZpY2VzXHJcbiAqIFxyXG4gKiAtIFdyaXRlcyAyIG5vcm1hbGl6ZWQgcGFydGljbGUgcG9zaXRpb25zIG9udG8gZWFjaCB0ZXhlbCBcclxuICogIC0gU28gZm9yIGEgZ2l2ZW4gdGV4ZWw6IChSLCBHLCBCLCBBKSA9IChYMSwgWTEsIFgyLCBZMilcclxuICogLSBUaGlzIHRleHR1cmUgcG90ZW50aWFsbHkgaGFzIHRvIGJlIHJlc2l6ZWQgZXZlcnkgZnJhbWUhXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUG9zaXRpb25TYW1wbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKG1heF9wYXJ0aWNsZXMsIHBhcnRpY2xlRmlsdGVyKXtcclxuICAgICAgICB0aGlzLm1heF9wYXJ0aWNsZXM9IG1heF9wYXJ0aWNsZXM7XHJcblxyXG4gICAgICAgIC8vIHRleHR1cmUgcmVwcmVzZW50aW5nIHBhcnRpY2xlIHBvc2l0aW9uc1xyXG4gICAgICAgIC8vIHBhc3NlZCB0byB0aGUgcG9zdCBwcm9jZXNzaW5nIGZpbHRlclxyXG4gICAgICAgIC8vdGhpcy5maWx0ZXJUZXh0dXJlID0gbmV3IFBJWEkuQmFzZVRleHR1cmUobnVsbCwge3dpZHRoOiBtYXhfcGFydGljbGVzLCBoZWlnaHQ6MX0pO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyVGV4dHVyZSA9IG5ldyBQSVhJLlJlbmRlclRleHR1cmUuY3JlYXRlKHt3aWR0aDogbWF4X3BhcnRpY2xlcywgaGVpZ2h0OjF9KTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIk1heCBwYXJ0aWNsZXM6IFwiLCBtYXhfcGFydGljbGVzKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZUZpbHRlciA9IHBhcnRpY2xlRmlsdGVyO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVQYXJ0aWNsZXMocGFydGljbGVfcG9zaXRpb25zKXtcclxuXHJcbiAgICAgICBjb25zdCBudW1QYXJ0aWNsZXMgPSBwYXJ0aWNsZV9wb3NpdGlvbnMubGVuZ3RoKjAuNTtcclxuXHJcbiAgICAgICAgaWYgKCBwYXJ0aWNsZV9wb3NpdGlvbnMubGVuZ3RoID4gMCkgeyAgICAgICBcclxuICAgICAgICAgICAgbGV0IG5vcm1hbGl6ZWRfcG9zaXRpb25zID0gW107XHJcbiAgICAgICAgICAgIGxldCBpbnZXaW5kb3cgPSBbMS4wIC8gd2luZG93LmlubmVyV2lkdGgsIDEuMC93aW5kb3cuaW5uZXJIZWlnaHRdOyAgICAgIFxyXG4gICAgICAgICAgICBmb3IgKCBsZXQgaSA9IDA7IGkgPHBhcnRpY2xlX3Bvc2l0aW9ucy5sZW5ndGg7IGkrPTIpIHtcclxuICAgICAgICAgICAgICAgIG5vcm1hbGl6ZWRfcG9zaXRpb25zLnB1c2goXHJcbiAgICAgICAgICAgICAgICAgICAgcGFydGljbGVfcG9zaXRpb25zW2ldKmludldpbmRvd1swXSxcclxuICAgICAgICAgICAgICAgICAgICBwYXJ0aWNsZV9wb3NpdGlvbnNbaSsxXSppbnZXaW5kb3dbMV0pOyAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyB3cml0aW5nIHRvIGEgdGV4dHVyZSwgc28gd2UgbmVlZCB0byBwYXNzIDIgZXh0cmEgdmFsdWVzIHdoZW4gd2UgaGF2ZSBhbiBvZGRcclxuICAgICAgICAgICAgLy8gIyBvZiBwYXJ0aWNsZXNcclxuICAgICAgICAgICAgbGV0IGlzT2RkID0gbnVtUGFydGljbGVzICUgMjtcclxuICAgICAgICAgICAgaWYgKCBpc09kZCApIHtcclxuICAgICAgICAgICAgICAgIG5vcm1hbGl6ZWRfcG9zaXRpb25zLnB1c2goMC4wLDAuMCk7IFxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgd2lkdGggPSBudW1QYXJ0aWNsZXMqMC41ICsgKGlzT2RkKSowLjU7IC8vIHRleHR1cmUgd2lkdGggIFxyXG4gICAgICAgICAgICBsZXQgYnVmZmVyID0gRmxvYXQzMkFycmF5LmZyb20obm9ybWFsaXplZF9wb3NpdGlvbnMpOyAvLyBidWZmZXIgb2Ygbm9ybWFsaXNlZCBwaXhlbCByZ2JhIHZhbHVlcyAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLmZpbHRlclRleHR1cmUgPSBuZXcgUElYSS5UZXh0dXJlLmZyb21CdWZmZXIoYnVmZmVyLCB3aWR0aCwgMSk7IC8vIFdlYkdMIHRleHR1cmVcclxuXHJcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVGaWx0ZXIudW5pZm9ybXMuaW52X3Bvc2l0aW9uX3RleHR1cmVfd2lkdGggPSAxLjAvd2lkdGg7XHJcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVGaWx0ZXIudW5pZm9ybXMub2RkID0gaXNPZGQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJObyBwYXJ0aWNsZXMgdG8gdXBkYXRlIVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBcImF0dHJpYnV0ZSB2ZWMyIGFWZXJ0ZXhQb3NpdGlvbjtcXHJcXG5cXHJcXG51bmlmb3JtIG1hdDMgcHJvamVjdGlvbk1hdHJpeDtcXHJcXG51bmlmb3JtIHZlYzQgaW5wdXRTaXplO1xcclxcbnVuaWZvcm0gdmVjNCBvdXRwdXRGcmFtZTtcXHJcXG5cXHJcXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDtcXHJcXG52YXJ5aW5nIHZlYzQgdklucHV0U2l6ZTtcXHJcXG52YXJ5aW5nIHZlYzQgdk91dHB1dEZyYW1lO1xcclxcblxcclxcbnZlYzQgZmlsdGVyVmVydGV4UG9zaXRpb24oIHZvaWQgKSB7XFxyXFxuICAgIHZlYzIgcG9zaXRpb24gPSBhVmVydGV4UG9zaXRpb24gKiBtYXgob3V0cHV0RnJhbWUuencsIHZlYzIoMC4pKSArIG91dHB1dEZyYW1lLnh5O1xcclxcblxcclxcbiAgICByZXR1cm4gdmVjNCgocHJvamVjdGlvbk1hdHJpeCAqIHZlYzMocG9zaXRpb24sIDEuMCkpLnh5LCAwLjAsIDEuMCk7XFxyXFxufVxcclxcblxcclxcbnZlYzIgZmlsdGVyVGV4dHVyZUNvb3JkKCB2b2lkICkge1xcclxcbiAgICByZXR1cm4gYVZlcnRleFBvc2l0aW9uICogKG91dHB1dEZyYW1lLnp3ICogaW5wdXRTaXplLnp3KTtcXHJcXG59XFxyXFxuXFxyXFxudmVjMiBib3hDb29yZChpbiB2ZWMyIGJveFBvc2l0aW9uKSB7XFxyXFxuICAgIHJldHVybiBib3hQb3NpdGlvbiAqIGlucHV0U2l6ZS56dztcXHJcXG59XFxyXFxuXFxyXFxudm9pZCBtYWluKHZvaWQpXFxyXFxue1xcclxcbiAgICBnbF9Qb3NpdGlvbiA9IGZpbHRlclZlcnRleFBvc2l0aW9uKCk7XFxyXFxuICAgIHZUZXh0dXJlQ29vcmQgPSBmaWx0ZXJUZXh0dXJlQ29vcmQoKTtcXHJcXG5cXHJcXG4gICAgdklucHV0U2l6ZSA9IGlucHV0U2l6ZTtcXHJcXG4gICAgdk91dHB1dEZyYW1lID0gb3V0cHV0RnJhbWU7XFxyXFxufVwiOyIsImV4cG9ydCBkZWZhdWx0IFwidmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XFxyXFxudmFyeWluZyB2ZWM0IHZJbnB1dFNpemU7XFxyXFxudmFyeWluZyB2ZWM0IHZPdXRwdXRGcmFtZTtcXHJcXG5cXHJcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlcjtcXHJcXG5cXHJcXG4vLyB1bmlmb3JtIHZlYzIgcGFydGljbGVWZXJ0c1tzaXplX3JlcGxhY2VtZW50XTtcXHJcXG51bmlmb3JtIHNhbXBsZXIyRCBwb3NpdGlvbl9zYW1wbGVyO1xcclxcbnVuaWZvcm0gZmxvYXQgcGFydGljbGVSYWRpdXM7XFxyXFxudW5pZm9ybSBpbnQgbnVtUGFydGljbGVzO1xcclxcbnVuaWZvcm0gZmxvYXQgaW52X3Bvc2l0aW9uX3RleHR1cmVfd2lkdGg7XFxyXFxudW5pZm9ybSBpbnQgb2RkO1xcclxcblxcclxcbiNkZWZpbmUgTUVSR0VfUkFESVVTIDAuMDVcXHJcXG5cXHJcXG5cXHJcXG5mbG9hdCBjaXJjbGVTREYodmVjMiBwb2ludCwgZmxvYXQgcmFkaXVzKXtcXHJcXG5cXHRmbG9hdCBsaW5lX3Jlc29saXRpb24gPSAwLjAwNTtcXHQvLyBjb250cm9scyBkZW5zaXR5IG9mIHRoZSBmaWVsZCBsaW5lc1xcclxcblxcdGZsb2F0IHNjYWxlZF9yYWRpdXMgPSBsaW5lX3Jlc29saXRpb24qcmFkaXVzOy8vIHNjYWxlIGRvd24gdGhlIHJhZGl1cyB0byBmaXQgdGhlIHJlc29sdXRpb25cXHJcXG5cXHJcXG5cXHR2ZWMyIGNvbnZfZmFjdG9yID0gdklucHV0U2l6ZS54eSpsaW5lX3Jlc29saXRpb247XFxyXFxuXFx0dmVjMiBwb3NpdGlvbiA9ICh2VGV4dHVyZUNvb3JkIC0gcG9pbnQpKmNvbnZfZmFjdG9yO1xcclxcblxcclxcblxcdHJldHVybiBsZW5ndGgocG9zaXRpb24pIC0gc2NhbGVkX3JhZGl1cztcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLy8gcm91bmRzIG9mZiBlZGdlcyBiZXR3ZWVuIGVkZ2VzIG9mIHNoYXBlc1xcclxcbmZsb2F0IHJvdW5kX21lcmdlKGZsb2F0IHNoYXBlMSwgZmxvYXQgc2hhcGUyLCBmbG9hdCByYWRpdXMpe1xcclxcblxcdHZlYzIgaW50ZXJzZWN0aW9uX3NwYWNlID0gdmVjMihzaGFwZTEgLSByYWRpdXMsIHNoYXBlMiAtIHJhZGl1cyk7XFxyXFxuXFx0aW50ZXJzZWN0aW9uX3NwYWNlID0gbWluKGludGVyc2VjdGlvbl9zcGFjZSwgMC4wKTtcXHJcXG5cXHJcXG5cXHRmbG9hdCBpbnNpZGVEaXN0YW5jZSA9IC1sZW5ndGgoaW50ZXJzZWN0aW9uX3NwYWNlKTtcXHJcXG5cXHRmbG9hdCBzaW1wbGVVbmlvbiA9IG1pbihzaGFwZTEsIHNoYXBlMik7XFxyXFxuXFx0ZmxvYXQgb3V0c2lkZURpc3RhbmNlID0gbWF4KHNpbXBsZVVuaW9uLCByYWRpdXMpO1xcclxcblxcclxcblxcdHJldHVybiAgaW5zaWRlRGlzdGFuY2UgKyBvdXRzaWRlRGlzdGFuY2U7XFxyXFxufVxcclxcblxcclxcbmZsb2F0IHNhbXBsZV8yX3Bvc2l0aW9ucyhpbnQgaW5kZXgpe1xcclxcblxcdC8vIHNhbXBsZSB0aGUgcGl4ZWxcXHJcXG5cXHR2ZWM0IHNhbXBsZSA9ICB0ZXh0dXJlMkQocG9zaXRpb25fc2FtcGxlciwgdmVjMihmbG9hdChpbmRleCkgKiBpbnZfcG9zaXRpb25fdGV4dHVyZV93aWR0aCwgMC41KSk7XFxyXFxuXFxyXFxuXFx0Ly8gY29tcHV0ZSBzaWduZWQgZGlzdG5hY2VzXFxyXFxuXFx0ZmxvYXQgZDEgPSBjaXJjbGVTREYoc2FtcGxlLnJnLCBwYXJ0aWNsZVJhZGl1cyk7XFxyXFxuXFx0ZmxvYXQgZDIgPSBjaXJjbGVTREYoc2FtcGxlLmJhLCBwYXJ0aWNsZVJhZGl1cyk7XFxyXFxuXFxyXFxuXFx0Ly8gcmV0dXJuIGNsb3Nlc3QgZGlzdGFuY2VcXHJcXG5cXHRyZXR1cm4gcm91bmRfbWVyZ2UoZDEsIGQyLCBNRVJHRV9SQURJVVMpO1xcclxcblxcclxcblxcdC8vIHJldHVybiBtaW4oZDEsIGQyKTtcXHJcXG59XFxyXFxuXFxyXFxuLy8gcmV0dXJucyBtaW5pbXVtIGRpc3RhbmNlIGZyb20gdGV4dHVyZSBjb29yZGluYXRlIHRvIGEgc3VyZmFjZVxcclxcbmZsb2F0IHNkZl9taW4oKSB7XFxyXFxuXFx0ZmxvYXQgZCA9IDEwMDAwMDAuMDtcXHRcXHRcXHJcXG4gICAgY29uc3QgaW50IE1BWF9JVEVSID0gc2l6ZV9yZXBsYWNlbWVudDtcXHJcXG5cXHQvLyBpbnQgd2lkdGggPSBpbnQoY2VpbChmbG9hdChudW1QYXJ0aWNsZXMpICogMC41KSk7XFxyXFxuXFx0aW50IHdpZHRoID0gbnVtUGFydGljbGVzLzIgKyBvZGQ7XFxyXFxuXFxyXFxuXFx0Ly8gaWYgKCBvZGQgPT0gMSl7XFxyXFxuXFx0Ly8gXFx0dmVjNCBzYW1wbGUgPSAgdGV4dHVyZTJEKHBvc2l0aW9uX3NhbXBsZXIsIHZlYzIoMS4wLCAwLjUpKTtcXHJcXG5cXHQvLyBcXHRkID0gY2lyY2xlU0RGKHNhbXBsZS5yZywgcGFydGljbGVSYWRpdXMpO1xcclxcblxcdC8vIFxcdC0td2lkdGg7XFxyXFxuXFx0Ly8gfVxcclxcblxcclxcblxcdGZvciAoIGludCBpID0gMDsgaSA8IE1BWF9JVEVSOyBpKyspe1xcclxcblxcdFxcdGlmICggaSA+PSB3aWR0aCApIGJyZWFrO1xcclxcblxcclxcblxcdFxcdGZsb2F0IHRkID0gc2FtcGxlXzJfcG9zaXRpb25zKGkpO1xcclxcblxcclxcblxcdFxcdC8vIGQgPSBtaW4odGQsIGQpO1xcclxcblxcdFxcdGQgPSByb3VuZF9tZXJnZShkLHRkLE1FUkdFX1JBRElVUyk7XFxyXFxuXFx0fVxcclxcblxcclxcblxcdHJldHVybiBkOyBcXHJcXG59XFxyXFxuXFxyXFxuLy8gZHJhdyBmaWVsZCBvZiBsaW5lcyByZXByZXNlbnRpbmcgdGhlIHNpZ25lZCBkaXN0YW5jZSBmaWVsZFxcclxcbnZvaWQgbWFpbiggdm9pZCApXFxyXFxue1xcclxcblxcdGZsb2F0IGQgPSBzZGZfbWluKCk7XFxyXFxuICAgIFxcclxcblxcdC8vIGNvbG9yaW5nXFxyXFxuICAgIHZlYzMgY29sID0gdmVjMygxLjApIC0gc2lnbihkKSp2ZWMzKDAuMSwwLjQsMC43KTtcXHJcXG4gICAgY29sICo9IDEuMCAtIGV4cCgtMy4wKmFicyhkKSk7XFxyXFxuXFx0Y29sICo9IDAuOCArIDAuMipjb3MoMTUwLjAqZCk7XFxyXFxuXFx0Y29sID0gbWl4KCBjb2wsIHZlYzMoMS4wKSwgMS4wLXNtb290aHN0ZXAoMC4wLDAuMDEsYWJzKGQpKSApO1xcclxcblxcclxcblxcdHZlYzQgc2FtcGxlQ29sb3IgPSB0ZXh0dXJlMkQodVNhbXBsZXIsIHZUZXh0dXJlQ29vcmQpO1xcclxcblxcclxcblxcdC8vIGlmICggc2FtcGxlQ29sb3IuciA+IDAuMClcXHJcXG5cXHQvLyBcXHRnbF9GcmFnQ29sb3IgPSBzYW1wbGVDb2xvcjtcXHJcXG5cXHQvLyBlbHNlXFx0XFxyXFxuXFx0Z2xfRnJhZ0NvbG9yID12ZWM0KGNvbCwxLjApO1xcclxcblxcclxcblxcdC8vIGdsX0ZyYWdDb2xvciA9IG1peChzYW1wbGVDb2xvcix2ZWM0KGNvbCwgMS4wKSwgMC41KTtcXHJcXG59XCI7IiwiaW1wb3J0IHtWZWN0b3J9IGZyb20gJ21hdHRlci1qcy9idWlsZC9tYXR0ZXIubWluLmpzJztcclxuaW1wb3J0IHtTcGF0aWFsSGFzaH0gZnJvbSAnLi9zcGF0aWFsSGFzaC5qcydcclxuXHJcbi8qKlxyXG4gKiBjb21iaW5lcyB0aWxlcyBpbnRvIHJlY3RhbmdsZXMgZm9yIHBhcnRpY2xlIGNvbGxpc2lvbnNcclxuICovXHJcbiBleHBvcnQgY2xhc3MgVGlsZU1hcHtcclxuICAgICBjb25zdHJ1Y3Rvcih0aWxlcyl7XHJcbiAgICAgICAgdGhpcy50aWxlcyA9IHRpbGVzO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCB3LCBoID0gMDtcclxuXHJcbiAgICAgICAgZm9yICggbGV0IHRpbGUgb2YgdGlsZXMpe1xyXG4gICAgICAgICAgICBpZiAoIHRpbGUueCArIHIgPiB3KVxyXG4gICAgICAgICAgICAgICAgdyA9IHRpbGUueDtcclxuICAgICAgICAgICAgaWYgKCB0aWxlLnkgKyByID4gaClcclxuICAgICAgICAgICAgICAgIGggPSB0aWxlLnk7XHJcbiAgICAgICAgfSAgIFxyXG4gICAgICAgIHRoaXMuZGltZW5zaW9ucyA9IFZlY3Rvci5jcmVhdGUodyxoKTtcclxuXHJcbiAgICAgICAgdGhpcy5oYXNoID0gbmV3IFNwYXRpYWxIYXNoKHRpbGVzWzBdLnIsIFZlY3Rvci5jcmVhdGUoMCwwKSwgdGhpcy5kaW1lbnNpb25zKTsgICAgIFxyXG4gICAgIH1cclxuIH0gICBcclxuXHJcbi8qKiBcclxuICogLSBDb2xsaWRlcnMgZm9yIGtpbmVtYXRpY3MgXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgVGlsZSB7XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4IFxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHkgXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcyBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoeCx5LHMpe1xyXG4gICAgICAgIHRoaXMuZmlsbENvbG9yID0gMHgzNzBiOGE7XHJcbiAgICAgICAgdGhpcy5saW5lQ29sb3IgPSAweEZGRkZGRjtcclxuXHJcbiAgICAgICAgdGhpcy5yID0gcyowLjU7XHJcbiAgICAgICAgdGhpcy54ID0geCAqIHMgKyB0aGlzLnI7XHJcbiAgICAgICAgdGhpcy55ID0geSAqIHMgKyB0aGlzLnI7XHJcbiAgICAgICAgdGhpcy5oYXNoID0gVmVjdG9yLmNyZWF0ZSh4LHkpO1xyXG4gICAgICAgIHRoaXMucyA9IHM7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHM7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBzO1xyXG5cclxuICAgICAgICB0aGlzLnBvc2l0aW9uID0gVmVjdG9yLmNyZWF0ZSh0aGlzLngsdGhpcy55KTtcclxuXHJcbiAgICAgICAgdGhpcy5oaWRkZW4gPSBmYWxzZTtcclxuXHJcbiAgICAgICAgLy8gcGh5c2ljcyBjb2xsaWRlclxyXG4gICAgICAgIC8vIHRoaXMuYm9keSA9IG5ldyBNYXR0ZXIuQm9kaWVzLnJlY3RhbmdsZSh0aGlzLngsdGhpcy55LHMscyx7IGlzU3RhdGljIDogdHJ1ZSB9KTtcclxuICAgIH1cclxuICAgIC8qKiBEcmF3IHJlY3QgZ2l2ZW4gaW5wdXQgUElYSSBHcmFwaGljcyBvYmplY3RcclxuICAgICAqICBAcGFyYW0ge1BJWEkuR3JhcGhpY3N9IGdyYXBoaWNzIC0gdGlsZSByZW5kZXJlclxyXG4gICAgICovIFxyXG4gICAgZHJhd1JlY3QoZ3JhcGhpY3MpIHtcclxuICAgICAgICAvLyBkcmF3IGNvbGxpc2lvbiBib3ggcmVjdGFuZ2xlXHJcbiAgICAgICAgZ3JhcGhpY3NcclxuICAgICAgICAgICAgLmxpbmVTdHlsZSgyLCB0aGlzLmxpbmVDb2xvciwgMSlcclxuICAgICAgICAgICAgLmJlZ2luRmlsbCh0aGlzLmZpbGxDb2xvciwgMSlcclxuICAgICAgICAgICAgLmRyYXdSZWN0KCB0aGlzLnggLSB0aGlzLnIsIHRoaXMueSAtIHRoaXMuciwgdGhpcy5zLCB0aGlzLnMgKVxyXG4gICAgICAgICAgICAuZW5kRmlsbCgpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtTcGF0aWFsSGFzaH0gZnJvbSAnLi4vc2ltdWxhdGlvbi9zcGF0aWFsSGFzaC5qcyc7XHJcbmltcG9ydCB7VmVjdG9yfSBmcm9tICdtYXR0ZXItanMvYnVpbGQvbWF0dGVyLm1pbi5qcyc7XHJcbmltcG9ydCB7VGlsZX0gZnJvbSAnLi4vc2ltdWxhdGlvbi90aWxlcy5qcydcclxuLyoqXHJcbiAqIC0gbWFuYWdlcyBlbnRpdHkgc3Bhd25pbmcvZGVsZXRpb25cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgSW5zdGFuY2VyIHtcclxuICAgIGNvbnN0cnVjdG9yKHBhcnRpY2xlU3lzdGVtLCBzdGFnZSl7XHJcbiAgICAgICAgdGhpcy5zdGFnZSA9c3RhZ2U7XHJcbiAgICAgICAgLy8gdGlsZSBjb2xsaWRlciBkYXRhIHN0cnVjdHVyZXNcclxuICAgICAgICB0aGlzLnRpbGVzID0gW107XHJcbiAgICAgICAgdGhpcy50aWxlUG9zaXRpb25zID0gW107XHJcbiAgICAgICAgdGhpcy50aWxlU2l6ZSA9IDMyO1xyXG5cclxuICAgICAgICAvLyBib3ggcHJpbWl0aXZlIHJlbmRlcmVyXHJcbiAgICAgICAgdGhpcy50ZXJyYWluUmVuZGVyZXIgPSBuZXcgUElYSS5HcmFwaGljcygpO1xyXG4gICAgICAgIHN0YWdlLmFkZENoaWxkKHRoaXMudGVycmFpblJlbmRlcmVyKTtcclxuXHJcbiAgICAgICAgLy8gdXNlZCB0byBsaW5lIGJveCBjb2xsaWRlcnMgdXAgd2l0aCBhIGdyaWRcclxuICAgICAgICB0aGlzLmhhc2ggPSBuZXcgU3BhdGlhbEhhc2goXHJcbiAgICAgICAgICAgIHRoaXMudGlsZVNpemUsIFxyXG4gICAgICAgICAgICBWZWN0b3IuY3JlYXRlKDAsMCksIFxyXG4gICAgICAgICAgICBWZWN0b3IuY3JlYXRlKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLnBhcnRpY2xlU3lzdGVtID0gcGFydGljbGVTeXN0ZW07XHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5ib2RpZXMgPSB0aGlzLnRpbGVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHggLSB4IHRpbGUgZ3JpZCBjb29yZGluYXRlXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geSAtIHkgdGlsZSBncmlkIGNvb3JkaW5hdGVcclxuICAgICAqL1xyXG4gICAgYWRkVGlsZShjdXJzb3IsIGRyYXdUaWxlID0gdHJ1ZSwgdXBkYXRlRmlsdGVyID0gZmFsc2Upe1xyXG4gICAgICAgIC8vIGNoZWNrIGlmIHRoZXJlJ3MgYWxyZWFkeSBhIHRpbGUgaW4gdGhlIGNob3NlbiBjZWxsXHJcbiAgICAgICAgbGV0IGdyaWRQb3MgPSB0aGlzLmhhc2gud29ybGRUb0dyaWQoY3Vyc29yKTtcclxuICAgICAgICBsZXQgZXhpc3RpbmdUaWxlID0gZmFsc2U7XHJcbiAgICAgICAgZm9yICggbGV0IHRpbGUgb2YgdGhpcy50aWxlcyApe1xyXG4gICAgICAgICAgICBpZiAoIHRpbGUuaGFzaC54ID09IGdyaWRQb3MueCAmJiB0aWxlLmhhc2gueSA9PWdyaWRQb3MueSlcclxuICAgICAgICAgICAgICAgIGV4aXN0aW5nVGlsZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICggIWV4aXN0aW5nVGlsZSkgeyAvLyBhZGQgYSBuZXcgdGlsZVxyXG4gICAgICAgICAgIHRoaXMuYWRkVGlsZUF0R3JpZChncmlkUG9zLCBkcmF3VGlsZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBhZGRUaWxlQXRHcmlkKGdyaWRQb3MsZHJhd1RpbGUgPSB0cnVlLCB1cGRhdGVGaWx0ZXIgPSBmYWxzZSl7XHJcbiAgICAgICAgbGV0IG5ld1RpbGUgPSBuZXcgVGlsZShncmlkUG9zLngsZ3JpZFBvcy55LCB0aGlzLnRpbGVTaXplKTtcclxuICAgICAgICBpZiAoZHJhd1RpbGUpXHJcbiAgICAgICAgICAgIG5ld1RpbGUuZHJhd1JlY3QodGhpcy50ZXJyYWluUmVuZGVyZXIpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgbmV3VGlsZS5oaWRkZW4gPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudGlsZXMucHVzaChuZXdUaWxlKTtcclxuICAgICAgICB0aGlzLnRpbGVQb3NpdGlvbnMucHVzaChuZXdUaWxlLngsIG5ld1RpbGUueSk7XHJcbiAgICAgICAgaWYgKCB1cGRhdGVGaWx0ZXIpXHJcbiAgICAgICAgICAgIHRoaXMuc3RhZ2UuZmlsdGVycyA9IFtuZXcgU2RmRmlsdGVyKHRoaXMudGlsZVBvc2l0aW9ucywgdGhpcy50aWxlU2l6ZSldO1xyXG4gICAgfVxyXG5cclxuICAgIGVyYXNlVGlsZShjdXJzb3Ipe1xyXG4gICAgICAgIGxldCBncmlkUG9zID0gdGhpcy5oYXNoLndvcmxkVG9HcmlkKGN1cnNvcik7XHJcbiAgICAgICAgZm9yICggbGV0IGkgPSAwOyBpIDwgdGhpcy50aWxlcy5sZW5ndGg7IGkrKyApe1xyXG4gICAgICAgICAgICBsZXQgdGlsZSA9IHRoaXMudGlsZXNbaV07XHJcbiAgICAgICAgICAgIGlmICggIXRpbGUuaGlkZGVuICYmIHRpbGUuaGFzaC54ID09IGdyaWRQb3MueCAmJiB0aWxlLmhhc2gueSA9PWdyaWRQb3MueSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRpbGVzLnNwbGljZShpLDEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50ZXJyYWluUmVuZGVyZXIuY2xlYXIoKTtcclxuICAgICAgICAgICAgICAgIGZvciAoIGxldCBqID0gMTsgaiA8IHRoaXMudGlsZXMubGVuZ3RoOyBqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGlsZXNbal0uZHJhd1JlY3QodGhpcy50ZXJyYWluUmVuZGVyZXIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2xlYXJUaWxlcygpe1xyXG4gICAgICAgIHRoaXMudGlsZXMgPSBbXTtcclxuICAgICAgICB0aGlzLnRpbGVQb3NpdGlvbnMgPSBbXTtcclxuICAgICAgICB0aGlzLnRlcnJhaW5SZW5kZXJlci5jbGVhcigpO1xyXG4gICAgICAgIHRoaXMucGFydGljbGVTeXN0ZW0uYm9kaWVzID0gdGhpcy50aWxlcztcclxuXHJcbiAgICB9XHJcblxyXG4gICAgYWRkUGFydGljbGUoY3Vyc29yKXtcclxuICAgICAgICB0aGlzLnBhcnRpY2xlU3lzdGVtLmFkZFBhcnRpY2xlKGN1cnNvcik7XHJcbiAgICB9XHJcblxyXG4gICAgY2xlYXJQYXJ0aWNsZXMoKSB7XHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5jbGVhclBhcnRpY2xlcygpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyQWxsKCl7XHJcbiAgICAgICAgdGhpcy5jbGVhclRpbGVzKCk7XHJcbiAgICAgICAgdGhpcy5jbGVhclBhcnRpY2xlcygpO1xyXG5cclxuICAgICAgICBsZXQgc3Bhd25Qb2ludCA9IG5ldyBQSVhJLlBvaW50KDkyLDM4KTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmFkZFBhcnRpY2xlKHNwYXduUG9pbnQpO1xyXG4gICAgICAgIHRoaXMuYWRkVGlsZShzcGF3blBvaW50LCBmYWxzZSk7ICAgICBcclxuICAgIH1cclxufSIsImltcG9ydCB7IEluc3RhbmNlciB9IGZyb20gXCIuL2luc3RhbmNlclwiO1xyXG5pbXBvcnQgeyBUaWxlIH0gZnJvbSBcIi4uL3NpbXVsYXRpb24vdGlsZXNcIjtcclxuaW1wb3J0IHsgUGFydGljbGVTeXN0ZW0gfSBmcm9tIFwiLi4vc2ltdWxhdGlvbi9wYXJ0aWNsZVwiO1xyXG5pbXBvcnQge1ZlY3Rvcn0gZnJvbSAnbWF0dGVyLWpzL2J1aWxkL21hdHRlci5taW4uanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRvb2xCdXR0b24ge1xyXG4gICAgY29uc3RydWN0b3IoY2FsbGJhY2spIHtcclxuICAgICAgICAvLyB0aGlzLnNwcml0ZSA9IG5ldyBQSVhJLlNwcml0ZS5mcm9tKHRleHR1cmUpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlID0gbmV3IFBJWEkuR3JhcGhpY3MoKVxyXG4gICAgICAgICAgICAuYmVnaW5GaWxsKDB4ZjBmMGYwKVxyXG4gICAgICAgICAgICAuZHJhd1JvdW5kZWRSZWN0KDAsMCw1MCw1MClcclxuICAgICAgICAgICAgLmVuZEZpbGwoKTtcclxuICAgICAgICB0aGlzLmhpZ2hMaWdodFJlY3QgPSBuZXcgUElYSS5HcmFwaGljcygpXHJcbiAgICAgICAgICAgIC5iZWdpbkZpbGwoMHg3ODk2YjkpXHJcbiAgICAgICAgICAgIC5kcmF3Um91bmRlZFJlY3QoMCwwLDYwLDYwKVxyXG4gICAgICAgICAgICAuZW5kRmlsbCgpO1xyXG4gICAgICAgIHRoaXMuaGlnaExpZ2h0UmVjdC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gICAgICAgIHRoaXMuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHRoaXMuc3ByaXRlLnBvc2l0aW9uO1xyXG5cclxuICAgICAgICB0aGlzLnNwcml0ZS5pbnRlcmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUuYnV0dG9uTW9kZSA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMuc3ByaXRlLm9uKCdwb2ludGVyZG93bicsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYnV0dG9uIHByZXNzISFcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9ICAgXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUaWxlQnV0dG9uIGV4dGVuZHMgVG9vbEJ1dHRvbiB7XHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgXHJcbiAgICAgKiBAcGFyYW0ge0luc3RhbmNlcn0gaW5zdGFuY2VyIFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihpbnN0YW5jZXIsIGNhbGxiYWNrKXtcclxuICAgICAgICBzdXBlcihjYWxsYmFjaywgaW5zdGFuY2VyKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbmNvblRpbGUgPSBuZXcgVGlsZSgwLjUsMC41LDI0KS5kcmF3UmVjdCh0aGlzLnNwcml0ZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJ0aWNsZUJ1dHRvbiBleHRlbmRzIFRvb2xCdXR0b24ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIFxyXG4gICAgICogQHBhcmFtIHtJbnN0YW5jZXJ9IGluc3RhbmNlciBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoaW5zdGFuY2VyLCBjYWxsYmFjayl7XHJcbiAgICAgICAgc3VwZXIoY2FsbGJhY2ssIGluc3RhbmNlcik7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEVyYXNlckJ1dHRvbiBleHRlbmRzIFRvb2xCdXR0b24ge1xyXG4gICAgY29uc3RydWN0b3IoaW5zdGFuY2VyLCBjYWxsYmFjayl7XHJcbiAgICAgICAgc3VwZXIoY2FsbGJhY2ssIGluc3RhbmNlcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUb29sYmFyIHtcclxuICAgIGNvbnN0cnVjdG9yKGluc3RhbmNlciwgVUlfQ29udGFpbmVyKSB7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXIgPSBpbnN0YW5jZXI7XHJcbiAgICAgICAgdGhpcy5zdGFnZSA9IGluc3RhbmNlci5zdGFnZTtcclxuICAgICAgICB0aGlzLlVJX0NvbnRhaW5lciA9IFVJX0NvbnRhaW5lcjtcclxuICAgICAgICB0aGlzLnBhcnRpY2xlU3lzdGVtID0gaW5zdGFuY2VyLnBhcnRpY2xlU3lzdGVtO1xyXG5cclxuICAgICAgICB0aGlzLmJ1dHRvbnMgPSBuZXcgTWFwKFtcclxuICAgICAgICAgICAgW1wiVGlsZVwiLCBuZXcgVGlsZUJ1dHRvbihpbnN0YW5jZXIsIGN1cnNvciA9PiB7XHJcbiAgICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2VyLmFkZFRpbGUoY3Vyc29yKTtcclxuICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0pXSxcclxuICAgICAgICAgICAgW1wiUGFydGljbGVcIiwgbmV3IFBhcnRpY2xlQnV0dG9uKGluc3RhbmNlciwgY3Vyc29yID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2VyLmFkZFBhcnRpY2xlKGN1cnNvcik7XHJcbiAgICAgICAgICAgICB9KV0sXHJcbiAgICAgICAgICAgICBbXCJFcmFzZXJcIiwgbmV3IEVyYXNlckJ1dHRvbihpbnN0YW5jZXIsIGN1cnNvciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgdGhpcy5pbnN0YW5jZXIuZXJhc2VUaWxlKGN1cnNvcik7XHJcbiAgICAgICAgICAgICB9KV1cclxuICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGkgPSAwO1xyXG4gICAgICAgIGxldCBzdGVwID0gNjA7XHJcbiAgICAgICAgdGhpcy5idXR0b25zLmZvckVhY2goKGJ1dHRvbiwga2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGJ1dHRvbi5wb3NpdGlvbi5zZXQoaSpzdGVwKzEwLCAxMCk7XHJcbiAgICAgICAgICAgIGJ1dHRvbi5oaWdoTGlnaHRSZWN0LnBvc2l0aW9uLnNldChpKnN0ZXAgKyA1LCA1KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMuVUlfQ29udGFpbmVyLmFkZENoaWxkKGJ1dHRvbi5oaWdoTGlnaHRSZWN0LGJ1dHRvbi5zcHJpdGUpO1xyXG4gICAgICAgICAgICBpKytcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gdGhpcy5zdGFnZS5hZGRDaGlsZCh0aGlzLmJ1dHRvbkNvbnRhaW5lcik7XHJcblxyXG4gICAgICAgIHRoaXMuYWN0aXZlQnV0dG9uID0gXCJQYXJ0aWNsZVwiO1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucy5nZXQodGhpcy5hY3RpdmVCdXR0b24pLmFjdGl2ZSA9IHRydWU7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYnV0dG9ucy5nZXQodGhpcy5hY3RpdmVCdXR0b24pKTtcclxuXHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IHRoaXMuYnV0dG9ucy5nZXQodGhpcy5hY3RpdmVCdXR0b24pLmNhbGxiYWNrOyAgICBcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKXtcclxuICAgICAgICBsZXQgbmV3QWN0aXZlID0gdGhpcy5hY3RpdmVCdXR0b247XHJcbiAgICAgICAgdGhpcy5idXR0b25zLmZvckVhY2goKGJ1dHRvbiwga2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICggYnV0dG9uLmFjdGl2ZSAmJiB0aGlzLmFjdGl2ZUJ1dHRvbiAhPSBrZXkgKXtcclxuICAgICAgICAgICAgICAgIG5ld0FjdGl2ZSA9IGtleTtcclxuICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJuZXcgYWN0aXZlOiBcIiwgbmV3QWN0aXZlKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuYnV0dG9ucy5nZXQodGhpcy5hY3RpdmVCdXR0b24pLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucy5nZXQodGhpcy5hY3RpdmVCdXR0b24pLmhpZ2hMaWdodFJlY3QudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucy5nZXQobmV3QWN0aXZlKS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucy5nZXQobmV3QWN0aXZlKS5oaWdoTGlnaHRSZWN0LnZpc2libGUgPSB0cnVlO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2ZUJ1dHRvbiA9IG5ld0FjdGl2ZTtcclxuXHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IHRoaXMuYnV0dG9ucy5nZXQodGhpcy5hY3RpdmVCdXR0b24pLmNhbGxiYWNrO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGZ1bmN0aW9uIExvYWRYTUwoY2FsbGJhY2ssIHVybCwgYXN5bmMgPSBmYWxzZSwgbWV0aG9kID0gXCJQT1NUXCIpIHtcclxuICAgIHZhciB4aHR0cCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgeGh0dHAub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PSA0ICYmIHRoaXMuc3RhdHVzID09IDIwMCkge1xyXG4gICAgICAgICAgICBjYWxsYmFjayh0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLy94aHR0cC5vbmxvYWQgPSBmdW5jdGlvbigpe2NhbGxiYWNrKHRoaXMpfTtcclxuICAgIHhodHRwLm9wZW4obWV0aG9kLCB1cmwsIGFzeW5jKTtcclxuICAgIHhodHRwLnNlbmQoKTtcclxufSIsImltcG9ydCB7VmVjdG9yfSBmcm9tICdtYXR0ZXItanMvYnVpbGQvbWF0dGVyLm1pbi5qcyc7XHJcbnZhciBGb250RmFjZU9ic2VydmVyID0gcmVxdWlyZSgnZm9udGZhY2VvYnNlcnZlcicpO1xyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWFkTGV2ZWwoeG1sLCBpbnN0YW5jZXIsIHNpbSl7XHJcbiAgICAvLyBvcGVuIGZpbGVcclxuICAgIGxldCB4bWxEb2MgPSB4bWwucmVzcG9uc2VYTUw7XHJcbiAgICAvLyByZWFkIHRpbGVzXHJcbiAgICBsZXQgeCA9IHhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRpbGVcIik7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHsgXHJcbiAgICAgICAgbGV0IHBvc2l0aW9uID0geFtpXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZS5zcGxpdChcIiBcIik7XHJcbiAgICAgICAgZm9yICggbGV0IGogPSAwOyBqIDwgcG9zaXRpb24ubGVuZ3RoOyBqKyspXHJcbiAgICAgICAgICAgIHBvc2l0aW9uW2pdID0gcGFyc2VJbnQoIHBvc2l0aW9uW2pdKTtcclxuICAgICAgICBsZXQgZ3JpZFBvcyA9IFZlY3Rvci5jcmVhdGUocG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdKVxyXG4gICAgICAgIC8vIGluc3RhbmNlIHRpbGVzIFxyXG4gICAgICAgIGlmICggIShncmlkUG9zLnggPT0gMiAmJiBncmlkUG9zLnkgPT0gMSkgKVxyXG4gICAgICAgICAgICBpbnN0YW5jZXIuYWRkVGlsZUF0R3JpZChncmlkUG9zKTtcclxuICAgIH1cclxuICAgIHNpbS5yZXNldEZpbHRlcigpO1xyXG4gICAgIGxldCBmb250ID0gbmV3IEZvbnRGYWNlT2JzZXJ2ZXIoJ2FyY2FkZWNsYXNzaWNyZWd1bGFyJyk7XHJcbiAgICAgZm9udC5sb2FkKCkudGhlbihzaW0uc3RhcnRBcHAuYmluZChzaW0pKTsgICBcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUxldmVsKGluc3RhbmNlcil7XHJcbiAgICAvLyBnZXQgdGlsZXNcclxuICAgIGxldCB0aWxlcyA9IGluc3RhbmNlci50aWxlcztcclxuICAgIC8vIHNlcmlhbGl6ZSB0aWxlc1xyXG4gICAgbGV0IHRpbGVPdXRwdXQgPSBbXTtcclxuICAgIGZvciAoIGxldCB0aWxlIG9mIHRpbGVzKSB7XHJcbiAgICAgICAgdGlsZU91dHB1dC5wdXNoKFsgdGlsZS5oYXNoLngsIHRpbGUuaGFzaC55XSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRpbGVPdXRwdXQ7ICAgIFxyXG59XHJcbiIsImV4cG9ydCBmdW5jdGlvbiBnZXRPUygpIHtcclxuICAgIHZhciB1c2VyQWdlbnQgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCxcclxuICAgICAgICBwbGF0Zm9ybSA9IHdpbmRvdy5uYXZpZ2F0b3IucGxhdGZvcm0sXHJcbiAgICAgICAgbWFjb3NQbGF0Zm9ybXMgPSBbJ01hY2ludG9zaCcsICdNYWNJbnRlbCcsICdNYWNQUEMnLCAnTWFjNjhLJ10sXHJcbiAgICAgICAgd2luZG93c1BsYXRmb3JtcyA9IFsnV2luMzInLCAnV2luNjQnLCAnV2luZG93cycsICdXaW5DRSddLFxyXG4gICAgICAgIGlvc1BsYXRmb3JtcyA9IFsnaVBob25lJywgJ2lQYWQnLCAnaVBvZCddLFxyXG4gICAgICAgIG9zID0gbnVsbDtcclxuICBcclxuICAgIGlmIChtYWNvc1BsYXRmb3Jtcy5pbmRleE9mKHBsYXRmb3JtKSAhPT0gLTEpIHtcclxuICAgICAgb3MgPSAnTWFjIE9TJztcclxuICAgIH0gZWxzZSBpZiAoaW9zUGxhdGZvcm1zLmluZGV4T2YocGxhdGZvcm0pICE9PSAtMSkge1xyXG4gICAgICBvcyA9ICdpT1MnO1xyXG4gICAgfSBlbHNlIGlmICh3aW5kb3dzUGxhdGZvcm1zLmluZGV4T2YocGxhdGZvcm0pICE9PSAtMSkge1xyXG4gICAgICBvcyA9ICdXaW5kb3dzJztcclxuICAgIH0gZWxzZSBpZiAoL0FuZHJvaWQvLnRlc3QodXNlckFnZW50KSkge1xyXG4gICAgICBvcyA9ICdBbmRyb2lkJztcclxuICAgIH0gZWxzZSBpZiAoIW9zICYmIC9MaW51eC8udGVzdChwbGF0Zm9ybSkpIHtcclxuICAgICAgb3MgPSAnTGludXgnO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcmV0dXJuIG9zO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QnJvd3Nlcigpe1xyXG4gICAgdmFyIHNCcm93c2VyLCBzVXNyQWcgPSBuYXZpZ2F0b3IudXNlckFnZW50O1xyXG5cclxuICAgIC8vIFRoZSBvcmRlciBtYXR0ZXJzIGhlcmUsIGFuZCB0aGlzIG1heSByZXBvcnQgZmFsc2UgcG9zaXRpdmVzIGZvciB1bmxpc3RlZCBicm93c2Vycy5cclxuICAgIFxyXG4gICAgaWYgKHNVc3JBZy5pbmRleE9mKFwiRmlyZWZveFwiKSA+IC0xKSB7XHJcbiAgICAgIHNCcm93c2VyID0gXCJNb3ppbGxhIEZpcmVmb3hcIjtcclxuICAgICAgLy8gXCJNb3ppbGxhLzUuMCAoWDExOyBVYnVudHU7IExpbnV4IHg4Nl82NDsgcnY6NjEuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82MS4wXCJcclxuICAgIH0gZWxzZSBpZiAoc1VzckFnLmluZGV4T2YoXCJTYW1zdW5nQnJvd3NlclwiKSA+IC0xKSB7XHJcbiAgICAgIHNCcm93c2VyID0gXCJTYW1zdW5nIEludGVybmV0XCI7XHJcbiAgICAgIC8vIFwiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDk7IFNBTVNVTkcgU00tRzk1NUYgQnVpbGQvUFBSMS4xODA2MTAuMDExKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBTYW1zdW5nQnJvd3Nlci85LjQgQ2hyb21lLzY3LjAuMzM5Ni44NyBNb2JpbGUgU2FmYXJpLzUzNy4zNlxyXG4gICAgfSBlbHNlIGlmIChzVXNyQWcuaW5kZXhPZihcIk9wZXJhXCIpID4gLTEgfHwgc1VzckFnLmluZGV4T2YoXCJPUFJcIikgPiAtMSkge1xyXG4gICAgICBzQnJvd3NlciA9IFwiT3BlcmFcIjtcclxuICAgICAgLy8gXCJNb3ppbGxhLzUuMCAoTWFjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAxMF8xNF8wKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzAuMC4zNTM4LjEwMiBTYWZhcmkvNTM3LjM2IE9QUi81Ny4wLjMwOTguMTA2XCJcclxuICAgIH0gZWxzZSBpZiAoc1VzckFnLmluZGV4T2YoXCJUcmlkZW50XCIpID4gLTEpIHtcclxuICAgICAgc0Jyb3dzZXIgPSBcIk1pY3Jvc29mdCBJbnRlcm5ldCBFeHBsb3JlclwiO1xyXG4gICAgICAvLyBcIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBUcmlkZW50LzcuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFOyBab29tIDMuNi4wOyB3YnggMS4wLjA7IHJ2OjExLjApIGxpa2UgR2Vja29cIlxyXG4gICAgfSBlbHNlIGlmIChzVXNyQWcuaW5kZXhPZihcIkVkZ2VcIikgPiAtMSkge1xyXG4gICAgICBzQnJvd3NlciA9IFwiTWljcm9zb2Z0IEVkZ2VcIjtcclxuICAgICAgLy8gXCJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjExMCBTYWZhcmkvNTM3LjM2IEVkZ2UvMTYuMTYyOTlcIlxyXG4gICAgfSBlbHNlIGlmIChzVXNyQWcuaW5kZXhPZihcIkNocm9tZVwiKSA+IC0xKSB7XHJcbiAgICAgIHNCcm93c2VyID0gXCJHb29nbGUgQ2hyb21lIG9yIENocm9taXVtXCI7XHJcbiAgICAgIC8vIFwiTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBVYnVudHUgQ2hyb21pdW0vNjYuMC4zMzU5LjE4MSBDaHJvbWUvNjYuMC4zMzU5LjE4MSBTYWZhcmkvNTM3LjM2XCJcclxuICAgIH0gZWxzZSBpZiAoc1VzckFnLmluZGV4T2YoXCJTYWZhcmlcIikgPiAtMSkge1xyXG4gICAgICBzQnJvd3NlciA9IFwiQXBwbGUgU2FmYXJpXCI7XHJcbiAgICAgIC8vIFwiTW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyAxMV80IGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwNS4xLjE1IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8xMS4wIE1vYmlsZS8xNUUxNDggU2FmYXJpLzYwNC4xIDk4MHgxMzA2XCJcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNCcm93c2VyID0gXCJ1bmtub3duXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHNCcm93c2VyO1xyXG59XHJcbiIsImltcG9ydCB7VmVjdG9yfSBmcm9tICdtYXR0ZXItanMvYnVpbGQvbWF0dGVyLm1pbi5qcyc7XHJcbmltcG9ydCB7IFBhcnRpY2xlU3lzdGVtLCBQYXJ0aWNsZUVtaXR0ZXIgfSBmcm9tIFwiLi9wYXJ0aWNsZS5qc1wiO1xyXG5pbXBvcnQge015QnV0dG9ufSBmcm9tICcuLi9hcHAvYnV0dG9ucy5qcydcclxuaW1wb3J0IHsgUGFydGljbGVGaWx0ZXIsIFBvc2l0aW9uU2FtcGxlciB9IGZyb20gXCIuLi9ncmFwaGljcy9wYXJ0aWNsZUZpbHRlci5qc1wiO1xyXG5pbXBvcnQgeyBUb29sYmFyIH0gZnJvbSBcIi4uL2FwcC90b29sYmFyLmpzXCI7XHJcbmltcG9ydCB7IEluc3RhbmNlciB9IGZyb20gXCIuLi9hcHAvaW5zdGFuY2VyLmpzXCI7XHJcblxyXG5pbXBvcnQge0xvYWRYTUx9IGZyb20gJy4uL25ldHdvcmsveGh0dHAuanMnO1xyXG5pbXBvcnQgeyByZWFkTGV2ZWwsIHNlcmlhbGl6ZUxldmVsfSBmcm9tICcuLi9uZXR3b3JrL3NlcmlhbGl6YXRpb24nO1xyXG5pbXBvcnQge2dldE9TLCBnZXRCcm93c2VyfSBmcm9tICcuLi9uZXR3b3JrL2dldE9TLmpzJztcclxuaW1wb3J0IHtnZXRMZXZlbHMsIGdldExhc3RMZXZlbCwgZ2V0UmFuZG9tTGV2ZWx9IGZyb20gJy4uL25ldHdvcmsvZ2V0TGV2ZWwuanMnO1xyXG5cclxuLyoqXHJcbiAqIENvbnRyb2xzIGZsdWlkIHNpbXVsYXRpb24gYW5kIHRpbWVzdGVwXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgU2ltdWxhdGlvbntcclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge1BJWEkuQXBwbGljYXRpb259IGFwcCBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoYXBwKXtcclxuICAgICAgICB0aGlzLmFwcCA9IGFwcDtcclxuICAgICAgICB0aGlzLnVwZGF0ZUxhZyA9IDA7IC8vIHVzZWQgZm9yIGZpeGVkIHVwZGF0ZSBsb29wXHJcblxyXG4gICAgICAgIC8vIG1hcCBzZXR0aW5nc1xyXG4gICAgICAgIHRoaXMubWFwRGltZW5zaW9ucyA9IG5ldyBQSVhJLlBvaW50KDE2LDE2KTtcclxuICAgICAgICB0aGlzLnRpbGVTaXplID0gMzI7XHJcbiAgICAgICAgdGhpcy5mcmFtZUNvdW50ID0gMDsgLy8gY2FsY3VsYXRlIGZwcyAgIFxyXG4gICAgICAgIHRoaXMubGV2ZWxfbG9hZGVkID0gZmFsc2U7XHJcblxyXG4gICAgICAgIC8vIGVtcHR5IGNvbnRhaW5lciB0byByZW5kZXIgdGhlIHBhcnRpY2xlIGZpbHRlclxyXG4gICAgICAgIHRoaXMucGFydGljbGVDb250YWluZXIgPSBuZXcgUElYSS5Db250YWluZXIoKTtcclxuXHJcbiAgICAgICAgLy8gaG9sZHMgZGlzcGxheSBvYmplY3RzIGZvciBVSVxyXG4gICAgICAgIHRoaXMuVUlfRWxlbWVudHMgPSBuZXcgUElYSS5Db250YWluZXIoKTsgXHJcbiAgICAgICAgdGhpcy5VSV9FbGVtZW50cy5hbHBoYSA9IDAuNVxyXG5cclxuICAgICAgICAvLyBtb3VzZSBpbnB1dCBmb3IgcGFydGljbGUgc3Bhd25pbmdcclxuICAgICAgICB0aGlzLm1vdXNlRG93biA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuY3Vyc29yID0gdGhpcy5hcHAucmVuZGVyZXIucGx1Z2lucy5pbnRlcmFjdGlvbi5tb3VzZS5nbG9iYWw7XHJcbiAgICAgICAgaWYgKCBcIm9udG91Y2hzdGFydFwiIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCApIHtcclxuICAgICAgICAgICAgdGhpcy5jdXJzb3IgPSBuZXcgUElYSS5Qb2ludCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5pbml0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICAgICAgLy8gZHJhd3MgYW5kIHVwZGF0ZXMgcGFydGljbGUgcG9zaXRpb25zXHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbSA9IG5ldyBQYXJ0aWNsZVN5c3RlbShcclxuICAgICAgICAgICAgVmVjdG9yLmNyZWF0ZSgtMTAwLC0xMDApLCBcclxuICAgICAgICAgICAgVmVjdG9yLmNyZWF0ZSh3aW5kb3cuaW5uZXJXaWR0aCsxMDAsIHdpbmRvdy5pbm5lckhlaWdodCsxMDApLFxyXG4gICAgICAgICAgICBbXSk7XHJcblxyXG4gICAgICAgIHRoaXMuZW1pdHRlcnMgPSBbXTtcclxuXHJcbiAgICAgICAgdGhpcy5hcHAuc3RhZ2UuYWRkQ2hpbGQodGhpcy5wYXJ0aWNsZUNvbnRhaW5lcik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gaGFuZGxlcyBhbGwgdGlsZS9wYXJ0aWNsZSBzcGF3bnMvZGVzcGF3bnNcclxuICAgICAgICB0aGlzLmluc3RhbmNlciA9IG5ldyBJbnN0YW5jZXIodGhpcy5wYXJ0aWNsZVN5c3RlbSwgdGhpcy5hcHAuc3RhZ2UpO1xyXG4gIFxyXG4gICAgICAgIC8vIHVzZWQgdG8gbGFiZWwgYSBVSSBidXR0b24sIHRoaXMgc2hvdWxkIHByb2JhYmx5IGdldCBtb3ZlZCBzb21ld2hlcmUgZWxzZVxyXG4gICAgICAgIGxldCBzcGF3blBvaW50ID0gbmV3IFBJWEkuUG9pbnQoOTIsMzgpO1xyXG4gICAgICAgIHRoaXMuaW5zdGFuY2VyLmFkZFRpbGUoc3Bhd25Qb2ludCwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaW5zdGFuY2VyLmFkZFBhcnRpY2xlKHNwYXduUG9pbnQpO1xyXG5cclxuICAgICAgICAvLyBzZGYgc2hhZGVyIGVmZmVjdCBmb3IgdGhlIHBhcnRpY2xlc1xyXG4gICAgICAgIHRoaXMucGFydGljbGVGaWx0ZXIgPSBuZXcgUGFydGljbGVGaWx0ZXIoXHJcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVTeXN0ZW0uciwgXHJcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVTeXN0ZW0uUEFSVElDTEVfTElNSVQpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuc2RmVGV4dHVyZSA9IG5ldyBQb3NpdGlvblNhbXBsZXIodGhpcy5wYXJ0aWNsZVN5c3RlbS5QQVJUSUNMRV9MSU1JVCwgdGhpcy5wYXJ0aWNsZUZpbHRlcik7XHJcbiAgICAgICAgdGhpcy5zZGZUZXh0dXJlLnVwZGF0ZVBhcnRpY2xlcyh0aGlzLnBhcnRpY2xlU3lzdGVtLnBhcnRpY2xlUG9zaXRpb25zKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyB0aGlzLmVtaXR0ZXJzLnB1c2gobmV3IFBhcnRpY2xlRW1pdHRlcih0aGlzLnBhcnRpY2xlU3lzdGVtLFZlY3Rvci5jcmVhdGUoMTAwLDEwMCkpKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZUNvbnRhaW5lci5maWx0ZXJBcmVhID0gdGhpcy5hcHAuc2NyZWVuO1xyXG4gICAgICAgIHRoaXMucGFydGljbGVDb250YWluZXIuZmlsdGVycyA9IFt0aGlzLnBhcnRpY2xlRmlsdGVyXTtcclxuXHJcbiAgICAgICAgLy8gbWFrZSB0aWxlIGNvbGxpZGVycyAmIGFkZCB0byBwaHlzaWNzIGVuZ2luZVxyXG4gICAgICAgIHRoaXMuaW5pdFdvcmxkQm91bmRzKCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKiBcclxuICAgICAqIC0gYWRkIGRpc3BsYXkgb2JqZWN0cyB0byBzdGFnZVxyXG4gICAgICogLSBhcHBseSBmaWx0ZXJzXHJcbiAgICAgKiAtIHN0YXJ0IHRoZSBnYW1lIGxvb3BcclxuICAgICAqL1xyXG4gICAgc3RhcnRBcHAoKXtcclxuICAgICAgICB0aGlzLmluaXRVSSgpO1xyXG4gICAgICAgIHRoaXMuYXBwLnN0YWdlLmFkZENoaWxkKFxyXG4gICAgICAgICAgICB0aGlzLnBhcnRpY2xlU3lzdGVtLnJlbmRlcmVyLFxyXG4gICAgICAgICAgICB0aGlzLlVJX0VsZW1lbnRzKTsgICAgICAgICBcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFBJWEkubG9hZGVyLnJlc291cmNlc1snc3ByaXRlcy9lcmFzZXIucG5nJ10pOyAgICAgICBcclxuXHJcbiAgICAgICAgLy8gdGhpcyBpcyBjYXVzaW5nIHByb2JsZW1zIHdpdGggYXN5bmMgcmVxdWVzdHMgb24gbW9iaWxlICAgICAgXHJcbiAgICAgICAgdGhpcy5hcHAudGlja2VyLmFkZChkZWx0YSA9PiB0aGlzLnVwZGF0ZShkZWx0YSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBDYWxsZWQgYXQgdGhlIGVuZCBvZiBldmVyeSBhbmltYXRpb24gZnJhbWUgKi9cclxuICAgIHVwZGF0ZShkZWx0YSl7XHJcbiAgICAgICAgdGhpcy5mcmFtZUNvdW50Kys7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnBhcnRpY2xlU3lzdGVtLnBhcnRpY2xlc1t0aGlzLnBhcnRpY2xlU3lzdGVtLnBhcnRpY2xlQ291bnQtMV0ucG9zaXRpb24pO1xyXG5cclxuICAgICAgICAvLyB0aGlzLnBhcnRpY2xlRmlsdGVyLnVuaWZvcm1zLnBvc2l0aW9uX3NhbXBsZXIgPSB0aGlzLnNkZlRleHR1cmUuZmlsdGVyVGV4dHVyZTtcclxuICAgICAgICAvLyB0aGlzLnBhcnRpY2xlRmlsdGVyLnVuaWZvcm1zLm51bVBhcnRpY2xlcyA9IHRoaXMucGFydGljbGVTeXN0ZW0ucGFydGljbGVDb3VudDtcclxuICAgICAgICB0aGlzLkZpeGVkVXBkYXRlKCk7XHJcblxyXG4gICAgICAgIC8vIHRoaXMuc2RmVGV4dHVyZS51cGRhdGVQYXJ0aWNsZXModGhpcy5wYXJ0aWNsZVN5c3RlbS5wYXJ0aWNsZVBvc2l0aW9ucyk7XHJcblxyXG4gICAgICAgLy8gdGhpcy51cGRhdGVVSSgpO1xyXG4gICAgICAgdGhpcy50b29sYmFyLnVwZGF0ZSgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIHNwYXduIGNvbGxpZGVyIHRpbGVzIG9uIHJpZ2h0IGNsaWNrXHJcbiAgICAgICAgaWYgKCB0aGlzLnJpZ2h0TW91c2VEb3duKXtcclxuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZXIuYWRkVGlsZSh0aGlzLmN1cnNvcik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIFxyXG4gICAgLyoqIFVwZGF0ZXMgYXQgNjAgSHogY29uc3RhbnQgKi9cclxuICAgIEZpeGVkVXBkYXRlKCl7XHJcbiAgICAgICAgLy8gdGhpcyBoYXMgdG8gYmUgaW5zaWRlIHRoaXMgZnVuY3Rpb24gb3IgZWxzZSB3ZSBnZXQgcGFydGljbGUgZmxpY2tlcnMgb2NjYXNpb25hbGx5IGR1cmluZyBzcGF3bnNcclxuICAgICAgICAvLyBrZWVwaW5nIGl0IG91dHNpZGUgdGhlIGZpeGVkIHRpbWVzdGVwIGxvb3AgYi9jIHdlIHN0aWxsIG9ubHkgbmVlZCAxIHRleHR1cmUvdW5pZm9ybSB1cGRhdGUgcGVyIGZyYW1lXHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlTGFnICs9IHRoaXMuYXBwLnRpY2tlci5kZWx0YU1TO1xyXG4gICAgICAgIHdoaWxlICggdGhpcy51cGRhdGVMYWcgPj0gMTYuNjY2ICkgeyAgXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTGFnIC09IDE2LjY2NiAvLyBtb3ZlIGZvcndhcmQgb25lIHRpbWUgc3RlcFxyXG4gICAgICAgICAgICBmb3IgKCBsZXQgZW1pdHRlciBvZiB0aGlzLmVtaXR0ZXJzIClcclxuICAgICAgICAgICAgICAgIGVtaXR0ZXIudXBkYXRlKCk7XHJcbiAgICAgICAgICAgIC8vIHNwYXduIGVudGl0aWVzXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLnBhcnRpY2xlRmlsdGVyLnVuaWZvcm1zLnBvc2l0aW9uX3NhbXBsZXIgPSB0aGlzLnNkZlRleHR1cmUuZmlsdGVyVGV4dHVyZTtcclxuICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZUZpbHRlci51bmlmb3Jtcy5udW1QYXJ0aWNsZXMgPSB0aGlzLnBhcnRpY2xlU3lzdGVtLnBhcnRpY2xlQ291bnQ7XHJcbiAgICAgICAgICAgIHRoaXMuc2RmVGV4dHVyZS51cGRhdGVQYXJ0aWNsZXModGhpcy5wYXJ0aWNsZVN5c3RlbS5wYXJ0aWNsZVBvc2l0aW9ucyk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIHRoaXMubW91c2VEb3duICl7XHJcbiAgICAgICAgICAgICAgICBsZXQgcG9pbnRfaW5fdWkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGZvciAoIGxldCBjaGlsZCBvZiB0aGlzLlVJX0VsZW1lbnRzLmNoaWxkcmVuKXtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hcHAucmVuZGVyZXIucGx1Z2lucy5pbnRlcmFjdGlvbi5oaXRUZXN0KHRoaXMuY3Vyc29yLCBjaGlsZCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50X2luX3VpID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICghcG9pbnRfaW5fdWkpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50b29sYmFyLmNhbGxiYWNrLmNhbGwodGhpcywgdGhpcy5jdXJzb3IpO1xyXG4gICAgICAgICAgICB9ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVTeXN0ZW0udXBkYXRlKCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpbml0V29ybGRCb3VuZHMoKXsgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBpbnN0YW5jZUZyb21YTUwgPSAoeG1sKSA9PntcclxuICAgICAgICAgICAgcmVhZExldmVsKHhtbCwgdGhpcy5pbnN0YW5jZXIsIHRoaXMpO1xyXG4gICAgICAgICAgICAvLyB0aGlzLmxldmVsX2xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIC8vIHdhaXQgZm9yIGZvbnRzIHRvIGxvYWQgYmVmb3JlIG1ha2luZyB1aSBhbmQgc3RhcnRpbmcgZ2FtZSBsb29wXHJcbiAgICAgICAgICAgIC8vdGhpcy5zdGFydEFwcCgpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAvLyBsZXQgZm9udCA9IG5ldyBGb250RmFjZU9ic2VydmVyKCdhcmNhZGVjbGFzc2ljcmVndWxhcicpO1xyXG4gICAgICAgIC8vIGZvbnQubG9hZCgpLnRoZW4odGhpcy5zdGFydEFwcC5iaW5kKHRoaXMpKTsgICAgXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBMb2FkWE1MKGluc3RhbmNlRnJvbVhNTCwgXCI2LnhtbFwiKTtcclxuICAgICAgICBnZXRSYW5kb21MZXZlbChpbnN0YW5jZUZyb21YTUwpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVVJKCl7XHJcbiAgICAgICAgdGhpcy5QYXJ0aWNsZUNvdW50RGlzcGxheS50ZXh0ID0gYFBBUlRJQ0xFUzogJHt0aGlzLnBhcnRpY2xlU3lzdGVtLnBhcnRpY2xlQ291bnR9YDtcclxuICAgICAgICAvL3RoaXMuVGlsZUNvdW50RGlzcGxheS50ZXh0ID0gYFRJTEVTOiAke3RoaXMudGlsZXMubGVuZ3RofWA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKCB0aGlzLmZyYW1lQ291bnQgJSAxMCA9PSAwICl7XHJcbiAgICAgICAgICAgIGNvbnN0IGZwcyA9IE51bWJlci5wYXJzZUZsb2F0KDEuMCAvICh0aGlzLmFwcC50aWNrZXIuZGVsdGFNUyAqIDAuMDAxKSkudG9GaXhlZCgyKTtcclxuICAgICAgICAgICAgdGhpcy5GUFNEaXNwbGF5LnRleHQgPSBgRlBTOiAke2Zwc31gXHJcbiAgICAgICAgICAgIHRoaXMuZnJhbWVDb3VudCA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGluaXRVSSgpe1xyXG4gICAgICAgIC8vIG9iamVjdCBzcGF3bmluZyB0b29sYmFyICAgXHJcbiAgICAgICAgdGhpcy50b29sYmFyID0gbmV3IFRvb2xiYXIodGhpcy5pbnN0YW5jZXIsIHRoaXMuVUlfRWxlbWVudHMgKTtcclxuXHJcbiAgICAgICAgLy8gYmxhY2sgJiB3aGl0ZSBmb250IHN0eWxlc1xyXG4gICAgICAgIGNvbnN0IHN0eWxlID0ge1xyXG4gICAgICAgICAgICBmaWxsOiAweGZmZmZmZixcclxuICAgICAgICAgICAgZm9udFNpemU6IDMyLFxyXG4gICAgICAgICAgICBmb250RmFtaWx5OiAnYXJjYWRlY2xhc3NpY3JlZ3VsYXInXHJcbiAgICAgICAgfTsgXHJcbiAgICAgICAgXHJcbiAgICAgICAgLy9jb25zdCB4T2Zmc2V0ID0gdGhpcy50aWxlU2l6ZSAqIHRoaXMubWFwRGltZW5zaW9ucy54ICsgdGhpcy50aWxlU2l6ZTtcclxuICAgICAgICBjb25zdCB4T2Zmc2V0ID0gd2luZG93LmlubmVyV2lkdGggLSAyNTA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gRlBTICYgUGFydGljbGVzIGNvdW50ZXJzXHJcbiAgICAgICAgLy8gdGhpcy5GUFNEaXNwbGF5ID0gbmV3IFBJWEkuVGV4dChgRlBTOiAkezB9YCwgc3R5bGUpO1xyXG4gICAgICAgIC8vIHRoaXMuUGFydGljbGVDb3VudERpc3BsYXkgPSBuZXcgUElYSS5UZXh0KGBQQVJUSUNMRVM6ICR7dGhpcy5wYXJ0aWNsZVN5c3RlbS5wYXJ0aWNsZUNvdW50fWAsIHN0eWxlKTsgICAgIFxyXG4gICAgICAgIC8vdGhpcy5UaWxlQ291bnREaXNwbGF5ID0gbmV3IFBJWEkuVGV4dChgVElMRVM6ICR7dGhpcy5wYXJ0aWNsZVN5c3RlbS5wYXJ0aWNsZUNvdW50fWAsIHN0eWxlKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyB0aGlzLkZQU0Rpc3BsYXkucG9zaXRpb24uc2V0KCB4T2Zmc2V0LHRoaXMudGlsZVNpemUpO1xyXG4gICAgICAgIC8vIHRoaXMuUGFydGljbGVDb3VudERpc3BsYXkucG9zaXRpb24uc2V0KCB4T2Zmc2V0LCB0aGlzLnRpbGVTaXplICogMiApOyBcclxuICAgICAgICAvL3RoaXMuVGlsZUNvdW50RGlzcGxheS5wb3NpdGlvbi5zZXQoIHhPZmZzZXQsIHRoaXMudGlsZVNpemUgKiA2ICk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5jbGVhckJ1dHRvbiA9IG5ldyBNeUJ1dHRvbihcclxuICAgICAgICAgICAgJ0NMRUFSJyxcclxuICAgICAgICAgICAgLy8gbmV3IFBJWEkuUG9pbnQoeE9mZnNldCAsdGhpcy50aWxlU2l6ZSozKSxcclxuICAgICAgICAgICAgbmV3IFBJWEkuUG9pbnQod2luZG93LmlubmVyV2lkdGggLSAxMDUsIDEwKSxcclxuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZXIuY2xlYXJBbGwuYmluZCh0aGlzLmluc3RhbmNlcikpO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLnNhdmVCdXR0b24gPSBuZXcgTXlCdXR0b24oXHJcbiAgICAgICAgICAgICAgICAnU0FWRScsXHJcbiAgICAgICAgICAgICAgICBuZXcgUElYSS5Qb2ludCh3aW5kb3cuaW5uZXJXaWR0aCAtIDE5MCwgMTApLFxyXG4gICAgICAgICAgICAgICAgKCkgPT57XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRleHRfaW5wdXQgPSBwcm9tcHQoXCJuYW1lIHlvdXIgbGV2ZWwsIHB1bmtcIiwgXCJibG9iIGNvXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZXh0X2lucHV0KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJsZXZlbCBuYW1lOiBcIix0ZXh0X2lucHV0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJC5wb3N0KCdwaHAvYWRkX2xldmVsLnBocCcsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lOiBuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT1M6IGdldE9TKCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicm93c2VyOiBnZXRCcm93c2VyKCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB0ZXh0X2lucHV0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlsZXM6IHNlcmlhbGl6ZUxldmVsKHRoaXMuaW5zdGFuY2VyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbihkYXRhLCBzdGF0dXMpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJEYXRhOiBcIiArIGRhdGEgKyBcIlxcblN0YXR1czogXCIgKyBzdGF0dXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVc2VyIGNhbmNlbGxlZCB0aGUgcHJvbXB0LlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAvLyBnZXRMZXZlbHMoKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLlVJX0VsZW1lbnRzLmFkZENoaWxkKC8vdGhpcy5GUFNEaXNwbGF5LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuUGFydGljbGVDb3VudERpc3BsYXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMuVGlsZUNvdW50RGlzcGxheSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyQnV0dG9uLmRpc3BsYXlDb250YWluZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNhdmVCdXR0b24uZGlzcGxheUNvbnRhaW5lcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMudGlsZUNsZWFyQnV0dG9uLmRpc3BsYXlDb250YWluZXIpO1xyXG5cclxuICAgICAgIFxyXG4gICAgfVxyXG4gICAgcmVzZXRGaWx0ZXIoKSB7XHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZUZpbHRlciA9IG5ldyBQYXJ0aWNsZUZpbHRlcihcclxuICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5yLCBcclxuICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5QQVJUSUNMRV9MSU1JVCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5zZGZUZXh0dXJlID0gbmV3IFBvc2l0aW9uU2FtcGxlcih0aGlzLnBhcnRpY2xlU3lzdGVtLlBBUlRJQ0xFX0xJTUlULCB0aGlzLnBhcnRpY2xlRmlsdGVyKTtcclxuICAgICAgICB0aGlzLnNkZlRleHR1cmUudXBkYXRlUGFydGljbGVzKHRoaXMucGFydGljbGVTeXN0ZW0ucGFydGljbGVQb3NpdGlvbnMpO1xyXG5cclxuICAgICAgICAgXHJcbiAgICAgICAgdGhpcy5wYXJ0aWNsZUNvbnRhaW5lci5maWx0ZXJBcmVhID0gdGhpcy5hcHAuc2NyZWVuO1xyXG4gICAgICAgIHRoaXMucGFydGljbGVDb250YWluZXIuZmlsdGVycyA9IFt0aGlzLnBhcnRpY2xlRmlsdGVyXTsgXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgZXZlbnQgPT4ge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LmJ1dHRvbil7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDA6IHRoaXMubW91c2VEb3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgMjogdGhpcy5yaWdodE1vdXNlRG93biA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgZXZlbnQgPT4ge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LmJ1dHRvbil7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDA6IHRoaXMubW91c2VEb3duID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDI6IHRoaXMucmlnaHRNb3VzZURvd24gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfSBcclxuICAgICAgICB9KTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ3Jlc2l6ZScsIHRoaXMub25XaW5kb3dSZXNpemUuYmluZCh0aGlzKSwgZmFsc2UgKTtcclxuXHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBldmVudCA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubW91c2VEb3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5jdXJzb3Iuc2V0KGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCwgZXZlbnQudG91Y2hlc1swXS5jbGllbnRZKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZXZlbnQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmN1cnNvci5zZXQoZXZlbnQudG91Y2hlc1swXS5jbGllbnRYLCBldmVudC50b3VjaGVzWzBdLmNsaWVudFkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5tb3VzZURvd24gPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXlDYW52YXMnKS5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBldmVudCA9PiB7XHJcbiAgICAgICAgICAgIGlmICggZXZlbnQua2V5Q29kZSA9PSAzMil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc2V0RmlsdGVyKCk7IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBvbldpbmRvd1Jlc2l6ZSgpIHtcclxuICAgICAgICAvLyBHZXQgY2FudmFzIHBhcmVudCBub2RlXHJcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdGhpcy5hcHAudmlldy5wYXJlbnROb2RlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFJlc2l6ZSB0aGUgcmVuZGVyZXJcclxuICAgICAgICB0aGlzLmFwcC5yZW5kZXJlci5yZXNpemUocGFyZW50LmNsaWVudFdpZHRoLCBwYXJlbnQuY2xpZW50SGVpZ2h0KTtcclxuICAgIH1cclxufSIsImltcG9ydCB7Z2V0T1MsIGdldEJyb3dzZXJ9IGZyb20gJy4vZ2V0T1MnO1xyXG5pbXBvcnQge0xvYWRYTUx9IGZyb20gJy4veGh0dHAnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldExldmVscygpe1xyXG4gICAgJC5wb3N0KCdwaHAvZ2V0X2xldmVsX2xpc3QucGhwJyx7XHJcbiAgICAgICAgdGltZTogbmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoKSxcclxuICAgICAgICBPUzogZ2V0T1MoKSxcclxuICAgICAgICBicm93c2VyOiBnZXRCcm93c2VyKCksXHJcbiAgICB9LFxyXG4gICAgZnVuY3Rpb24oZGF0YSwgc3RhdHVzKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkRhdGE6IFwiICsgZGF0YSArIFwiXFxuU3RhdHVzOiBcIiArIHN0YXR1cyk7XHJcbiAgICB9KVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGFzdExldmVsKGNhbGxiYWNrKXtcclxuICAgICQucG9zdCgncGhwL2dldF9sYXN0X2xldmVsLnBocCcse1xyXG4gICAgICAgIHRpbWU6IG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCksXHJcbiAgICAgICAgT1M6IGdldE9TKCksXHJcbiAgICAgICAgYnJvd3NlcjogZ2V0QnJvd3NlcigpLFxyXG4gICAgfSxcclxuICAgIGZ1bmN0aW9uKGRhdGEsIHN0YXR1cyl7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJEYXRhOiBcIiArIGRhdGEgKyBcIlxcblN0YXR1czogXCIgKyBzdGF0dXMpO1xyXG4gICAgICAgIExvYWRYTUwoY2FsbGJhY2ssIGRhdGEgKyAnLnhtbCcpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21MZXZlbChjYWxsYmFjayl7XHJcbiAgICAkLnBvc3QoJ3BocC9nZXRfcmFuZF9sZXZlbC5waHAnLHtcclxuICAgICAgICB0aW1lOiBuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygpLFxyXG4gICAgICAgIE9TOiBnZXRPUygpLFxyXG4gICAgICAgIGJyb3dzZXI6IGdldEJyb3dzZXIoKSxcclxuICAgIH0sXHJcbiAgICBmdW5jdGlvbihkYXRhLCBzdGF0dXMpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRGF0YTogXCIgKyBkYXRhICsgXCJcXG5TdGF0dXM6IFwiICsgc3RhdHVzKTtcclxuICAgICAgICBMb2FkWE1MKGNhbGxiYWNrLCAnbGV2ZWxzLycgKyAgZGF0YSArICcueG1sJywgZmFsc2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vIGV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21MZXZlbChjYWxsYmFjayl7XHJcbi8vICAgICAkLmdldCgncGhwL2dldF9yYW5kX2xldmVsLnBocCcse1xyXG4vLyAgICAgICAgIHRpbWU6IG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCksXHJcbi8vICAgICAgICAgT1M6IGdldE9TKCksXHJcbi8vICAgICAgICAgYnJvd3NlcjogZ2V0QnJvd3NlcigpLFxyXG4vLyAgICAgfSxcclxuLy8gICAgIGZ1bmN0aW9uKGRhdGEsIHN0YXR1cyl7XHJcbi8vICAgICAgICAgY29uc29sZS5sb2coXCJEYXRhOiBcIiArIGRhdGEgKyBcIlxcblN0YXR1czogXCIgKyBzdGF0dXMpO1xyXG4vLyAgICAgICAgIExvYWRYTUwoY2FsbGJhY2ssICdsZXZlbHMvJyArICBkYXRhICsgJy54bWwnLCB0cnVlKTtcclxuLy8gICAgIH0pO1xyXG4vLyB9IiwiLy8gQWxpYXNlc1xyXG5sZXQgbG9hZGVyID0gUElYSS5sb2FkZXIsXHJcbiAgICByZXNvdXJjZXMgPSBsb2FkZXIucmVzb3VyY2VzO1xyXG5cclxuZXhwb3J0IGNsYXNzIE15TG9hZGVye1xyXG4gICAgY29uc3RydWN0b3Ioc2V0dXBGdW5jdGlvbikge1xyXG5cclxuICAgICAgICBsb2FkZXJcclxuICAgICAgICAgICAgLmFkZCgnQVJDQURFQ0xBU1NJQycsICdmb250cy9BUkNBREVDTEFTU0lDLlRURicpXHJcbiAgICAgICAgICAgIC5hZGQoJ3Nwcml0ZXMvZXJhc2VyLnBuZycpXHJcbiAgICAgICAgICAgIC5sb2FkKHRoaXMub25Mb2FkLmJpbmQodGhpcywgc2V0dXBGdW5jdGlvbikpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uTG9hZChzZXR1cEZ1bmN0aW9uKXtcclxuICAgICAgICB0aGlzLm1lbnVGb250ID0gcmVzb3VyY2VzLkFSQ0FERUNMQVNTSUM7XHJcblxyXG4gICAgICAgIHNldHVwRnVuY3Rpb24odGhpcyk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBTaW11bGF0aW9uIH0gZnJvbSBcIi4vc2ltdWxhdGlvbi9zaW11bGF0aW9uLmpzXCI7XHJcbmltcG9ydCB7TXlMb2FkZXJ9IGZyb20gJy4vYXBwL215TG9hZGVyLmpzJztcclxuXHJcbmxldCBhcHA7XHJcbmxldCBzaW11bGF0aW9uO1xyXG5cclxuSW5pdFBpeGkoKTtcclxuXHJcbi8vbGV0IGxvYWRlciA9IG5ldyBNeUxvYWRlcihJbml0UGl4aSlcclxuXHJcbi8qKiBtYWtlIHdlYmdsL2NhbnZhcyByZW5kZXJlciAqLyBcclxuZnVuY3Rpb24gSW5pdFBpeGkoKSB7XHJcbiAgLy9QSVhJLnNldHRpbmdzLlBSRUZFUl9FTlYgPSBQSVhJLkVOVi5XRUJHTFxyXG5cclxuICBhcHAgPSBuZXcgUElYSS5BcHBsaWNhdGlvbih7IFxyXG4gICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLCBcclxuICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0LCAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICBhbnRpYWxpYXM6IHRydWUsIFxyXG4gICAgdHJhbnNwYXJlbnQ6IGZhbHNlLCBcclxuICAgIHJlc29sdXRpb246IDEsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IDB4MDAwMDAwICxcclxuICAgIGF1dG9EZW5zaXR5OiB0cnVlXHJcbiAgfSk7XHJcblxyXG4gIC8vIEZpdCB0aGUgY2FudmFzIHRvIHRoZSB3aW5kb3dcclxuICBhcHAucmVuZGVyZXIudmlldy5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcclxuICBhcHAucmVuZGVyZXIudmlldy5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gIC8vIEFkZCB0aGUgY2FudmFzIHRvIHRoZSBkb2N1bWVudFxyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUNhbnZhcycpLmFwcGVuZENoaWxkKGFwcC52aWV3KTtcclxuXHJcbiAgc2ltdWxhdGlvbiA9IG5ldyBTaW11bGF0aW9uKGFwcCk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9